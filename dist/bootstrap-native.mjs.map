{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.11/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.10/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/util/isDisabled.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../node_modules/.pnpm/@thednp+position-observer@1.1.0/node_modules/@thednp/position-observer/dist/index.mjs","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const Ce = \"2.0.11\", Me = \"aria-checked\", De = \"aria-description\", Le = \"aria-describedby\", Oe = \"aria-expanded\", xe = \"aria-haspopup\", X = \"aria-hidden\", ze = \"aria-label\", Ie = \"aria-labelledby\", Pe = \"aria-modal\", Fe = \"aria-pressed\", Be = \"aria-selected\", Ve = \"aria-valuemin\", He = \"aria-valuemax\", Ue = \"aria-valuenow\", We = \"aria-valuetext\", Y = \"abort\", tt = \"beforeunload\", et = \"blur\", nt = \"change\", ot = \"contextmenu\", U = \"DOMContentLoaded\", st = \"DOMMouseScroll\", rt = \"error\", ct = \"focus\", at = \"focusin\", it = \"focusout\", ut = \"gesturechange\", lt = \"gestureend\", dt = \"gesturestart\", ft = \"keydown\", pt = \"keypress\", gt = \"keyup\", mt = \"load\", vt = \"click\", bt = \"dblclick\", Et = \"mousedown\", ht = \"mouseup\", yt = \"hover\", wt = \"mouseenter\", At = \"mouseleave\", St = \"mousein\", kt = \"mouseout\", Nt = \"mouseover\", Tt = \"mousemove\", Ct = \"mousewheel\", Mt = \"move\", Dt = \"orientationchange\", Lt = \"pointercancel\", Ot = \"pointerdown\", xt = \"pointerleave\", zt = \"pointermove\", It = \"pointerup\", Pt = \"readystatechange\", Ft = \"reset\", Bt = \"resize\", Vt = \"select\", Ht = \"selectend\", Ut = \"selectstart\", Wt = \"scroll\", Rt = \"submit\", Qt = \"touchstart\", jt = \"touchmove\", Kt = \"touchcancel\", qt = \"touchend\", Gt = \"unload\", Re = {\n  DOMContentLoaded: U,\n  DOMMouseScroll: st,\n  abort: Y,\n  beforeunload: tt,\n  blur: et,\n  change: nt,\n  click: vt,\n  contextmenu: ot,\n  dblclick: bt,\n  error: rt,\n  focus: ct,\n  focusin: at,\n  focusout: it,\n  gesturechange: ut,\n  gestureend: lt,\n  gesturestart: dt,\n  hover: yt,\n  keydown: ft,\n  keypress: pt,\n  keyup: gt,\n  load: mt,\n  mousedown: Et,\n  mousemove: Tt,\n  mousein: St,\n  mouseout: kt,\n  mouseenter: wt,\n  mouseleave: At,\n  mouseover: Nt,\n  mouseup: ht,\n  mousewheel: Ct,\n  move: Mt,\n  orientationchange: Dt,\n  pointercancel: Lt,\n  pointerdown: Ot,\n  pointerleave: xt,\n  pointermove: zt,\n  pointerup: It,\n  readystatechange: Pt,\n  reset: Ft,\n  resize: Bt,\n  scroll: Wt,\n  select: Vt,\n  selectend: Ht,\n  selectstart: Ut,\n  submit: Rt,\n  touchcancel: Kt,\n  touchend: qt,\n  touchmove: jt,\n  touchstart: Qt,\n  unload: Gt\n}, Qe = \"drag\", je = \"dragstart\", Ke = \"dragenter\", qe = \"dragleave\", Ge = \"dragover\", Ze = \"dragend\", _e = \"loadstart\", $e = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Je = { down: \"mousedown\", up: \"mouseup\" }, Xe = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], Ye = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, tn = { in: \"focusin\", out: \"focusout\" }, Zt = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', en = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, nn = \"Alt\", on = \"ArrowDown\", sn = \"ArrowUp\", rn = \"ArrowLeft\", cn = \"ArrowRight\", an = \"Backspace\", un = \"CapsLock\", ln = \"Control\", dn = \"Delete\", fn = \"Enter\", pn = \"NumpadEnter\", gn = \"Escape\", mn = \"Insert\", vn = \"Meta\", bn = \"Pause\", En = \"ScrollLock\", hn = \"Shift\", yn = \"Space\", wn = \"Tab\", _t = \"animationDuration\", $t = \"animationDelay\", W = \"animationName\", C = \"animationend\", Jt = \"transitionDuration\", Xt = \"transitionDelay\", M = \"transitionend\", R = \"transitionProperty\", An = \"addEventListener\", Sn = \"removeEventListener\", kn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, Nn = \"offsetHeight\", Tn = \"offsetWidth\", Cn = \"scrollHeight\", Mn = \"scrollWidth\", Dn = \"tabindex\", Ln = navigator.userAgentData, { userAgent: Yt } = navigator, On = Yt, xn = () => {\n  const t = /iPhone|iPad|iPod|Android/i;\n  return navigator?.userAgentData?.brands.some(\n    (e) => t.test(e.brand)\n  ) || t.test(navigator?.userAgent) || !1;\n}, zn = () => {\n  const t = /(iPhone|iPod|iPad)/;\n  return navigator?.userAgentData?.brands.some(\n    (e) => t.test(e.brand)\n  ) || t.test(\n    navigator?.userAgent\n  ) || !1;\n}, In = () => navigator?.userAgent?.includes(\"Firefox\") || !1, te = () => typeof CSS > \"u\" || !CSS.supports ? !1 : CSS.supports(\"-webkit-backdrop-filter\", \"none\"), Pn = () => [\"webkitPerspective\", \"perspective\"].some((t) => t in document.head.style), ee = () => {\n}, Q = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(\n    e,\n    n,\n    s\n  );\n}, j = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(\n    e,\n    n,\n    s\n  );\n}, ne = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), j(t, e, s, o));\n  };\n  Q(t, e, s, o);\n}, Fn = () => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    ne(document, U, ee, e);\n  } catch {\n  }\n  return t;\n}, Bn = () => [\"webkitTransform\", \"transform\"].some((t) => t in document.head.style), Vn = () => \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, Hn = () => [\"webkitAnimation\", \"animation\"].some((t) => t in document.head.style), Un = () => [\"webkitTransition\", \"transition\"].some((t) => t in document.head.style), K = (t, e) => t.getAttribute(e), Wn = (t, e, n) => e.getAttributeNS(t, n), oe = (t, e) => t.hasAttribute(e), Rn = (t, e, n) => e.hasAttributeNS(t, n), Qn = (t, e, n) => t.setAttribute(e, n), jn = (t, e, n, o) => e.setAttributeNS(t, n, o), Kn = (t, e) => t.removeAttribute(e), qn = (t, e, n) => e.removeAttributeNS(t, n), Gn = (t, ...e) => {\n  t.classList.add(...e);\n}, Zn = (t, ...e) => {\n  t.classList.remove(...e);\n}, _n = (t, e) => t.classList.contains(e), { body: $n } = document, { documentElement: Jn } = document, { head: Xn } = document, Yn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, u = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, i = (t) => u(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  set: (t, e, n) => {\n    if (!i(t)) return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  getAllFor: (t) => E.get(t) || null,\n  get: (t, e) => {\n    if (!i(t) || !e) return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !i(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, to = (t, e) => L.get(t, e), eo = (t) => t?.charAt(0).toUpperCase() + t?.slice(1), P = (t) => t?.trim().replace(\n  /(?:^\\w|[A-Z]|\\b\\w)/g,\n  (e, n) => n === 0 ? e.toLowerCase() : e.toUpperCase()\n).replace(/\\s+/g, \"\"), N = (t) => typeof t == \"string\" || !1, q = (t) => v(t) && t.constructor.name === \"Window\" || !1, G = (t) => u(t) && t.nodeType === 9 || !1, d = (t) => G(t) ? t : u(t) ? t.ownerDocument : q(t) ? t.document : globalThis.document, T = (t, ...e) => Object.assign(t, ...e), se = (t) => {\n  if (!t) return;\n  if (N(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = se(e);\n  if (!n) return;\n  const o = { ...t };\n  return delete o.tagName, T(n, o);\n}, re = (t, e) => {\n  if (!t || !e) return;\n  if (N(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = re(t, n);\n  if (!o) return;\n  const s = { ...e };\n  return delete s.tagName, T(o, s);\n}, Z = (t, e) => t.dispatchEvent(e), no = (t, e, n) => n.indexOf(t) === e, f = (t, e, n) => {\n  const o = getComputedStyle(t, n), s = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return o.getPropertyValue(s);\n}, ce = (t) => {\n  const e = f(t, W), n = f(t, $t), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ae = (t) => {\n  const e = f(t, W), n = f(t, _t), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, oo = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ae(t), r = ce(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Z(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ie = (t) => {\n  const e = f(t, R), n = f(t, Xt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ue = (t) => {\n  const e = f(t, R), n = f(t, Jt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, so = (t, e) => {\n  let n = 0;\n  const o = new Event(M), s = ue(t), r = ie(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(M, a), n = 1);\n    };\n    t.addEventListener(M, a), setTimeout(() => {\n      n || Z(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ro = (t) => Float32Array.from(Array.from(t)), co = (t) => Float64Array.from(Array.from(t)), ao = (t, e) => t.focus(e), io = (t) => t?.trim().replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/\\s+/g, \"-\").toLowerCase(), F = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, S = (t) => Object.entries(t), uo = (t, e, n, o) => {\n  if (!i(t)) return e;\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return S(r).forEach(([c, g]) => {\n    const A = o && typeof c == \"string\" && c.includes(o) ? P(c.replace(o, \"\")) : P(c);\n    l[A] = F(g);\n  }), S(s).forEach(([c, g]) => {\n    s[c] = F(g);\n  }), S(e).forEach(([c, g]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? K(t, p) : g;\n  }), a;\n}, lo = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), fo = (t) => Object.keys(t), po = (t) => Object.values(t), go = (t) => Object.fromEntries(t), mo = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && T(n, e), n;\n}, vo = { passive: !0 }, bo = (t) => t.offsetHeight, Eo = (t, e) => {\n  S(e).forEach(([n, o]) => {\n    if (o && N(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, T(t.style, s);\n    }\n  });\n}, O = (t) => v(t) && t.constructor.name === \"Map\" || !1, le = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), ho = {\n  set: (t, e, n, o) => {\n    i(t) && (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  get: (t, e) => {\n    if (!i(t)) return null;\n    const n = m.get(t);\n    return e && n && O(n) ? n.get(e) || null : le(n) ? n : null;\n  },\n  clear: (t, e) => {\n    if (!i(t)) return;\n    const n = m.get(t);\n    e && e.length && O(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, yo = (t) => t.toLowerCase(), wo = (t) => t.toUpperCase(), de = (t, e) => (u(e) ? e : d()).querySelectorAll(t), z = /* @__PURE__ */ new Map();\nfunction _(t) {\n  const { shiftKey: e, code: n } = t, o = d(this), s = [\n    ...de(Zt, this)\n  ].filter(\n    (l) => !oe(l, \"disabled\") && !K(l, X)\n  );\n  if (!s.length) return;\n  const r = s[0], a = s[s.length - 1];\n  n === \"Tab\" && (e && o.activeElement === r ? (a.focus(), t.preventDefault()) : !e && o.activeElement === a && (r.focus(), t.preventDefault()));\n}\nconst I = (t) => z.has(t) === !0, fe = (t) => {\n  I(t) || (Q(t, \"keydown\", _), z.set(t, !0));\n}, pe = (t) => {\n  I(t) && (j(t, \"keydown\", _), z.delete(t));\n}, Ao = (t) => {\n  I(t) ? pe(t) : fe(t);\n}, b = (t) => i(t) && \"offsetWidth\" in t || !1, y = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && b(t)) {\n    const { offsetWidth: g, offsetHeight: A } = t;\n    p = g > 0 ? Math.round(n) / g : 1, c = A > 0 ? Math.round(o) / A : 1;\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, So = (t) => d(t).body, w = (t) => d(t).documentElement, ko = (t) => d(t).head, ge = (t) => u(t) ? (t.nodeName || \"\").toLowerCase() : \"#document\", No = (t) => {\n  const e = q(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, me = (t) => u(t) && t.constructor.name === \"ShadowRoot\" || !1, k = (t) => t.nodeName === \"HTML\" ? t : i(t) && t.assignedSlot || u(t) && t.parentNode || me(t) && t.host || w(t), ve = (t) => t ? G(t) ? t.defaultView : u(t) ? t?.ownerDocument?.defaultView : t : window, be = (t) => u(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, Ee = (t, e) => t.matches(e), D = (t) => f(t, \"position\") === \"static\", he = (t) => f(t, \"position\") === \"fixed\", $ = (t) => [\":popover-open\", \":modal\"].some((e) => {\n  try {\n    return Ee(t, e);\n  } catch {\n    return !1;\n  }\n}), J = (t) => {\n  const e = te(), n = i(t) ? getComputedStyle(t) : t;\n  return n.transform !== \"none\" || n.perspective !== \"none\" || (n.containerType ? n.containerType !== \"normal\" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== \"none\" : !1) || !e && (n.filter ? n.filter !== \"none\" : !1) || [\"transform\", \"perspective\", \"filter\"].some(\n    (o) => (n.willChange || \"\").includes(o)\n  ) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (o) => (n.contain || \"\").includes(o)\n  );\n}, ye = (t) => {\n  let e = k(t);\n  for (; i(e) && !x(e); ) {\n    if (J(e))\n      return e;\n    if ($(e))\n      return null;\n    e = k(e);\n  }\n  return null;\n}, x = (t) => [\"html\", \"body\", \"#document\"].includes(ge(t)), B = (t) => {\n  if (!b(t) || he(t))\n    return null;\n  let e = t.offsetParent;\n  return w(t) === e && (e = e.ownerDocument.body), e;\n}, To = (t) => {\n  const e = ve(t);\n  if (!u(t) || $(t))\n    return e;\n  if (!b(t)) {\n    let o = k(t);\n    for (; o && !x(o); ) {\n      if (i(o) && !D(o))\n        return o;\n      o = k(o);\n    }\n    return e;\n  }\n  let n = B(t);\n  for (; n && be(n) && D(n); )\n    n = B(n);\n  return n && x(n) && D(n) && !J(n) ? e : n || ye(t) || e;\n}, we = (t) => {\n  if (!b(t)) return !1;\n  const { width: e, height: n } = y(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, Co = (t, e, n) => {\n  const o = b(e), s = y(\n    t,\n    o && we(e)\n  ), r = { x: 0, y: 0 };\n  if (o) {\n    const a = y(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet V = 0, H = 0;\nconst h = /* @__PURE__ */ new Map(), Ae = (t, e) => {\n  let n = e ? V : H;\n  if (e) {\n    const o = Ae(t), s = h.get(o) || /* @__PURE__ */ new Map();\n    h.has(o) || h.set(o, s), O(s) && !s.has(e) ? (s.set(e, n), V += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    h.has(o) ? n = h.get(o) : (h.set(o, n), H += 1);\n  }\n  return n;\n}, Se = (t) => Array.isArray(t) || !1, Mo = (t) => u(t) && t.nodeName === \"CANVAS\" || !1, ke = (t) => b(t) && !!t.shadowRoot || !1, Do = (t) => {\n  if (!u(t)) return !1;\n  const { top: e, bottom: n } = y(t), { clientHeight: o } = w(t);\n  return e <= o && n >= 0;\n}, Lo = (t) => {\n  if (!i(t)) return !1;\n  const { clientWidth: e, clientHeight: n } = w(t), { top: o, left: s, bottom: r, right: a } = y(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, Oo = (t) => Se(t) && t.every(i) || !1, xo = (t) => typeof t == \"function\" || !1, zo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, Io = (t) => b(t) && t.tagName === \"IMG\" || !1, Po = (t) => {\n  if (!N(t)) return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Fo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, Bo = (t) => u(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some(\n  (e) => t.constructor.name.includes(e)\n) || !1, Vo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, Ho = (t) => w(t).dir === \"rtl\", Uo = (t) => u(t) && t.constructor.name.includes(\"SVG\") || !1, Ne = (t, e) => !t || !e ? null : t.closest(e) || Ne(t.getRootNode().host, e) || null, Wo = (t, e) => i(t) ? t : (i(e) ? e : d()).querySelector(t), Te = (t, e) => (u(e) ? e : d()).getElementsByTagName(\n  t\n), Ro = (t) => [...Te(\"*\", t)].filter(ke), Qo = (t, e) => d(e).getElementById(t), jo = (t, e) => (e && u(e) ? e : d()).getElementsByClassName(\n  t\n);\nexport {\n  Yn as ArrayFrom,\n  U as DOMContentLoadedEvent,\n  st as DOMMouseScrollEvent,\n  L as Data,\n  ro as Float32ArrayFrom,\n  co as Float64ArrayFrom,\n  T as ObjectAssign,\n  S as ObjectEntries,\n  go as ObjectFromEntries,\n  lo as ObjectHasOwn,\n  fo as ObjectKeys,\n  po as ObjectValues,\n  ho as Timer,\n  Y as abortEvent,\n  Gn as addClass,\n  An as addEventListener,\n  fe as addFocusTrap,\n  $t as animationDelay,\n  _t as animationDuration,\n  C as animationEndEvent,\n  W as animationName,\n  Me as ariaChecked,\n  Le as ariaDescribedBy,\n  De as ariaDescription,\n  Oe as ariaExpanded,\n  xe as ariaHasPopup,\n  X as ariaHidden,\n  ze as ariaLabel,\n  Ie as ariaLabelledBy,\n  Pe as ariaModal,\n  Fe as ariaPressed,\n  Be as ariaSelected,\n  He as ariaValueMax,\n  Ve as ariaValueMin,\n  Ue as ariaValueNow,\n  We as ariaValueText,\n  tt as beforeunloadEvent,\n  kn as bezierEasings,\n  et as blurEvent,\n  P as camelCase,\n  eo as capitalize,\n  nt as changeEvent,\n  Ne as closest,\n  ot as contextmenuEvent,\n  mo as createCustomEvent,\n  se as createElement,\n  re as createElementNS,\n  Z as dispatchEvent,\n  no as distinct,\n  $n as documentBody,\n  Jn as documentElement,\n  Xn as documentHead,\n  Qe as dragEvent,\n  Ze as dragendEvent,\n  Ke as dragenterEvent,\n  qe as dragleaveEvent,\n  Ge as dragoverEvent,\n  je as dragstartEvent,\n  oo as emulateAnimationEnd,\n  so as emulateTransitionEnd,\n  rt as errorEvent,\n  ao as focus,\n  ct as focusEvent,\n  tn as focusEvents,\n  Zt as focusableSelector,\n  at as focusinEvent,\n  it as focusoutEvent,\n  ut as gesturechangeEvent,\n  lt as gestureendEvent,\n  dt as gesturestartEvent,\n  K as getAttribute,\n  Wn as getAttributeNS,\n  y as getBoundingClientRect,\n  Ro as getCustomElements,\n  d as getDocument,\n  So as getDocumentBody,\n  w as getDocumentElement,\n  ko as getDocumentHead,\n  ce as getElementAnimationDelay,\n  ae as getElementAnimationDuration,\n  Qo as getElementById,\n  f as getElementStyle,\n  ie as getElementTransitionDelay,\n  ue as getElementTransitionDuration,\n  jo as getElementsByClassName,\n  Te as getElementsByTagName,\n  to as getInstance,\n  ge as getNodeName,\n  No as getNodeScroll,\n  To as getOffsetParent,\n  k as getParentNode,\n  Co as getRectRelativeToOffsetParent,\n  Ae as getUID,\n  ve as getWindow,\n  _ as handleKeyboardNavigation,\n  oe as hasAttribute,\n  Rn as hasAttributeNS,\n  _n as hasClass,\n  I as hasFocusTrap,\n  zn as isApple,\n  Se as isArray,\n  Mo as isCanvas,\n  ke as isCustomElement,\n  G as isDocument,\n  i as isElement,\n  Do as isElementInScrollRange,\n  Lo as isElementInViewport,\n  Oo as isElementsArray,\n  In as isFirefox,\n  xo as isFunction,\n  zo as isHTMLCollection,\n  b as isHTMLElement,\n  Io as isHTMLImageElement,\n  Po as isJSON,\n  O as isMap,\n  Bo as isMedia,\n  xn as isMobile,\n  u as isNode,\n  Vo as isNodeList,\n  le as isNumber,\n  v as isObject,\n  Ho as isRTL,\n  Uo as isSVGElement,\n  we as isScaledElement,\n  me as isShadowRoot,\n  N as isString,\n  be as isTableElement,\n  Fo as isWeakMap,\n  te as isWebKit,\n  q as isWindow,\n  io as kebabCase,\n  nn as keyAlt,\n  on as keyArrowDown,\n  rn as keyArrowLeft,\n  cn as keyArrowRight,\n  sn as keyArrowUp,\n  an as keyBackspace,\n  un as keyCapsLock,\n  ln as keyControl,\n  dn as keyDelete,\n  fn as keyEnter,\n  gn as keyEscape,\n  mn as keyInsert,\n  vn as keyMeta,\n  pn as keyNumpadEnter,\n  bn as keyPause,\n  En as keyScrollLock,\n  hn as keyShift,\n  yn as keySpace,\n  wn as keyTab,\n  en as keyboardEventKeys,\n  ft as keydownEvent,\n  pt as keypressEvent,\n  gt as keyupEvent,\n  mt as loadEvent,\n  _e as loadstartEvent,\n  Ee as matches,\n  Je as mouseClickEvents,\n  Xe as mouseHoverEvents,\n  $e as mouseSwipeEvents,\n  vt as mouseclickEvent,\n  bt as mousedblclickEvent,\n  Et as mousedownEvent,\n  wt as mouseenterEvent,\n  yt as mousehoverEvent,\n  St as mouseinEvent,\n  At as mouseleaveEvent,\n  Tt as mousemoveEvent,\n  kt as mouseoutEvent,\n  Nt as mouseoverEvent,\n  ht as mouseupEvent,\n  Ct as mousewheelEvent,\n  Mt as moveEvent,\n  Re as nativeEvents,\n  ee as noop,\n  uo as normalizeOptions,\n  F as normalizeValue,\n  j as off,\n  Nn as offsetHeight,\n  Tn as offsetWidth,\n  Q as on,\n  ne as one,\n  Dt as orientationchangeEvent,\n  vo as passiveHandler,\n  Lt as pointercancelEvent,\n  Ot as pointerdownEvent,\n  xt as pointerleaveEvent,\n  zt as pointermoveEvent,\n  It as pointerupEvent,\n  Wo as querySelector,\n  de as querySelectorAll,\n  Pt as readystatechangeEvent,\n  bo as reflow,\n  Kn as removeAttribute,\n  qn as removeAttributeNS,\n  Zn as removeClass,\n  Sn as removeEventListener,\n  pe as removeFocusTrap,\n  Ft as resetEvent,\n  Bt as resizeEvent,\n  Wt as scrollEvent,\n  Cn as scrollHeight,\n  Mn as scrollWidth,\n  Vt as selectEvent,\n  Ht as selectendEvent,\n  Ut as selectstartEvent,\n  Qn as setAttribute,\n  jn as setAttributeNS,\n  Eo as setElementStyle,\n  Rt as submitEvent,\n  Pn as support3DTransform,\n  Hn as supportAnimation,\n  Fn as supportPassive,\n  Vn as supportTouch,\n  Bn as supportTransform,\n  Un as supportTransition,\n  Dn as tabindex,\n  yo as toLowerCase,\n  wo as toUpperCase,\n  Ao as toggleFocusTrap,\n  Ye as touchEvents,\n  Kt as touchcancelEvent,\n  qt as touchendEvent,\n  jt as touchmoveEvent,\n  Qt as touchstartEvent,\n  Xt as transitionDelay,\n  Jt as transitionDuration,\n  M as transitionEndEvent,\n  R as transitionProperty,\n  Gt as unloadEvent,\n  On as userAgent,\n  Ln as userAgentData,\n  Ce as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const g = \"2.0.10\", e = {}, f = (t) => {\n  const { type: n, currentTarget: c } = t;\n  e[n].forEach((a, s) => {\n    c === s && a.forEach((o, i) => {\n      i.apply(s, [t]), typeof o == \"object\" && o.once && r(s, n, i, o);\n    });\n  });\n}, E = (t, n, c, a) => {\n  e[n] || (e[n] = /* @__PURE__ */ new Map());\n  const s = e[n];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(\n    t\n  ), { size: i } = o;\n  o.set(c, a), i || t.addEventListener(\n    n,\n    f,\n    a\n  );\n}, r = (t, n, c, a) => {\n  const s = e[n], o = s && s.get(t), i = o && o.get(c), d = i !== void 0 ? i : a;\n  o && o.has(c) && o.delete(c), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[n], (!o || !o.size) && t.removeEventListener(\n    n,\n    f,\n    d\n  );\n}, M = E, p = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  p as off,\n  M as on,\n  e as registry,\n  r as removeListener,\n  g as version\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = \"fade\";\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = \"show\";\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = \"data-bs-dismiss\";\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = \"alert\";\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = \"Alert\";\nexport default alertComponent;\n","import { getAttribute, hasClass } from \"@thednp/shorty\";\n\n/**\n * Check if interactive element is disabled.\n * @param target either a `<button>` or an `<a>`\n * @returns whether the target is disabled\n */\nconst isDisabled = (target: Element) => {\n  return hasClass(target, \"disabled\") ||\n    getAttribute(target, \"disabled\") === \"true\";\n};\n\nexport default isDisabled;\n","import { version } from \"../package.json\";\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport {\n  Data,\n  isElement,\n  isString,\n  normalizeOptions,\n  ObjectKeys,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport type { BaseOptions } from \"~/interface/baseComponent\";\nimport Version from \"~/version\";\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: Element;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `Element` or selector string\n   * @param config component instance options\n   */\n  constructor(target: Element | string, config?: BaseOptions) {\n    let element: Element | null;\n\n    try {\n      if (isElement(target)) {\n        element = target as Element;\n      } else if (isString(target)) {\n        element = querySelector(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else @preserve */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options = this.defaults && ObjectKeys(this.defaults).length\n      ? normalizeOptions(element, this.defaults, config || {}, \"bs\")\n      : /* istanbul ignore next @preserve */ {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return \"BaseComponent\";\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach((prop) => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  PointerEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"~/strings/fadeClass\";\nimport showClass from \"~/strings/showClass\";\nimport dataBsDismiss from \"~/strings/dataBsDismiss\";\nimport alertString from \"~/strings/alertString\";\nimport alertComponent from \"~/strings/alertComponent\";\nimport isDisabled from \"~/util/isDisabled\";\nimport type { AlertEvent } from \"~/interface/alert\";\n\nimport BaseComponent from \"./base-component\";\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: Element) =>\n  getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: Element) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `close.bs.${alertString}`,\n);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `closed.bs.${alertString}`,\n);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: Element | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector<HTMLElement>(\n      alertDismissSelector,\n      this.element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = (e: PointerEvent<HTMLElement>) => {\n    const { element, dismiss } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || !hasClass(element, showClass)) return;\n    // istanbul ignore if @preserve\n    if (e && dismiss && isDisabled(dismiss)) return;\n    dispatchEvent(element, closeAlertEvent);\n\n    if (closeAlertEvent.defaultPrevented) return;\n\n    removeClass(element, showClass);\n\n    if (hasClass(element, fadeClass)) {\n      emulateTransitionEnd(element, () => alertTransitionEnd(this));\n    } else alertTransitionEnd(this);\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, close);\n    }\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = \"active\";\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = \"data-bs-toggle\";\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = \"button\";\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = \"Button\";\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  PointerEvent,\n  removeClass,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"~/strings/activeClass\";\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport buttonString from \"~/strings/buttonString\";\nimport buttonComponent from \"~/strings/buttonComponent\";\nimport BaseComponent from \"./base-component\";\nimport isDisabled from \"~/util/isDisabled\";\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: Element) =>\n  getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: Element) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  declare isActive: boolean;\n  declare element: HTMLElement;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: Element | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: PointerEvent<HTMLElement>) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    // istanbul ignore if @preserve\n    if (isDisabled(element)) return;\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? \"false\" : \"true\");\n    this.isActive = hasClass(element, activeClass);\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = \"data-bs-target\";\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = \"carousel\";\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = \"Carousel\";\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = \"data-bs-parent\";\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = \"data-bs-container\";\nexport default dataBsContainer;\n","import {\n  closest,\n  getAttribute,\n  getDocument,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport dataBsParent from \"../strings/dataBsParent\";\nimport dataBsContainer from \"../strings/dataBsContainer\";\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = <T extends Element = HTMLElement>(element: T) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, \"href\"];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map((att) => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent\n          ? closest<T>(element, attValue)\n          : querySelector<T>(attValue, doc);\n      }\n      return null;\n    })\n    .filter((x) => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  DragEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isMobile,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  PointerEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  TouchEvent,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"~/strings/activeClass\";\nimport dataBsTarget from \"~/strings/dataBsTarget\";\nimport carouselString from \"~/strings/carouselString\";\nimport carouselComponent from \"~/strings/carouselComponent\";\nimport getTargetElement from \"~/util/getTargetElement\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport type { CarouselEvent, CarouselOptions } from \"~/interface/carousel\";\n\ntype CarouselEventProperties = {\n  relatedTarget: EventTarget & HTMLElement;\n  from: number;\n  to: number;\n  direction: \"left\" | \"right\";\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = \"data-bs-slide-to\";\nconst dataBsSlide = \"data-bs-slide\";\nconst pausedClass = \"paused\";\nconst touchEvent = isMobile() ? touchstartEvent : pointerdownEvent;\nconsole.log({ isMobile: isMobile(), touchEvent })\n\nconst carouselDefaults: CarouselOptions = {\n  pause: \"hover\",\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: Element) =>\n  getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: Element) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (\n      self.cycle && !getDocument(element).hidden && options.interval &&\n      !self.isPaused\n    ) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || getTargetElement(this);\n  const self = element && getCarouselInstance(element);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n  // istanbul ignore if @preserve\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(\n    getAttribute(this, dataBsSlideTo) ||\n    // istanbul ignore next @preserve\n    0\n  );\n\n  // istanbul ignore else @preserve\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || getTargetElement(this);\n  const self = element && getCarouselInstance(element);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n  // istanbul ignore if @preserve\n  if (!self || self.isAnimating) return;\n\n  const orientation = getAttribute(this, dataBsSlide);\n\n  // istanbul ignore else @preserve\n  if (orientation === \"next\") {\n    self.next();\n  } else if (orientation === \"prev\") {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = (\n  { code, target }: KeyboardEvent & { target: Node },\n) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll<HTMLElement>(carouselSelector, doc)]\n    .filter((x) => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (\n    !self || self.isAnimating || /textarea|input|select/i.test(target.nodeName)\n  ) return;\n\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  // istanbul ignore else @preserve\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler<T extends HTMLElement>(\n  this: T,\n  e: Event & (DragEvent<T> | TouchEvent<T>),\n) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // Only prevent default if we're touching the carousel content\n  // but not the controls or indicators\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    !self.controls.includes(target as HTMLElement) &&\n    !self.controls.includes(target?.parentElement as HTMLElement) &&\n    (!self.indicator || !self.indicator.contains(target))\n  ) {\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(\n  this: HTMLElement,\n  e: PointerEvent<HTMLElement>,\n) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (!self || self.isAnimating || self.isTouch) return;\n\n  // filter pointer event on controls & indicators\n  const { controls, indicator } = self;\n  // istanbul ignore else @preserve\n  if (\n    ![...controls, indicator].every((el) =>\n      el && (el === target || el.contains(target))\n    ) && this.contains(target)\n  ) {\n    startX = e.pageX;\n\n    // istanbul ignore else @preserve\n    // if (this.contains(target)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n    // }\n  } else {\n    // e.stopImmediatePropagation();\n\n    // e.stopPropagation();\n    // e.preventDefault();\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent<HTMLElement>) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent<HTMLElement>) => {\n  const { target } = e;\n  const doc = getDocument(target);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c) as Carousel)\n    .find((i) => i.isTouch) as Carousel;\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n  endX = e.pageX;\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (\n    !doc.getSelection()?.toString().length &&\n    element.contains(target) &&\n    Math.abs(startX - endX) > 120\n  ) {\n    // determine next index to slide to\n    // istanbul ignore else @preserve\n    if (currentX < startX) {\n      self.to(index + (RTL ? -1 : 1));\n    } else if (currentX > startX) {\n      self.to(index + (RTL ? 1 : -1));\n    }\n  }\n\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(\n    getDocument(element),\n    pointermoveEvent,\n    carouselPointerMoveHandler,\n    passiveHandler,\n  );\n  action(\n    getDocument(element),\n    pointerupEvent,\n    carouselPointerUpHandler,\n    passiveHandler,\n  );\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector<HTMLElement>(\n    `.${carouselItem}.${activeClass}`,\n    element,\n  );\n  return activeItem ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare element: HTMLElement;\n  declare options: CarouselOptions;\n  declare direction: \"right\" | \"left\";\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? \"right\" : \"left\";\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) return;\n\n    const activeIndex = getActiveIndex(this);\n    // recover item from disposed instance\n    const transitionItem = [...slides].find((s) =>\n      matches(s, `.${carouselItem}-next`)\n    );\n    this.index = activeIndex;\n\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll<HTMLElement>(`[${dataBsSlide}]`, element),\n      ...querySelectorAll<HTMLElement>(\n        `[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`,\n        doc,\n      ),\n    ].filter((c, i, ar) => i === ar.indexOf(c));\n\n    this.indicator = querySelector<HTMLElement>(\n      `.${carouselString}-indicators`,\n      element,\n    );\n\n    // a LIVE collection is preffered\n    this.indicators = [\n      ...(this.indicator\n        ? querySelectorAll<HTMLElement>(`[${dataBsSlideTo}]`, this.indicator)\n        /* istanbul ignore next @preserve */ : []),\n      ...querySelectorAll<HTMLElement>(\n        `[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`,\n        doc,\n      ),\n    ].filter((c, i, ar) => i === ar.indexOf(c));\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true\n      ? carouselDefaults.interval\n      : options.interval;\n\n    // set first slide active if none\n    // istanbul ignore next @preserve - impossible to test\n    if (transitionItem) {\n      this.index = [...slides].indexOf(transitionItem);\n    } else if (activeIndex < 0) {\n      this.index = 0;\n      addClass(slides[0], activeClass);\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // istanbul ignore else @preserve\n    if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n    // attach event handlers\n    this._toggleEventListeners(true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(\n      `.${carouselItem}-next,.${carouselItem}-prev`,\n      this.element,\n    ) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (\n          this.element && !this.isPaused && !this.isTouch &&\n          isElementInScrollRange(element)\n        ) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (this.isPaused || !options.interval) return;\n\n    addClass(element, pausedClass);\n    Timer.set(\n      element,\n      () => {\n        /* ESLint is now happy */\n      },\n      1,\n      pausedClass,\n    );\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (\n      this.isAnimating || activeItem === next ||\n      Timer.get(element, dataBsSlide)\n    ) return;\n\n    // determine transition direction\n    // istanbul ignore else @preserve\n    if (\n      activeItem < next || (activeItem === 0 && next === slides.length - 1)\n    ) {\n      this.direction = RTL ? \"right\" : \"left\"; // next\n    } else if (\n      activeItem > next || (activeItem === slides.length - 1 && next === 0)\n    ) {\n      this.direction = RTL ? \"left\" : \"right\"; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (\n      getElementTransitionDuration(slides[next]) &&\n      hasClass(element, \"slide\")\n    ) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          // the instance might get diposed mid-animation\n          emulateTransitionEnd(\n            slides[next],\n            () =>\n              this.slides && this.slides.length &&\n              carouselTransitionEndHandler(this),\n          );\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          // istanbul ignore else @preserve\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(\n        element,\n        pointerdownEvent,\n        carouselPointerDownHandler,\n        passiveHandler,\n      );\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach((arrow) => {\n        action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach((indicator) => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test in playwright\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = \"collapsing\";\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  MouseEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport collapsingClass from \"~/strings/collapsingClass\";\nimport showClass from \"~/strings/showClass\";\nimport collapseString from \"~/strings/collapseString\";\nimport collapseComponent from \"~/strings/collapseComponent\";\nimport getTargetElement from \"~/util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"~/interface/collapse\";\nimport isDisabled from \"~/util/isDisabled\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: Element) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: Element) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element as HTMLElement);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n\n  // istanbul ignore if @preserve\n  if (trigger && isDisabled(trigger)) return;\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  self.toggle();\n  // event target is anchor link #398\n  if (trigger?.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare element: HTMLElement;\n  declare options: CollapseOptions;\n  declare parent: Element | null;\n  declare triggers: Element[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) => {\n        action(btn, mouseclickEvent, collapseClickHandler);\n      });\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","import { isElement, isFunction } from \"@thednp/shorty\";\n\n//#region package.json\nvar version = \"1.1.0\";\n\n//#endregion\n//#region src/index.ts\nconst callbackModes = [\n\t\"all\",\n\t\"intersecting\",\n\t\"update\"\n];\nconst errorString = \"PositionObserver Error\";\n/**\n* The PositionObserver class is a utility class that observes the position\n* of DOM elements and triggers a callback when their position changes.\n*/\nvar PositionObserver = class {\n\tentries;\n\tstatic version = version;\n\t/** `PositionObserver.tick` */\n\t_t;\n\t/** `PositionObserver.root` */\n\t_r;\n\t/** `PositionObserver.callbackMode` */\n\t_cm;\n\t/** `PositionObserver.root.clientWidth` */\n\t_w;\n\t/** `PositionObserver.root.clientHeight` */\n\t_h;\n\t/** `IntersectionObserver.options.rootMargin` */\n\t_rm;\n\t/** `IntersectionObserver.options.threshold` */\n\t_th;\n\t/** `PositionObserver.callback` */\n\t_c;\n\t/**\n\t* The constructor takes two arguments, a `callback`, which is called\n\t* whenever the position of an observed element changes and an `options` object.\n\t* The callback function takes an array of `PositionObserverEntry` objects\n\t* as its first argument and the PositionObserver instance as its second argument.\n\t*\n\t* @param callback the callback that applies to all targets of this observer\n\t* @param options the options of this observer\n\t*/\n\tconstructor(callback, options) {\n\t\tif (!isFunction(callback)) throw new Error(`${errorString}: ${callback} is not a function.`);\n\t\tthis.entries = /* @__PURE__ */ new Map();\n\t\tthis._c = callback;\n\t\tthis._t = 0;\n\t\tconst root = isElement(options?.root) ? options.root : document?.documentElement;\n\t\tthis._r = root;\n\t\tthis._rm = options?.rootMargin;\n\t\tthis._th = options?.threshold;\n\t\t/* istanbul ignore next @preserve */\n\t\tthis._cm = callbackModes.indexOf(options?.callbackMode || \"intersecting\");\n\t\tthis._w = root.clientWidth;\n\t\tthis._h = root.clientHeight;\n\t}\n\t/**\n\t* Start observing the position of the specified element.\n\t* If the element is not currently attached to the DOM,\n\t* it will NOT be added to the entries.\n\t*\n\t* @param target an `Element` target\n\t*/\n\tobserve = (target) => {\n\t\tif (!isElement(target)) throw new Error(`${errorString}: ${target} is not an instance of Element.`);\n\t\t/* istanbul ignore else @preserve - a guard must be set */\n\t\tif (!this._r.contains(target)) return;\n\t\tthis._n(target).then((ioEntry) => {\n\t\t\t/* istanbul ignore else @preserve - don't allow duplicate entries */\n\t\t\tif (ioEntry.boundingClientRect && !this.getEntry(target)) this.entries.set(target, ioEntry);\n\t\t\t/* istanbul ignore else @preserve */\n\t\t\tif (!this._t) this._t = requestAnimationFrame(this._rc);\n\t\t});\n\t};\n\t/**\n\t* Stop observing the position of the specified element.\n\t*\n\t* @param target an `Element` target\n\t*/\n\tunobserve = (target) => {\n\t\t/* istanbul ignore else @preserve */\n\t\tif (this.entries.has(target)) this.entries.delete(target);\n\t};\n\t/**\n\t* Private method responsible for all the heavy duty,\n\t* the observer's runtime.\n\t* `PositionObserver.runCallback`\n\t*/\n\t_rc = () => {\n\t\t/* istanbul ignore if @preserve - a guard must be set */\n\t\tif (!this.entries.size) {\n\t\t\tthis._t = 0;\n\t\t\treturn;\n\t\t}\n\t\tconst { clientWidth, clientHeight } = this._r;\n\t\tconst queue = new Promise((resolve) => {\n\t\t\tconst updates = [];\n\t\t\tthis.entries.forEach(({ target, boundingClientRect: oldBoundingBox, isIntersecting: oldIsIntersecting }) => {\n\t\t\t\t/* istanbul ignore if @preserve - a guard must be set when target has been removed */\n\t\t\t\tif (!this._r.contains(target)) return;\n\t\t\t\tthis._n(target).then((ioEntry) => {\n\t\t\t\t\t/* istanbul ignore if @preserve - make sure to only count visible entries */\n\t\t\t\t\tif (!ioEntry.isIntersecting) {\n\t\t\t\t\t\tif (this._cm === 1) return;\n\t\t\t\t\t\telse if (this._cm === 2) {\n\t\t\t\t\t\t\tif (oldIsIntersecting) {\n\t\t\t\t\t\t\t\tthis.entries.set(target, ioEntry);\n\t\t\t\t\t\t\t\tupdates.push(ioEntry);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst { left, top } = ioEntry.boundingClientRect;\n\t\t\t\t\t/* istanbul ignore else @preserve - only schedule entries that changed position */\n\t\t\t\t\tif (oldBoundingBox.top !== top || oldBoundingBox.left !== left || this._w !== clientWidth || this._h !== clientHeight) {\n\t\t\t\t\t\tthis.entries.set(target, ioEntry);\n\t\t\t\t\t\tupdates.push(ioEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis._w = clientWidth;\n\t\t\tthis._h = clientHeight;\n\t\t\tresolve(updates);\n\t\t});\n\t\tthis._t = requestAnimationFrame(async () => {\n\t\t\tconst updates = await queue;\n\t\t\t/* istanbul ignore else @preserve */\n\t\t\tif (updates.length) this._c(updates, this);\n\t\t\tthis._rc();\n\t\t});\n\t};\n\t/**\n\t* Check intersection status and resolve it\n\t* right away.\n\t*\n\t* `PositionObserver.newEntryForTarget`\n\t*\n\t* @param target an `Element` target\n\t*/\n\t_n = (target) => {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst intersectionObserver = new IntersectionObserver(([ioEntry], ob) => {\n\t\t\t\tob.disconnect();\n\t\t\t\tresolve(ioEntry);\n\t\t\t}, {\n\t\t\t\tthreshold: this._th,\n\t\t\t\trootMargin: this._rm\n\t\t\t});\n\t\t\tintersectionObserver.observe(target);\n\t\t});\n\t};\n\t/**\n\t* Find the entry for a given target.\n\t*\n\t* @param target an `HTMLElement` target\n\t*/\n\tgetEntry = (target) => this.entries.get(target);\n\t/**\n\t* Immediately stop observing all elements.\n\t*/\n\tdisconnect = () => {\n\t\tcancelAnimationFrame(this._t);\n\t\tthis.entries.clear();\n\t\tthis._t = 0;\n\t};\n};\n\n//#endregion\nexport { PositionObserver as default };\n//# sourceMappingURL=index.mjs.map","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = [\"dropdown\", \"dropup\", \"dropstart\", \"dropend\"];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\"))?.slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\"))?.slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  MouseEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport showClass from \"~/strings/showClass\";\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport dropdownClasses from \"~/strings/dropdownClasses\";\nimport dropdownComponent from \"~/strings/dropdownComponent\";\nimport dropdownMenuClass from \"~/strings/dropdownMenuClass\";\nimport isEmptyAnchor from \"~/util/isEmptyAnchor\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"~/interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: Element) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: Element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: Element & EventTarget };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n  // don't apply any style on mobile view\n  // istanbul ignore if @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") === \"static\") return;\n\n  const RTL = isRTL(element);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n  resetProps.forEach((p) => {\n    const style: { [key: string]: string } = {};\n    style[p] = \"\";\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass = dropdownClasses.find((c) => hasClass(parentElement, c)) ||\n    /* istanbul ignore next @preserve: fallback position */\n    dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: \"100%\" },\n    dropup: { top: \"auto\", bottom: \"100%\" },\n    dropstart: RTL\n      ? { left: \"100%\", right: \"auto\" }\n      : { left: \"auto\", right: \"100%\" },\n    dropend: RTL\n      ? { left: \"auto\", right: \"100%\" }\n      : { left: \"100%\", right: \"auto\" },\n    menuStart: RTL\n      ? { right: \"0\", left: \"auto\" }\n      : { right: \"auto\", left: \"0\" },\n    menuEnd: RTL ? { right: \"auto\", left: \"0\" } : { right: \"0\", left: \"auto\" },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const {\n    left: targetLeft,\n    top: targetTop,\n    width: targetWidth,\n    height: targetHeight,\n  } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed =\n    targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed =\n    targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n    targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n    targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (\n    horizontalClass.includes(positionClass) && leftFullExceed &&\n    rightFullExceed\n  ) {\n    positionClass = dropdownString;\n  }\n  if (\n    positionClass === dropstartString &&\n    (!RTL ? leftFullExceed : rightFullExceed)\n  ) {\n    positionClass = dropendString;\n  }\n  if (\n    positionClass === dropendString &&\n    (RTL ? leftFullExceed : rightFullExceed)\n  ) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: \"auto\",\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust:\n      | { left: \"auto\" | number; right: \"auto\" | number }\n      | undefined = { left: \"auto\", right: \"auto\" };\n    /* istanbul ignore else @preserve */\n    if (!leftExceed && rightExceed && !RTL) {\n      posAjust = { left: \"auto\", right: 0 };\n    }\n    /* istanbul ignore else @preserve */\n    if (leftExceed && !rightExceed && RTL) {\n      posAjust = { left: 0, right: \"auto\" };\n    }\n    /* istanbul ignore else @preserve */\n    if (posAjust) {\n      ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    // istanbul ignore else @preserve\n    if (menuEnd) {\n      const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n        ? \"menuStart\"\n        : /* istanbul ignore next @preserve */ \"menuEnd\";\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n  // trigger updated event\n  dispatchEvent(parentElement, updatedDropdownEvent);\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return Array.from(menu.children)\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c as HTMLElement;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild as HTMLElement;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: Element,\n): Element | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<Element>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore if @preserve\n  if (!isHTMLElement(target)) return;\n\n  // some weird FF bug #409\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const isForm = parentElement &&\n    parentElement.contains(target) &&\n    (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n  if (\n    [mouseclickEvent, mousedownEvent].includes(type) &&\n    isEmptyAnchor(target)\n  ) {\n    e.preventDefault();\n  }\n\n  // istanbul ignore else @preserve\n  if (\n    !isForm && type !== focusEvent && target !== element && target !== menu\n  ) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nfunction dropdownClickHandler(this: HTMLElement, e: MouseEvent<HTMLElement>) {\n  const self = getDropdownInstance(this);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  e.stopPropagation();\n  self.toggle();\n  // istanbul ignore else @preserve\n  if (isEmptyAnchor(this)) e.preventDefault();\n}\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: Element, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this) as HTMLElement;\n  /* istanbul ignore if @preserve */\n  if (!element) return;\n\n  const self = getDropdownInstance(element);\n  const { activeElement } = getDocument(element) as Document & {\n    activeElement: HTMLElement;\n  };\n\n  // istanbul ignore if @preserve\n  if (!self || !activeElement) return;\n\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (\n    menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n  ) {\n    let idx = menuItems.indexOf(activeElement);\n    // istanbul ignore else @preserve\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    // istanbul ignore else @preserve\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare element: HTMLElement;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName<HTMLElement>(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    // istanbul ignore if @preserve\n    if (!menu) return;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = menu;\n    this._observer = new PositionObserver(\n      () => styleDropdown(this),\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (open) return;\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement &&\n      getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n      (e) => {\n        e.relatedTarget = element;\n      },\n    );\n\n    dispatchEvent(parentElement, showDropdownEvent);\n    // istanbul ignore if @preserve\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"true\");\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element as HTMLElement;\n    });\n\n    dispatchEvent(parentElement, hideDropdownEvent);\n    // istanbul ignore if @preserve\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"false\");\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = \"modal\";\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName<HTMLElement>(fixedTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(fixedBottomClass, parent),\n  ...getElementsByClassName<HTMLElement>(stickyTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(positionStickyClass, parent),\n  ...getElementsByClassName<HTMLElement>(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: Element) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: Element) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: Element, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad\n    ? /* istanbul ignore next */ 0\n    : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore if @preserve\n  if (!overflow) return;\n\n  setElementStyle(bd, {\n    overflow: \"hidden\",\n    paddingRight: `${bodyPad + sbWidth}px`,\n  });\n\n  // istanbul ignore if @preserve\n  if (!fixedItems.length) return;\n\n  fixedItems.forEach((fixed) => {\n    const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n    fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n    // istanbul ignore else @preserve\n    if (\n      [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n    ) {\n      const itemMValue = getElementStyle(fixed, \"marginRight\");\n      fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n    }\n  });\n};\n","/** @type {string} */\nconst offcanvasString = \"offcanvas\";\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from \"@thednp/shorty\";\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: \"div\",\n  className: \"popup-container\",\n}) as HTMLElement;\n\nconst appendPopup = (target: Element, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: Element, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: Element, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== \"BODY\"\n    ? customContainer\n    : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: Element) => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: Element,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: Element): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport dataBsDismiss from \"~/strings/dataBsDismiss\";\nimport fadeClass from \"~/strings/fadeClass\";\nimport showClass from \"~/strings/showClass\";\nimport modalString from \"~/strings/modalString\";\nimport modalComponent from \"~/strings/modalComponent\";\nimport offcanvasComponent from \"~/strings/offcanvasComponent\";\nimport getTargetElement from \"~/util/getTargetElement\";\nimport { measureScrollbar, setScrollbar } from \"~/util/scrollbar\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"~/util/backdrop\";\nimport isVisible from \"~/util/isVisible\";\nimport { hasPopup } from \"~/util/popupContainer\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport { ModalEvent, ModalOptions } from \"~/interface/modal\";\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: Element & EventTarget | null;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: Element) =>\n  getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: Element) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `show.bs.${modalString}`,\n);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `shown.bs.${modalString}`,\n);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hide.bs.${modalString}`,\n);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hidden.bs.${modalString}`,\n);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } =\n    element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? \"paddingRight\"\n      // istanbul ignore next @preserve\n      : \"paddingLeft\";\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<\n      CSS4Declaration\n    >;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n\n  if (add) self._observer.observe(element);\n  else self._observer.disconnect();\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: \"\", display: \"\" });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget || undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element as HTMLElement);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget || undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: \"block\" });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (\n    options.backdrop && hasFade && hasClass(overlay, showClass) &&\n    !getCurrentOpen(element)\n  ) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nfunction modalClickHandler(this: HTMLElement, e: MouseEvent<HTMLElement>) {\n  const element = getTargetElement(this);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  // istanbul ignore else @preserve\n  if (this.tagName === \"A\") e.preventDefault();\n  self.relatedTarget = this;\n  self.toggle();\n}\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<Element>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { options } = self;\n  // istanbul ignore else @preserve\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // the timer is needed\n  // istanbul ignore if @preserve\n  if (!self || !currentTarget || Timer.get(currentTarget)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(currentTarget)?.getSelection()?.toString()\n    .length;\n  const targetInsideDialog = modalDialog.contains(target);\n  const dismiss = target && closest(target, modalDismissSelector);\n\n  // istanbul ignore else @preserve\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      currentTarget,\n      () => {\n        addClass(currentTarget, modalStaticClass);\n        emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (\n    dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)\n  ) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare element: HTMLElement;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: EventTarget & HTMLElement | null;\n  declare _observer: ResizeObserver;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector<HTMLElement>(\n      `.${modalString}-dialog`,\n      element,\n    );\n\n    // istanbul ignore if @preserve\n    if (!modalDialog) return;\n\n    this.modalDialog = modalDialog;\n    // modal can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        modalToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === \"static\";\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n    this._observer = new ResizeObserver(() => this.update());\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore if @preserve\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n\n    // allow the event to be prevented\n    // istanbul ignore else @preserve\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    // istanbul ignore else @preserve\n    if (currentOpen && currentOpen !== element) {\n      const that = getModalInstance(currentOpen) ||\n        // istanbul ignore next @preserve\n        getInstance<typeof BaseComponent & { hide: () => void }>(\n          currentOpen,\n          offcanvasComponent,\n        );\n      // istanbul ignore else @preserve\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      // istanbul ignore else @preserve\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore if @preserve\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n\n    // istanbul ignore if @preserve\n    if (hideModalEvent.defaultPrevented) return;\n\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, \"true\");\n    removeAttribute(element, ariaModal);\n\n    if (hasFade) emulateTransitionEnd(element, () => beforeModalHide(this));\n    else beforeModalHide(this);\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore if @preserve\n    if (!triggers.length) return;\n\n    triggers.forEach((btn) => {\n      // istanbul ignore else @preserve\n      action(btn, mouseclickEvent, modalClickHandler);\n    });\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsDismiss from \"~/strings/dataBsDismiss\";\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport showClass from \"~/strings/showClass\";\nimport offcanvasString from \"~/strings/offcanvasString\";\nimport offcanvasComponent from \"~/strings/offcanvasComponent\";\nimport modalComponent from \"~/strings/modalComponent\";\n\nimport getTargetElement from \"~/util/getTargetElement\";\nimport isVisible from \"~/util/isVisible\";\nimport { setScrollbar } from \"~/util/scrollbar\";\nimport { hasPopup } from \"~/util/popupContainer\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"~/util/backdrop\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport { OffcanvasEvent, OffcanvasOptions } from \"~/interface/offcanvas\";\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: Element & EventTarget | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: Element) =>\n  getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: Element) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: \"visible\" });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  (element as HTMLElement).blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nfunction offcanvasTriggerHandler(\n  this: HTMLElement,\n  e: MouseEvent<HTMLElement>,\n) {\n  const element = getTargetElement(this);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  self.relatedTarget = this;\n  self.toggle();\n\n  // istanbul ignore else @preserve\n  if (this.tagName === \"A\") e.preventDefault();\n}\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target),\n  );\n  // istanbul ignore else @preserve\n  if (!element) return;\n\n  const offCanvasDismiss = querySelector<HTMLElement>(\n    offcanvasDismissSelector,\n    element,\n  );\n  const self = getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  // istanbul ignore if: a filter is required here @preserve\n  if (overlay.contains(target) && backdrop === \"static\") return;\n\n  // istanbul ignore else @preserve\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target) &&\n      backdrop &&\n      // istanbul ignore next @preserve\n      (!trigger || triggers.includes(target))) ||\n      (offCanvasDismiss &&\n        offCanvasDismiss.contains(target)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target)\n      ? offCanvasDismiss\n      : undefined;\n    self.hide();\n  }\n\n  // istanbul ignore next @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  // istanbul ignore else @preserve\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = undefined;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n  setAttribute(element, \"role\", \"dialog\");\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, \"true\");\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, \"role\");\n  setElementStyle(element, { visibility: \"\" });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget ||\n    triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare element: HTMLElement;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: EventTarget & HTMLElement | undefined;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(\n    target: Element | string,\n    config?: Partial<OffcanvasOptions>,\n  ) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        offcanvasToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = undefined;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n\n    // istanbul ignore else @preserve\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that = getOffcanvasInstance(currentOpen) ||\n        // istanbul ignore next @preserve\n        getInstance<typeof BaseComponent & { hide: () => void }>(\n          currentOpen,\n          modalComponent,\n        );\n\n      // istanbul ignore else @preserve\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) appendOverlay(element, true);\n      else toggleOverlayType();\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      // istanbul ignore next @preserve - this test was done on Modal\n      if (currentOpen && hasClass(overlay, showClass)) hideOverlay();\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n\n    // istanbul ignore else @preserve\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n    beforeOffcanvasHide(this);\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach((btn) => {\n      action(btn, mouseclickEvent, offcanvasTriggerHandler);\n    });\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) emulateTransitionEnd(element, callback);\n    // istanbul ignore next @preserve\n    else callback();\n  }\n}\n","/** @type {string} */\nconst popoverString = \"popover\";\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = \"Popover\";\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = \"tooltip\";\nexport default tooltipString;\n","import tooltipString from \"../strings/tooltipString\";\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : \"\";\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${\n    header + arrow + body\n  }</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: \"top\",\n  bottom: \"bottom\",\n  left: \"start\",\n  right: \"end\",\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  getNodeScroll,\n  getRectRelativeToOffsetParent,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from \"@thednp/shorty\";\n\nimport tipClassPositions from \"./tipClassPositions\";\nimport Tooltip from \"../components/tooltip\";\nimport type { TooltipEvent } from \"../interface/tooltip\";\nimport type { PopoverEvent } from \"../interface/popover\";\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = (self: Tooltip) => {\n  requestAnimationFrame(() => {\n    const tipClasses = /\\b(top|bottom|start|end)+/;\n    const { element, tooltip, container, offsetParent, options, arrow } = self;\n\n    // istanbul ignore if @preserve\n    if (!tooltip) return;\n    const RTL = isRTL(element);\n    const { x: scrollLeft, y: scrollTop } = getNodeScroll(offsetParent);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } =\n      getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container;\n    const parentPosition = getElementStyle(\n      container,\n      \"position\",\n    );\n    const fixedParent = parentPosition === \"fixed\";\n    const scrollbarWidth = fixedParent\n      ? Math.abs(parentCWidth - parentOWidth)\n      : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent\n      ? /* istanbul ignore next @preserve */ scrollbarWidth\n      : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n\n    // reuse observer entry bounding box\n    const observerEntry = self._observer.getEntry(element);\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = observerEntry?.boundingClientRect ||\n      getBoundingClientRect(element, true);\n\n    const {\n      x: elemOffsetLeft,\n      y: elemOffsetTop,\n    } = getRectRelativeToOffsetParent(\n      element,\n      offsetParent,\n      { x: scrollLeft, y: scrollTop },\n    );\n\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = \"\";\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = \"\";\n    let arrowTop: number | string = \"\";\n    let arrowLeft: number | string = \"\";\n    let arrowRight: number | string = \"\";\n\n    const arrowWidth = arrow.offsetWidth || 0;\n    const arrowHeight = arrow.offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed =\n      elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed =\n      elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = [\"left\", \"right\"];\n    const verticals = [\"top\", \"bottom\"];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement)\n      ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n      : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed\n      ? \"top\"\n      : placement;\n    // recompute placement\n    placement = placement === \"top\" && topExceed ? \"bottom\" : placement;\n    placement = placement === \"bottom\" && bottomExceed ? \"top\" : placement;\n    placement = placement === \"left\" && leftExceed ? \"right\" : placement;\n    placement = placement === \"right\" && rightExceed\n      ? \"left\"\n      // istanbul ignore next @preserve\n      : placement;\n\n    // update tooltip/popover class\n    // istanbul ignore else @preserve\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(\n        tipClasses,\n        tipClassPositions[placement],\n      );\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === \"left\") {\n        // LEFT\n        leftPosition = elemOffsetLeft - tipWidth - arrowWidth;\n      } else {\n        // RIGHT\n        leftPosition = elemOffsetLeft + elemWidth + arrowWidth;\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemOffsetTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = elemOffsetTop;\n        bottomPosition = \"\";\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = elemOffsetTop - tipHeight + elemHeight;\n        bottomPosition = \"\";\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = elemOffsetTop - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === \"top\") {\n        topPosition = elemOffsetTop - tipHeight - arrowHeight;\n      } else {\n        // BOTTOM\n        topPosition = elemOffsetTop + elemHeight + arrowHeight;\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = elemOffsetLeft + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = \"auto\";\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = elemOffsetLeft - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === \"\" ? \"\" : `${bottomPosition}px`,\n      left: leftPosition === \"auto\" ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== \"\" ? `${rightPosition}px` : \"\",\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== \"\") {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== \"\") {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== \"\") {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<\n      Record<string, unknown>,\n      TooltipEvent | PopoverEvent\n    >(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  });\n};\n\nexport default styleTip;\n","import getTipTemplate from \"./getTipTemplate\";\nimport tooltipString from \"../strings/tooltipString\";\nimport { TooltipOptions } from \"../interface/tooltip\";\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: \"\",\n  customClass: \"\",\n  trigger: \"hover focus\",\n  placement: \"top\",\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: \"\",\n  dismissible: false,\n  btnClose: \"\",\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = \"data-original-title\";\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = \"Tooltip\";\nexport default tooltipComponent;\n","import {\n  isArray,\n  isFunction,\n  isHTMLElement,\n  isNode,\n  isNodeList,\n  isString,\n} from \"@thednp/shorty\";\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (\n  element: HTMLElement,\n  content: Node[] | Node | string,\n  sanitizeFn?: (s: string) => string,\n) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, \"text/html\");\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (\n    isNodeList(content) || (isArray(content) && content.every(isNode))\n  ) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import {\n  addClass,\n  createElement,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  querySelector,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport tooltipString from \"../strings/tooltipString\";\nimport popoverString from \"../strings/popoverString\";\nimport fadeClass from \"../strings/fadeClass\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport setHtml from \"./setHtml\";\nimport Tooltip from \"../components/tooltip\";\nimport Popover from \"../components/popover\";\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const {\n    title,\n    placement,\n    template,\n    animation,\n    customClass,\n    sanitizeFn,\n    dismissible,\n    content,\n    btnClose,\n  } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = \"end\";\n    tipPositions.right = \"start\";\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement(\"div\") as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  /* istanbul ignore if @preserve */\n  if (!isHTMLElement(tooltipTemplate)) return;\n\n  // set popover markup\n  self.tooltip = tooltipTemplate.cloneNode(true) as HTMLElement;\n  const { tooltip } = self;\n\n  // set id and role attributes\n  setAttribute(tooltip, \"id\", id);\n  setAttribute(tooltip, \"role\", tooltipString);\n\n  const bodyClass = isTooltip\n    ? `${tooltipString}-inner`\n    : `${popoverString}-body`;\n  const tooltipHeader = isTooltip\n    ? null\n    : querySelector<HTMLElement>(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector<HTMLElement>(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector<HTMLElement>(\n    `.${tipString}-arrow`,\n    tooltip,\n  ) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement(\"div\") as HTMLElement;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement(\"div\") as HTMLElement;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) {\n        titleParts = [...titleParts, btnClose.cloneNode(true)];\n      } else {\n        const tempBtn = createElement(\"div\") as HTMLElement;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      // istanbul ignore else @preserve\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) {\n        contentParts = [...contentParts, btnClose.cloneNode(true)];\n      } else {\n        const tempBtn = createElement(\"div\") as HTMLElement;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  // istanbul ignore else @preserve\n  if (!isTooltip) {\n    // istanbul ignore else @preserve\n    if (title && tooltipHeader) {\n      setHtml(tooltipHeader, titleParts, sanitizeFn);\n    }\n    // istanbul ignore else @preserve\n    if (content && tooltipBody) {\n      setHtml(tooltipBody, contentParts, sanitizeFn);\n    }\n    // set btn\n    self.btn = querySelector<HTMLButtonElement>(\".btn-close\", tooltip) ||\n      undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, \"position-absolute\");\n  addClass(arrow, \"position-absolute\");\n\n  // set popover animation and placement\n  // istanbul ignore else @preserve\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  // istanbul ignore else @preserve\n  if (animation && !hasClass(tooltip, fadeClass)) {\n    addClass(tooltip, fadeClass);\n  }\n  // istanbul ignore else @preserve\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  // istanbul ignore else @preserve\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import {\n  getDocument,\n  getElementStyle,\n  getParentNode,\n  isShadowRoot,\n  isTableElement,\n} from \"@thednp/shorty\";\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: Element) => {\n  const majorBlockTags = [\"HTML\", \"BODY\"];\n  const containers: HTMLElement[] = [];\n  let { parentNode } = element;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as HTMLElement;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode as HTMLElement);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        ((getElementStyle(c, \"position\") !== \"relative\" ||\n          getElementStyle(c, \"position\") === \"relative\" &&\n            c.offsetHeight !== c.scrollHeight) &&\n          containers.slice(i + 1).every((r) =>\n            getElementStyle(r, \"position\") === \"static\"\n          ))\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    /* istanbul ignore next: optional guard */\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  getWindow,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  TouchEvent,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport dataOriginalTitle from \"~/strings/dataOriginalTitle\";\nimport showClass from \"~/strings/showClass\";\nimport tooltipString from \"~/strings/tooltipString\";\nimport tooltipComponent from \"~/strings/tooltipComponent\";\nimport popoverString from \"~/strings/popoverString\";\nimport popoverComponent from \"~/strings/popoverComponent\";\nimport modalString from \"~/strings/modalString\";\nimport offcanvasString from \"~/strings/offcanvasString\";\n\nimport styleTip from \"~/util/styleTip\";\nimport createTip from \"~/util/createTip\";\nimport { appendPopup, hasPopup, removePopup } from \"~/util/popupContainer\";\nimport getElementContainer from \"~/util/getElementContainer\";\nimport tooltipDefaults from \"~/util/tooltipDefaults\";\nimport BaseComponent from \"./base-component\";\nimport type { TooltipEvent, TooltipOptions } from \"~/interface/tooltip\";\nimport type { PopoverEvent, PopoverOptions } from \"~/interface/popover\";\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector =\n  `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = \"title\";\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: Element) =>\n  getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: Element) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(\n    tooltip,\n    container,\n  );\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container } = self;\n\n  return tooltip &&\n    hasPopup(tooltip, container);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (\n    hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent\n  ) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(\n    getDocument(element),\n    touchstartEvent,\n    self.handleTouch,\n    passiveHandler,\n  );\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, \"in\");\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, \"out\");\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, tooltip } = self;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  if (add) {\n    [element, tooltip]\n      .forEach((target) => self._observer.observe(target));\n  } else self._observer.disconnect();\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      \"\",\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare element: Element & HTMLOrSVGElement;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip: HTMLElement;\n  declare container: HTMLElement;\n  declare offsetParent: Element | Window;\n  declare arrow: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: Element) =>\n      getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    // istanbul ignore else @preserve\n    if (((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: \"\" });\n\n    // set title attributes and add event listeners\n    // istanbul ignore else @preserve\n    if (\n      hasAttribute(element, titleAttr) && isTooltip &&\n      typeof options.title === \"string\"\n    ) {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    const container = getElementContainer(element);\n    const offsetParent = [\"sticky\", \"fixed\", \"relative\"].some(\n        (position) =>\n          getElementStyle(container, \"position\") ===\n            position,\n      )\n      ? container\n      : getWindow(element);\n\n    this.container = container;\n    this.offsetParent = offsetParent;\n\n    // create tooltip here\n    createTip(this);\n\n    /* istanbul ignore if @preserve */\n    if (!this.tooltip) return;\n\n    // create observer\n    this._observer = new PositionObserver(() => this.update());\n\n    // attach events\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element as HTMLElement);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, \"out\");\n\n    Timer.clear(element, \"out\");\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, container);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        \"in\",\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, \"in\");\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        \"out\",\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target)) ||\n      target === element ||\n      (target && element.contains(target))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible\n      ? true\n      : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes(\"manual\")) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(\" \");\n\n      triggerOptions.forEach((tr) => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(\n              getDocument(element),\n              touchstartEvent,\n              this.handleTouch,\n              passiveHandler,\n            );\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple()) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () =>\n      setTimeout(\n        () => disposeTooltipComplete(clone, () => super.dispose()),\n        17,\n      );\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from \"@thednp/shorty\";\n\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport popoverString from \"~/strings/popoverString\";\nimport popoverComponent from \"~/strings/popoverComponent\";\n\nimport getTipTemplate from \"~/util/getTipTemplate\";\nimport styleTip from \"~/util/styleTip\";\nimport tooltipDefaults from \"~/util/tooltipDefaults\";\nimport Tooltip from \"./tooltip\";\n\nimport type { PopoverOptions /* , PopoverEvent */ } from \"~/interface/popover\";\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector =\n  `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: \"\",\n  dismissible: false,\n  btnClose:\n    '<button class=\"btn-close position-absolute top-0 end-0 m-1\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: Element) =>\n  getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: Element) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = \"scrollspy\";\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = \"ScrollSpy\";\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementById,\n  getElementsByTagName,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport PositionObserver from \"@thednp/position-observer\";\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"~/strings/activeClass\";\nimport scrollspyString from \"~/strings/scrollspyString\";\nimport scrollspyComponent from \"~/strings/scrollspyComponent\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport { ScrollSpyEvent, ScrollSpyOptions } from \"~/interface/scrollspy\";\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\nconst scrollSpyAnchorSelector = \"[href]\";\n\nconst scrollspyDefaults: Partial<ScrollSpyOptions> = {\n  offset: 10,\n  target: undefined,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: Element) =>\n  getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: Element) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<\n  ScrollSpyEventProps,\n  ScrollSpyEvent\n>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const {\n    target,\n    _itemsLength,\n    _observables,\n  } = self;\n\n  const links = getElementsByTagName<HTMLAnchorElement>(\"A\", target);\n  const doc = getDocument(target);\n\n  // only update items once or with each mutation\n  // istanbul ignore else @preserve\n  if (!links.length || _itemsLength === _observables.size) return;\n  // reset arrays & update\n  _observables.clear();\n\n  Array.from(links).forEach((link) => {\n    const hash = getAttribute(link, \"href\")?.slice(1);\n    const targetItem = hash?.length ? doc.getElementById(hash) : null;\n\n    if (targetItem && !isDisabled(link)) {\n      self._observables.set(targetItem, link);\n    }\n  });\n  self._itemsLength = self._observables.size;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: Element) => {\n  Array.from(getElementsByTagName<HTMLAnchorElement>(\"A\", target)).forEach(\n    (item) => {\n      if (hasClass(item, activeClass)) removeClass(item, activeClass);\n    },\n  );\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  clear(target);\n\n  self._activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  let parentItem = item;\n  while (parentItem !== target) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (\n      [\"nav\", \"dropdown-menu\", \"list-group\"].some((c) =>\n        hasClass(parentItem, c)\n      )\n    ) {\n      const parentLink = parentItem.previousElementSibling as\n        | HTMLElement\n        | null;\n\n      // istanbul ignore else @preserve\n      if (parentLink && !hasClass(parentLink, activeClass)) {\n        addClass(parentLink, activeClass);\n      }\n    }\n  }\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\nconst getOffset = (self: ScrollSpy, target: HTMLElement) => {\n  const { scrollTarget, element, options } = self;\n\n  return (scrollTarget !== element\n    ? getBoundingClientRect(target).top + scrollTarget.scrollTop\n    : target.offsetTop) - (options.offset as number || 10);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare element: HTMLElement;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement;\n  declare scrollTarget: HTMLElement;\n  declare _itemsLength: number;\n  declare _activeItem: HTMLElement | null;\n  declare _observables: Map<HTMLElement, HTMLElement>;\n  declare _observer: PositionObserver; //| IntersectionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(\n    target: Element | string,\n    config?: Partial<ScrollSpyOptions>,\n  ) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // get target\n    const spyTarget = querySelector(\n      options.target,\n      getDocument(element),\n    );\n\n    // invalidate\n    if (!spyTarget) return;\n    this.target = spyTarget;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight\n      ? element\n      : getDocumentElement(element);\n    this._observables = new Map();\n\n    // run an initial burst, we need to know the targets\n    this.refresh();\n    // updateSpyTargets(this);\n\n    // create observer\n    this._observer = new PositionObserver(() => {\n      requestAnimationFrame(() => this.refresh());\n    }, {\n      root: this.scrollTarget,\n    });\n\n    // add event handlers\n    this._toggleEventListeners(true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target, scrollTarget } = this;\n    // check if target is visible and invalidate\n    // istanbul ignore if @preserve\n    if (!target || target.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n    const { _itemsLength, _observables, _activeItem } = this;\n\n    // istanbul ignore if @preserve\n    if (!_itemsLength) return;\n    const entries = _observables.entries().toArray();\n\n    const { scrollTop, scrollHeight, clientHeight } = scrollTarget;\n\n    if (scrollTop >= scrollHeight - clientHeight) {\n      const newActiveItem = entries[_itemsLength - 1]?.[1];\n\n      // istanbul ignore else @preserve\n      if (_activeItem !== newActiveItem) activate(this, newActiveItem);\n      return;\n    }\n\n    const firstOffset = entries[0]?.[0]\n      ? getOffset(this, entries[0][0])\n      : /* istanbul ignore next */ null;\n    if (\n      firstOffset !== null && scrollTop < firstOffset &&\n      firstOffset > 0\n    ) {\n      this._activeItem = null;\n      clear(target);\n      return;\n    }\n\n    for (let i = 0; i < _itemsLength; i += 1) {\n      const [targetItem, item] = entries[i];\n      const offsetTop = getOffset(this, targetItem);\n      const nextTarget = entries[i + 1]?.[0];\n      const nextOffsetTop = nextTarget\n        ? getOffset(this, nextTarget)\n        : /* istanbul ignore next */ null;\n\n      // istanbul ignore else @preserve\n      if (\n        _activeItem !== item &&\n        scrollTop >= offsetTop &&\n        (nextOffsetTop === null || scrollTop < nextOffsetTop)\n      ) {\n        activate(this, item);\n        break;\n      }\n    }\n  };\n\n  /**\n   * This method provides an event handle\n   * for scrollspy\n   * @param e the event listener object\n   */\n  _scrollTo = (e: MouseEvent<HTMLAnchorElement>) => {\n    const item = closest(e.target, scrollSpyAnchorSelector);\n    const hash = item && getAttribute(item, \"href\")?.slice(1);\n    const targetItem = hash && getElementById(hash, this.target);\n\n    // istanbul ignore else @preserve\n    if (targetItem) {\n      this.scrollTarget.scrollTo({\n        top: targetItem.offsetTop,\n        behavior: \"smooth\",\n      });\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Toggles on/off the component observer.\n   *\n   * @param self the ScrollSpy instance\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (\n    add?: boolean,\n  ) => {\n    const { target, _observables, _observer, _scrollTo } = this;\n    const action = add ? addListener : removeListener;\n    action(target, mouseclickEvent, _scrollTo);\n\n    if (add) {\n      _observables?.forEach((_, targetItem) => _observer.observe(targetItem));\n    } else _observer.disconnect();\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"~/strings/collapsingClass\";\nimport activeClass from \"~/strings/activeClass\";\nimport fadeClass from \"~/strings/fadeClass\";\nimport showClass from \"~/strings/showClass\";\nimport dropdownClasses from \"~/strings/dropdownClasses\";\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport tabString from \"~/strings/tabString\";\nimport tabComponent from \"~/strings/tabComponent\";\nimport getTargetElement from \"~/util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"~/interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: Element) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: Element) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: Element & EventTarget | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (c) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = content\n      ? content.scrollHeight\n      : /* istanbul ignore next @preserve */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element as HTMLElement;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore if @preserve\n  if (showTabEvent.defaultPrevented) return;\n  // istanbul ignore else @preserve\n  if (nextContent) addClass(nextContent, activeClass);\n  // istanbul ignore else @preserve\n  if (content) removeClass(content, activeClass);\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, {\n      currentHeight,\n      nextHeight,\n      tab: null,\n      content: null,\n    });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (c) removeClass(c, \"overflow-hidden\");\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  // istanbul ignore else @preserve\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName<HTMLElement>(\n    activeClass,\n    nav,\n  );\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab) ? getTargetElement(tab) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement) => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector<HTMLElement>(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: MouseEvent<Element>) => {\n  const element = closest(e.target, tabSelector);\n  const self = element && getTabInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n  e.preventDefault();\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare element: HTMLElement;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: Element | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (!content) return;\n\n    const nav = closest<HTMLElement>(element, \".nav\");\n    const container = closest<HTMLElement>(\n      content as HTMLElement,\n      \".tab-content\",\n    );\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      // istanbul ignore else @preserve\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, \"true\");\n      }\n    }\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if ((nav && Timer.get(nav)) || hasClass(element, activeClass)) return;\n    const { tab, content } = getActiveTab(this);\n\n    // istanbul ignore else @preserve\n    if (nav && tab) {\n      tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n    }\n\n    // update relatedTarget and dispatch\n    hideTabEvent.relatedTarget = element as HTMLElement;\n\n    // istanbul ignore if @preserve\n    if (!isHTMLElement(tab)) return;\n\n    dispatchEvent(tab, hideTabEvent);\n\n    // istanbul ignore else @preserve\n    if (hideTabEvent.defaultPrevented) return;\n\n    addClass(element, activeClass);\n    setAttribute(element, ariaSelected, \"true\");\n\n    const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n    if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n      removeClass(activeDropdown, activeClass);\n    }\n\n    // istanbul ignore else @preserve\n    if (nav) {\n      const toggleTab = () => {\n        // istanbul ignore else @preserve\n        if (tab) {\n          removeClass(tab, activeClass);\n          setAttribute(tab, ariaSelected, \"false\");\n        }\n        if (dropdown && !hasClass(dropdown, activeClass)) {\n          addClass(dropdown, activeClass);\n        }\n      };\n\n      if (\n        content &&\n        (hasClass(content, fadeClass) ||\n          (nextContent && hasClass(nextContent, fadeClass)))\n      ) {\n        Timer.set(nav, toggleTab, 1);\n      } else toggleTab();\n    }\n\n    // istanbul ignore else @preserve\n    if (content) {\n      removeClass(content, showClass);\n      if (hasClass(content, fadeClass)) {\n        emulateTransitionEnd(content, () => triggerTabHide(this));\n      } else {\n        triggerTabHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = \"toast\";\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = \"Toast\";\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  MouseEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"~/strings/fadeClass\";\nimport showClass from \"~/strings/showClass\";\nimport dataBsDismiss from \"~/strings/dataBsDismiss\";\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport toastString from \"~/strings/toastString\";\nimport toastComponent from \"~/strings/toastComponent\";\nimport getTargetElement from \"~/util/getTargetElement\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport { ToastEvent, ToastOptions } from \"~/interface/toast\";\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = \"showing\";\n/** @deprecated */\nconst hideClass = \"hide\";\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: Element) =>\n  getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: Element) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `show.bs.${toastString}`,\n);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `shown.bs.${toastString}`,\n);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hide.bs.${toastString}`,\n);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hidden.bs.${toastString}`,\n);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element as HTMLElement);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element as HTMLElement);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nfunction toastClickHandler(this: HTMLElement, e: Event) {\n  const element = getTargetElement(this);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n  // istanbul ignore if @preserve\n  if (!self) return;\n  // istanbul ignore else @preserve\n  if (this.tagName === \"A\") e.preventDefault();\n  self.relatedTarget = this;\n  self.show();\n}\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent<HTMLElement>) => {\n  const element = e.target;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore if @preserve: a solid filter is required\n  if (\n    !self || element === relatedTarget ||\n    element.contains(relatedTarget as Node)\n  ) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare element: HTMLElement;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector<HTMLElement>(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        toastToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || isShown) return;\n\n    dispatchEvent(element, showToastEvent);\n    if (!showToastEvent.defaultPrevented) showToast(this);\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || !isShown) return;\n\n    dispatchEvent(element, hideToastEvent);\n    if (!hideToastEvent.defaultPrevented) hideToast(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(\n        (e) => action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) => {\n        action(btn, mouseclickEvent, toastClickHandler);\n      });\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) removeClass(element, showClass);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from \"@thednp/shorty\";\n\nimport { addListener } from \"@thednp/event-listener\";\n\nimport Alert from \"../components/alert\";\nimport Button from \"../components/button\";\nimport Carousel from \"../components/carousel\";\nimport Collapse from \"../components/collapse\";\nimport Dropdown from \"../components/dropdown\";\nimport Modal from \"../components/modal\";\nimport Offcanvas from \"../components/offcanvas\";\nimport Popover from \"../components/popover\";\nimport ScrollSpy from \"../components/scrollspy\";\nimport Tab from \"../components/tab\";\nimport Toast from \"../components/toast\";\nimport Tooltip from \"../components/tooltip\";\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n].forEach((c) => componentsList.set(c.prototype.name, c));\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: Element) => Component,\n  collection: HTMLCollectionOf<Element> | Element[],\n) => {\n  [...collection].forEach((x) => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<Element, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName<Element>(\"*\", lookUp)];\n\n  componentsList.forEach((cs) => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach((comp) => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["Le","Oe","X","Pe","Fe","Be","ct","at","it","ft","gt","vt","Et","yt","wt","At","Ot","zt","It","Qt","je","Zt","on","sn","rn","cn","gn","Jt","Xt","M","R","xn","t","e","zn","ee","Q","n","o","j","K","oe","Qn","Kn","Gn","Zn","_n","v","u","i","E","L","to","P","N","q","G","d","T","se","Z","f","s","ie","ue","so","r","a","l","ao","F","S","uo","p","c","g","A","fo","mo","vo","bo","Eo","O","le","m","ho","yo","de","z","_","I","fe","pe","Ao","b","y","So","w","No","me","k","ve","be","Ee","we","Co","V","H","h","Ae","Se","Do","xo","Vo","Ho","Ne","Wo","Te","Qo","jo","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","isDisabled","target","hasClass","getAttribute","Version","version","BaseComponent","config","element","isElement","isString","querySelector","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","dismiss","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","setAttribute","ariaPressed","isActive","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","x","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","touchEvent","isMobile","touchstartEvent","pointerdownEvent","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicator","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","indicators","pointermoveEvent","passiveHandler","pointerupEvent","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","dragstartEvent","arrow","keydownEvent","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","isHTMLElement","activeCollapse","activeCollapseInstance","callbackModes","errorString","PositionObserver","callback","isFunction","root","ioEntry","clientWidth","clientHeight","queue","resolve","updates","oldBoundingBox","oldIsIntersecting","left","top","ob","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","getWindow","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","toggleFocusTrap","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","offsetParent","scrollLeft","scrollTop","getNodeScroll","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","observerEntry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","elemOffsetLeft","elemOffsetTop","getRectRelativeToOffsetParent","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","tipPositions","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tipComponent","elem","getUID","position","outTimer","showTooltipEvent","delay","hideTooltipEvent","enabled","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollSpyAnchorSelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","_itemsLength","_observables","links","getElementsByTagName","link","hash","targetItem","clear","item","activate","parentItem","parentLink","getOffset","scrollTarget","spyTarget","_activeItem","entries","newActiveItem","firstOffset","offsetTop","nextTarget","nextOffsetTop","getElementById","_observer","_scrollTo","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"AAAK,MAA8DA,KAAK,oBAAoBC,KAAK,iBAAuCC,KAAI,eAA0DC,KAAK,cAAcC,KAAK,gBAAgBC,KAAK,iBAAyPC,KAAK,SAASC,KAAK,WAAWC,KAAK,YAA0EC,KAAK,WAA4BC,KAAK,SAAsBC,IAAK,SAA0BC,KAAK,aAA6BC,KAAK,SAASC,KAAK,cAAcC,KAAK,cAAmKC,KAAK,eAAoCC,KAAK,eAAeC,KAAK,aAAsJC,KAAK,cAmD5mCC,KAAK,aAUuBC,KAAK,qFAoBlCC,KAAK,aAAaC,KAAK,WAAWC,KAAK,aAAaC,KAAK,cAAkHC,KAAK,UAAyMC,KAAK,sBAAsBC,KAAK,mBAAmBC,KAAI,iBAAiBC,KAAI,sBA0BxSC,KAAK,MAAM;AACrL,QAAMC,IAAI;AACV,SAAO,WAAW,eAAe,OAAO;AAAA,IACtC,CAACC,MAAMD,EAAE,KAAKC,EAAE,KAAK;AAAA,EACzB,KAAOD,EAAE,KAAK,WAAW,SAAS,KAAK;AACvC,GAAGE,KAAK,MAAM;AACZ,QAAMF,IAAI;AACV,SAAO,WAAW,eAAe,OAAO;AAAA,IACtC,CAACC,MAAMD,EAAE,KAAKC,EAAE,KAAK;AAAA,EACzB,KAAOD,EAAE;AAAA,IACL,WAAW;AAAA,EACf,KAAO;AACP,GAA2PG,KAAK,MAAM;AACtQ,GAAGC,KAAI,CAACJ,GAAGC,GAAGI,GAAGC,MAAM;AAErB,EAAAN,EAAE;AAAA,IACAC;AAAA,IACAI;AAAA,IACA;AAAA,EACJ;AACA,GAAGE,KAAI,CAACP,GAAGC,GAAGI,GAAGC,MAAM;AAErB,EAAAN,EAAE;AAAA,IACAC;AAAA,IACAI;AAAA,IACA;AAAA,EACJ;AACA,GAesUG,IAAI,CAACR,GAAGC,MAAMD,EAAE,aAAaC,CAAC,GAA6CQ,KAAK,CAACT,GAAGC,MAAMD,EAAE,aAAaC,CAAC,GAA6CS,IAAK,CAACV,GAAGC,GAAGI,MAAML,EAAE,aAAaC,GAAGI,CAAC,GAAmDM,KAAK,CAACX,GAAGC,MAAMD,EAAE,gBAAgBC,CAAC,GAAgDW,IAAK,CAACZ,MAAMC,MAAM;AACvpB,EAAAD,EAAE,UAAU,IAAI,GAAGC,CAAC;AACtB,GAAGY,IAAK,CAACb,MAAMC,MAAM;AACnB,EAAAD,EAAE,UAAU,OAAO,GAAGC,CAAC;AACzB,GAAGa,IAAK,CAACd,GAAGC,MAAMD,EAAE,UAAU,SAASC,CAAC,GAAoHc,KAAI,CAACf,MAAMA,KAAK,QAAQ,OAAOA,KAAK,YAAY,IAAIgB,IAAI,CAAChB,MAAMe,GAAEf,CAAC,KAAK,OAAOA,EAAE,YAAY,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE;AAAA,EACtS,CAACC,MAAMD,EAAE,aAAaC;AACxB,KAAK,IAAIgB,IAAI,CAACjB,MAAMgB,EAAEhB,CAAC,KAAKA,EAAE,aAAa,KAAK,IAAIkB,KAAoB,oBAAI,IAAG,GAAIC,KAAI;AAAA,EACrF,MAAMD;AAAAA,EACN,KAAK,CAAClB,GAAGC,GAAGI,MAAM;AAChB,IAAKY,EAAEjB,CAAC,MACRkB,GAAE,IAAIjB,CAAC,KAAKiB,GAAE,IAAIjB,GAAmB,oBAAI,IAAG,CAAE,GAAGiB,GAAE,IAAIjB,CAAC,EAAE,IAAID,GAAGK,CAAC;AAAA,EACpE;AAAA,EACA,WAAW,CAACL,MAAMkB,GAAE,IAAIlB,CAAC,KAAK;AAAA,EAC9B,KAAK,CAACA,GAAGC,MAAM;AACb,QAAI,CAACgB,EAAEjB,CAAC,KAAK,CAACC,EAAG,QAAO;AACxB,UAAMI,IAAIc,GAAE,UAAUlB,CAAC;AACvB,WAAOD,KAAKK,KAAKA,EAAE,IAAIL,CAAC,KAAK;AAAA,EAC/B;AAAA,EACA,QAAQ,CAACA,GAAGC,MAAM;AAChB,UAAMI,IAAIc,GAAE,UAAUlB,CAAC;AACvB,KAACI,KAAK,CAACY,EAAEjB,CAAC,MAAMK,EAAE,OAAOL,CAAC,GAAGK,EAAE,SAAS,KAAKa,GAAE,OAAOjB,CAAC;AAAA,EACzD;AACF,GAAGmB,IAAK,CAACpB,GAAGC,MAAMkB,GAAE,IAAInB,GAAGC,CAAC,GAAyDoB,KAAI,CAACrB,MAAMA,GAAG,KAAI,EAAG;AAAA,EACxG;AAAA,EACA,CAACC,GAAGI,MAAMA,MAAM,IAAIJ,EAAE,YAAW,IAAKA,EAAE,YAAW;AACrD,EAAE,QAAQ,QAAQ,EAAE,GAAGqB,KAAI,CAACtB,MAAM,OAAOA,KAAK,YAAY,IAAIuB,KAAI,CAACvB,MAAMe,GAAEf,CAAC,KAAKA,EAAE,YAAY,SAAS,YAAY,IAAIwB,KAAI,CAACxB,MAAMgB,EAAEhB,CAAC,KAAKA,EAAE,aAAa,KAAK,IAAIyB,IAAI,CAACzB,MAAMwB,GAAExB,CAAC,IAAIA,IAAIgB,EAAEhB,CAAC,IAAIA,EAAE,gBAAgBuB,GAAEvB,CAAC,IAAIA,EAAE,WAAW,WAAW,UAAU0B,KAAI,CAAC1B,MAAMC,MAAM,OAAO,OAAOD,GAAG,GAAGC,CAAC,GAAG0B,KAAK,CAAC3B,MAAM;AAC9S,MAAI,CAACA,EAAG;AACR,MAAIsB,GAAEtB,CAAC;AACL,WAAOyB,EAAC,EAAG,cAAczB,CAAC;AAC5B,QAAM,EAAE,SAASC,EAAC,IAAKD,GAAGK,IAAIsB,GAAG1B,CAAC;AAClC,MAAI,CAACI,EAAG;AACR,QAAMC,IAAI,EAAE,GAAGN,EAAC;AAChB,SAAO,OAAOM,EAAE,SAASoB,GAAErB,GAAGC,CAAC;AACjC,GAQGsB,IAAI,CAAC5B,GAAGC,MAAMD,EAAE,cAAcC,CAAC,GAAyC4B,IAAI,CAAC7B,GAAGC,GAAGI,MAAM;AAC1F,QAAMC,IAAI,iBAAiBN,GAAGK,CAAC,GAAGyB,IAAI7B,EAAE,QAAQ,UAAU,QAAQ,EAAE,QAAQ,YAAY,KAAK,EAAE,YAAW;AAC1G,SAAOK,EAAE,iBAAiBwB,CAAC;AAC7B,GAkBGC,KAAK,CAAC/B,MAAM;AACb,QAAMC,IAAI4B,EAAE7B,GAAGF,EAAC,GAAGO,IAAIwB,EAAE7B,GAAGJ,EAAE,GAAGU,IAAID,EAAE,SAAS,IAAI,IAAI,IAAI,KAAKyB,IAAI7B,KAAKA,MAAM,SAAS,WAAWI,CAAC,IAAIC,IAAI;AAC7G,SAAO,OAAO,MAAMwB,CAAC,IAAI,IAAIA;AAC/B,GAAGE,KAAK,CAAChC,MAAM;AACb,QAAMC,IAAI4B,EAAE7B,GAAGF,EAAC,GAAGO,IAAIwB,EAAE7B,GAAGL,EAAE,GAAGW,IAAID,EAAE,SAAS,IAAI,IAAI,IAAI,KAAKyB,IAAI7B,KAAKA,MAAM,SAAS,WAAWI,CAAC,IAAIC,IAAI;AAC7G,SAAO,OAAO,MAAMwB,CAAC,IAAI,IAAIA;AAC/B,GAAGG,IAAK,CAACjC,GAAGC,MAAM;AAChB,MAAII,IAAI;AACR,QAAMC,IAAI,IAAI,MAAMT,EAAC,GAAGiC,IAAIE,GAAGhC,CAAC,GAAGkC,IAAIH,GAAG/B,CAAC;AAC3C,MAAI8B,GAAG;AACL,UAAMK,IAAI,CAACC,MAAM;AACf,MAAAA,EAAE,WAAWpC,MAAMC,EAAE,MAAMD,GAAG,CAACoC,CAAC,CAAC,GAAGpC,EAAE,oBAAoBH,IAAGsC,CAAC,GAAG9B,IAAI;AAAA,IACvE;AACA,IAAAL,EAAE,iBAAiBH,IAAGsC,CAAC,GAAG,WAAW,MAAM;AACzC,MAAA9B,KAAKuB,EAAE5B,GAAGM,CAAC;AAAA,IACb,GAAGwB,IAAII,IAAI,EAAE;AAAA,EACf;AACE,IAAAjC,EAAE,MAAMD,GAAG,CAACM,CAAC,CAAC;AAClB,GAA+F+B,KAAK,CAACrC,GAAGC,MAAMD,EAAE,MAAMC,CAAC,GAAiGqC,KAAI,CAACtC,MAAM,CAAC,QAAQ,EAAE,EAAE,SAASA,CAAC,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE,SAASA,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,MAAM,MAAM,EAAE,SAASA,CAAC,IAAI,OAAOA,MAAM,MAAM,CAAC,OAAO,MAAM,CAACA,CAAC,IAAI,CAACA,IAAIA,GAAGuC,KAAI,CAACvC,MAAM,OAAO,QAAQA,CAAC,GAAGwC,KAAK,CAACxC,GAAGC,GAAGI,GAAGC,MAAM;AAC7a,MAAI,CAACW,EAAEjB,CAAC,EAAG,QAAOC;AAClB,QAAM6B,IAAI,EAAE,GAAGzB,EAAC,GAAI6B,IAAI,EAAE,GAAGlC,EAAE,QAAO,GAAImC,IAAI,EAAE,GAAGlC,EAAC,GAAImC,IAAI,CAAA,GAAIK,IAAI;AACpE,SAAOF,GAAEL,CAAC,EAAE,QAAQ,CAAC,CAACQ,GAAGC,CAAC,MAAM;AAC9B,UAAMC,IAAS,OAAOF,KAAK,YAAYA,EAAE,SAASpC,CAAC,IAAIe,GAAEqB,EAAE,QAAQpC,GAAG,EAAE,CAAC,IAAIe,GAAEqB,CAAC;AAChF,IAAAN,EAAEQ,CAAC,IAAIN,GAAEK,CAAC;AAAA,EACZ,CAAC,GAAGJ,GAAET,CAAC,EAAE,QAAQ,CAAC,CAACY,GAAGC,CAAC,MAAM;AAC3B,IAAAb,EAAEY,CAAC,IAAIJ,GAAEK,CAAC;AAAA,EACZ,CAAC,GAAGJ,GAAEtC,CAAC,EAAE,QAAQ,CAAC,CAACyC,GAAGC,CAAC,MAAM;AAC3B,IAAAD,KAAKZ,IAAIK,EAAEO,CAAC,IAAIZ,EAAEY,CAAC,IAAIA,KAAKN,IAAID,EAAEO,CAAC,IAAIN,EAAEM,CAAC,IAAIP,EAAEO,CAAC,IAAIA,MAAMD,IAAIjC,EAAER,GAAGyC,CAAC,IAAIE;AAAA,EAC3E,CAAC,GAAGR;AACN,GAA2DU,KAAK,CAAC7C,MAAM,OAAO,KAAKA,CAAC,GAAoE8C,IAAK,CAAC9C,GAAGC,MAAM;AACrK,QAAMI,IAAI,IAAI,YAAYL,GAAG;AAAA,IAC3B,YAAY;AAAA,IACZ,SAAS;AAAA,EACb,CAAG;AACD,SAAOe,GAAEd,CAAC,KAAKyB,GAAErB,GAAGJ,CAAC,GAAGI;AAC1B,GAAG0C,KAAK,EAAE,SAAS,GAAE,GAAIC,KAAK,CAAChD,MAAMA,EAAE,cAAciD,IAAK,CAACjD,GAAGC,MAAM;AAClE,EAAAsC,GAAEtC,CAAC,EAAE,QAAQ,CAAC,CAACI,GAAGC,CAAC,MAAM;AACvB,QAAIA,KAAKgB,GAAEjB,CAAC,KAAKA,EAAE,SAAS,IAAI;AAC9B,MAAAL,EAAE,MAAM,YAAYK,GAAGC,CAAC;AAAA,SACrB;AACH,YAAMwB,IAAI,CAAA;AACV,MAAAA,EAAEzB,CAAC,IAAIC,GAAGoB,GAAE1B,EAAE,OAAO8B,CAAC;AAAA,IACxB;AAAA,EACF,CAAC;AACH,GAAGoB,KAAI,CAAClD,MAAMe,GAAEf,CAAC,KAAKA,EAAE,YAAY,SAAS,SAAS,IAAImD,KAAK,CAACnD,MAAM,OAAOA,KAAK,YAAY,IAAIoD,KAAoB,oBAAI,OAAOC,IAAK;AAAA,EACpI,KAAK,CAACrD,GAAGC,GAAGI,GAAGC,MAAM;AACnB,IAAAW,EAAEjB,CAAC,MAAMM,KAAKA,EAAE,UAAU8C,GAAE,IAAIpD,CAAC,KAAKoD,GAAE,IAAIpD,GAAmB,oBAAI,IAAG,CAAE,GAAGoD,GAAE,IAAIpD,CAAC,EAAE,IAAIM,GAAG,WAAWL,GAAGI,CAAC,CAAC,KAAK+C,GAAE,IAAIpD,GAAG,WAAWC,GAAGI,CAAC,CAAC;AAAA,EAC3I;AAAA,EACA,KAAK,CAACL,GAAGC,MAAM;AACb,QAAI,CAACgB,EAAEjB,CAAC,EAAG,QAAO;AAClB,UAAMK,IAAI+C,GAAE,IAAIpD,CAAC;AACjB,WAAOC,KAAKI,KAAK6C,GAAE7C,CAAC,IAAIA,EAAE,IAAIJ,CAAC,KAAK,OAAOkD,GAAG9C,CAAC,IAAIA,IAAI;AAAA,EACzD;AAAA,EACA,OAAO,CAACL,GAAGC,MAAM;AACf,QAAI,CAACgB,EAAEjB,CAAC,EAAG;AACX,UAAMK,IAAI+C,GAAE,IAAIpD,CAAC;AACjB,IAAAC,KAAKA,EAAE,UAAUiD,GAAE7C,CAAC,KAAK,aAAaA,EAAE,IAAIJ,CAAC,CAAC,GAAGI,EAAE,OAAOJ,CAAC,GAAGI,EAAE,SAAS,KAAK+C,GAAE,OAAOpD,CAAC,MAAM,aAAaK,CAAC,GAAG+C,GAAE,OAAOpD,CAAC;AAAA,EAC3H;AACF,GAAGsD,KAAK,CAACtD,MAAMA,EAAE,YAAW,GAAiCuD,IAAK,CAACvD,GAAGC,OAAOe,EAAEf,CAAC,IAAIA,IAAIwB,EAAC,GAAI,iBAAiBzB,CAAC,GAAGwD,KAAoB,oBAAI,IAAG;AAC7I,SAASC,GAAEzD,GAAG;AACZ,QAAM,EAAE,UAAUC,GAAG,MAAMI,EAAC,IAAKL,GAAGM,IAAImB,EAAE,IAAI,GAAGK,IAAI;AAAA,IACnD,GAAGyB,EAAGlE,IAAI,IAAI;AAAA,EAClB,EAAI;AAAA,IACA,CAAC+C,MAAM,CAAC3B,GAAG2B,GAAG,UAAU,KAAK,CAAC5B,EAAE4B,GAAGlE,EAAC;AAAA,EACxC;AACE,MAAI,CAAC4D,EAAE,OAAQ;AACf,QAAMI,IAAIJ,EAAE,CAAC,GAAGK,IAAIL,EAAEA,EAAE,SAAS,CAAC;AAClC,EAAAzB,MAAM,UAAUJ,KAAKK,EAAE,kBAAkB4B,KAAKC,EAAE,MAAK,GAAInC,EAAE,eAAc,KAAM,CAACC,KAAKK,EAAE,kBAAkB6B,MAAMD,EAAE,SAASlC,EAAE,eAAc;AAC5I;AACK,MAAC0D,KAAI,CAAC1D,MAAMwD,GAAE,IAAIxD,CAAC,MAAM,IAAI2D,KAAK,CAAC3D,MAAM;AAC5C,EAAA0D,GAAE1D,CAAC,MAAMI,GAAEJ,GAAG,WAAWyD,EAAC,GAAGD,GAAE,IAAIxD,GAAG,EAAE;AAC1C,GAAG4D,KAAK,CAAC5D,MAAM;AACb,EAAA0D,GAAE1D,CAAC,MAAMO,GAAEP,GAAG,WAAWyD,EAAC,GAAGD,GAAE,OAAOxD,CAAC;AACzC,GAAG6D,KAAK,CAAC7D,MAAM;AACb,EAAA0D,GAAE1D,CAAC,IAAI4D,GAAG5D,CAAC,IAAI2D,GAAG3D,CAAC;AACrB,GAAG8D,IAAI,CAAC9D,MAAMiB,EAAEjB,CAAC,KAAK,iBAAiBA,KAAK,IAAI+D,KAAI,CAAC/D,GAAGC,MAAM;AAC5D,QAAM,EAAE,OAAOI,GAAG,QAAQC,GAAG,KAAKwB,GAAG,OAAOI,GAAG,QAAQC,GAAG,MAAMC,EAAC,IAAKpC,EAAE,sBAAqB;AAC7F,MAAIyC,IAAI,GAAGC,IAAI;AACf,MAAIzC,KAAK6D,EAAE9D,CAAC,GAAG;AACb,UAAM,EAAE,aAAa2C,GAAG,cAAcC,EAAC,IAAK5C;AAC5C,IAAAyC,IAAIE,IAAI,IAAI,KAAK,MAAMtC,CAAC,IAAIsC,IAAI,GAAGD,IAAIE,IAAI,IAAI,KAAK,MAAMtC,CAAC,IAAIsC,IAAI;AAAA,EACrE;AACA,SAAO;AAAA,IACL,OAAOvC,IAAIoC;AAAA,IACX,QAAQnC,IAAIoC;AAAA,IACZ,KAAKZ,IAAIY;AAAA,IACT,OAAOR,IAAIO;AAAA,IACX,QAAQN,IAAIO;AAAA,IACZ,MAAMN,IAAIK;AAAA,IACV,GAAGL,IAAIK;AAAA,IACP,GAAGX,IAAIY;AAAA,EACX;AACA,GAAGsB,KAAK,CAAChE,MAAMyB,EAAEzB,CAAC,EAAE,MAAMiE,KAAI,CAACjE,MAAMyB,EAAEzB,CAAC,EAAE,iBAA2GkE,KAAK,CAAClE,MAAM;AAC/J,QAAMC,IAAIsB,GAAEvB,CAAC,GAAGK,IAAIJ,IAAID,EAAE,UAAUA,EAAE,YAAYM,IAAIL,IAAID,EAAE,UAAUA,EAAE;AACxE,SAAO,EAAE,GAAGK,GAAG,GAAGC,EAAC;AACrB,GAAG6D,KAAK,CAACnE,MAAMgB,EAAEhB,CAAC,KAAKA,EAAE,YAAY,SAAS,gBAAgB,IAAIoE,KAAI,CAACpE,MAAMA,EAAE,aAAa,SAASA,IAAIiB,EAAEjB,CAAC,KAAKA,EAAE,gBAAgBgB,EAAEhB,CAAC,KAAKA,EAAE,cAAcmE,GAAGnE,CAAC,KAAKA,EAAE,QAAQiE,GAAEjE,CAAC,GAAGqE,KAAK,CAACrE,MAAMA,IAAIwB,GAAExB,CAAC,IAAIA,EAAE,cAAcgB,EAAEhB,CAAC,IAAIA,GAAG,eAAe,cAAcA,IAAI,QAAQsE,KAAK,CAACtE,MAAMgB,EAAEhB,CAAC,KAAK,CAAC,SAAS,MAAM,IAAI,EAAE,SAASA,EAAE,QAAQ,KAAK,IAAIuE,KAAK,CAACvE,GAAGC,MAAMD,EAAE,QAAQC,CAAC,GA6C3WuE,KAAK,CAACxE,MAAM;AACb,MAAI,CAAC8D,EAAE9D,CAAC,EAAG,QAAO;AAClB,QAAM,EAAE,OAAOC,GAAG,QAAQI,EAAC,IAAK0D,GAAE/D,CAAC,GAAG,EAAE,aAAaM,GAAG,cAAcwB,EAAC,IAAK9B;AAC5E,SAAO,KAAK,MAAMC,CAAC,MAAMK,KAAK,KAAK,MAAMD,CAAC,MAAMyB;AAClD,GAAG2C,KAAK,CAACzE,GAAGC,GAAGI,MAAM;AACnB,QAAMC,IAAIwD,EAAE7D,CAAC,GAAG6B,IAAIiC;AAAA,IAClB/D;AAAA,IACAM,KAAKkE,GAAGvE,CAAC;AAAA,EACb,GAAKiC,IAAI,EAAE,GAAG,GAAG,GAAG,EAAC;AACnB,MAAI5B,GAAG;AACL,UAAM6B,IAAI4B,GAAE9D,GAAG,EAAE;AACjB,IAAAiC,EAAE,IAAIC,EAAE,IAAIlC,EAAE,YAAYiC,EAAE,IAAIC,EAAE,IAAIlC,EAAE;AAAA,EAC1C;AACA,SAAO;AAAA,IACL,GAAG6B,EAAE,OAAOzB,EAAE,IAAI6B,EAAE;AAAA,IACpB,GAAGJ,EAAE,MAAMzB,EAAE,IAAI6B,EAAE;AAAA,IACnB,OAAOJ,EAAE;AAAA,IACT,QAAQA,EAAE;AAAA,EACd;AACA;AACA,IAAI4C,KAAI,GAAGC,KAAI;AACV,MAACC,KAAoB,oBAAI,IAAG,GAAIC,KAAK,CAAC7E,GAAGC,MAAM;AAClD,MAAII,IAAIJ,IAAIyE,KAAIC;AAChB,MAAI1E,GAAG;AACL,UAAMK,IAAIuE,GAAG7E,CAAC,GAAG8B,IAAI8C,GAAE,IAAItE,CAAC,KAAqB,oBAAI,IAAG;AACxD,IAAAsE,GAAE,IAAItE,CAAC,KAAKsE,GAAE,IAAItE,GAAGwB,CAAC,GAAGoB,GAAEpB,CAAC,KAAK,CAACA,EAAE,IAAI7B,CAAC,KAAK6B,EAAE,IAAI7B,GAAGI,CAAC,GAAGqE,MAAK,KAAKrE,IAAIyB,EAAE,IAAI7B,CAAC;AAAA,EAClF,OAAO;AACL,UAAMK,IAAIN,EAAE,MAAMA;AAClB,IAAA4E,GAAE,IAAItE,CAAC,IAAID,IAAIuE,GAAE,IAAItE,CAAC,KAAKsE,GAAE,IAAItE,GAAGD,CAAC,GAAGsE,MAAK;AAAA,EAC/C;AACA,SAAOtE;AACT,GAAGyE,KAAK,CAAC9E,MAAM,MAAM,QAAQA,CAAC,KAAK,IAAiG+E,KAAK,CAAC/E,MAAM;AAC9I,MAAI,CAACgB,EAAEhB,CAAC,EAAG,QAAO;AAClB,QAAM,EAAE,KAAKC,GAAG,QAAQI,EAAC,IAAK0D,GAAE/D,CAAC,GAAG,EAAE,cAAcM,EAAC,IAAK2D,GAAEjE,CAAC;AAC7D,SAAOC,KAAKK,KAAKD,KAAK;AACxB,GAI0C2E,KAAK,CAAChF,MAAM,OAAOA,KAAK,cAAc,IAUvEiF,KAAK,CAACjF,MAAMe,GAAEf,CAAC,KAAKA,EAAE,YAAY,SAAS,cAAc,IAAIkF,KAAK,CAAClF,MAAMiE,GAAEjE,CAAC,EAAE,QAAQ,OAAqEmF,IAAK,CAACnF,GAAGC,MAAM,CAACD,KAAK,CAACC,IAAI,OAAOD,EAAE,QAAQC,CAAC,KAAKkF,EAAGnF,EAAE,YAAW,EAAG,MAAMC,CAAC,KAAK,MAAMmF,IAAK,CAACpF,GAAGC,MAAMgB,EAAEjB,CAAC,IAAIA,KAAKiB,EAAEhB,CAAC,IAAIA,IAAIwB,EAAC,GAAI,cAAczB,CAAC,GAAGqF,KAAK,CAACrF,GAAGC,OAAOe,EAAEf,CAAC,IAAIA,IAAIwB,EAAC,GAAI;AAAA,EACrVzB;AACF,GAA2CsF,KAAK,CAACtF,GAAGC,MAAMwB,EAAExB,CAAC,EAAE,eAAeD,CAAC,GAAGuF,KAAK,CAACvF,GAAGC,OAAOA,KAAKe,EAAEf,CAAC,IAAIA,IAAIwB,EAAC,GAAI;AAAA,EACrHzB;AACF,GCpZoBC,KAAI,CAAA,GAAI4B,KAAI,CAAC7B,MAAM;AACrC,QAAM,EAAE,MAAMK,GAAG,eAAeqC,EAAC,IAAK1C;AACtC,EAAAC,GAAEI,CAAC,EAAE,QAAQ,CAAC8B,GAAGL,MAAM;AACrB,IAAAY,MAAMZ,KAAKK,EAAE,QAAQ,CAAC7B,GAAGW,MAAM;AAC7B,MAAAA,EAAE,MAAMa,GAAG,CAAC9B,CAAC,CAAC,GAAG,OAAOM,KAAK,YAAYA,EAAE,QAAQ4B,EAAEJ,GAAGzB,GAAGY,GAAGX,CAAC;AAAA,IACjE,CAAC;AAAA,EACH,CAAC;AACH,GAAGY,IAAI,CAAClB,GAAGK,GAAGqC,GAAGP,MAAM;AACrB,EAAAlC,GAAEI,CAAC,MAAMJ,GAAEI,CAAC,IAAoB,oBAAI;AACpC,QAAMyB,IAAI7B,GAAEI,CAAC;AACb,EAAAyB,EAAE,IAAI9B,CAAC,KAAK8B,EAAE,IAAI9B,GAAmB,oBAAI,KAAK;AAC9C,QAAMM,IAAIwB,EAAE;AAAA,IACV9B;AAAA,EACJ,GAAK,EAAE,MAAMiB,EAAC,IAAKX;AACjB,EAAAA,EAAE,IAAIoC,GAAGP,CAAC,GAAGlB,KAAKjB,EAAE;AAAA,IAClBK;AAAA,IACAwB;AAAA,IACAM;AAAA,EACJ;AACA,GAAGD,IAAI,CAAClC,GAAGK,GAAGqC,GAAGP,MAAM;AACrB,QAAML,IAAI7B,GAAEI,CAAC,GAAGC,IAAIwB,KAAKA,EAAE,IAAI9B,CAAC,GAAGiB,IAAIX,KAAKA,EAAE,IAAIoC,CAAC,GAAGjB,IAAIR,MAAM,SAASA,IAAIkB;AAC7E,EAAA7B,KAAKA,EAAE,IAAIoC,CAAC,KAAKpC,EAAE,OAAOoC,CAAC,GAAGZ,MAAM,CAACxB,KAAK,CAACA,EAAE,SAASwB,EAAE,OAAO9B,CAAC,IAAI,CAAC8B,KAAK,CAACA,EAAE,SAAS,OAAO7B,GAAEI,CAAC,IAAI,CAACC,KAAK,CAACA,EAAE,SAASN,EAAE;AAAA,IACtHK;AAAA,IACAwB;AAAA,IACAJ;AAAA,EACJ;AACA,GCzBM+D,IAAY,QCAZC,IAAY,QCAZC,KAAgB,mBCAhBC,KAAc,SCAdC,KAAiB,SCEjBC,KAAa,CAACC,MACXC,EAASD,GAAQ,UAAU,KAChCE,EAAaF,GAAQ,UAAU,MAAM,sBCHnCG,KAAUC;ACYhB,MAAqBC,GAAc;AAAA,EAKjC,YAAYL,GAA0BM,GAAsB;AAC1D,QAAIC;AAEJ,QAAI;AACF,UAAIC,EAAUR,CAAM;AAClB,QAAAO,IAAUP;AAAA,eACDS,GAAST,CAAM;AAGxB,YAFAO,IAAUG,EAAcV,CAAM,GAE1B,CAACO,EAAS,OAAM,MAAM,IAAIP,CAAM,4BAA4B;AAAA;AAEhE,cAAM,MAAM,gDAAgD;AAAA,IAEhE,SAAS7F,GAAG;AACV,YAAM,MAAM,GAAG,KAAK,IAAI,WAAYA,EAAY,OAAO,EAAE;AAAA,IAC3D;AAEA,UAAMwG,IAAeC,GAAK,IAAiBL,GAAS,KAAK,IAAI;AAE7D,IAAII,KAGFA,EAAa,sBAAA,GAGf,KAAK,UAAUJ,GACf,KAAK,UAAU,KAAK,YAAYM,GAAW,KAAK,QAAQ,EAAE,SACtDC,GAAiBP,GAAS,KAAK,UAAUD,KAAU,CAAA,GAAI,IAAI,IAC1D,CAAA,GAELM,GAAK,IAAIL,GAAS,KAAK,MAAM,IAAI;AAAA,EACnC;AAAA,EAGA,IAAI,UAAU;AACZ,WAAOJ;AAAA,EACT;AAAA,EAGA,IAAI,OAAO;AACT,WAAO;AAAA,EACT;AAAA,EAGA,IAAI,WAAW;AACb,WAAO,CAAA;AAAA,EACT;AAAA,EAIA,wBAAwB,MAAM;AAAA,EAE9B;AAAA,EAGA,UAAU;AACRS,IAAAA,GAAK,OAAoB,KAAK,SAAS,KAAK,IAAI,GAChDC,GAAW,IAAI,EAAE,QAAQ,CAACE,MAAS;AACjC,aAAO,KAAKA,CAAI;AAAA,IAClB,CAAC;AAAA,EACH;AACF;ACrDA,MAAMC,KAAgB,IAAInB,EAAW,IAC/BoB,KAAuB,IAAIrB,EAAa,KAAKC,EAAW,MAGxDqB,KAAmB,CAACX,MACxBY,EAAmBZ,GAAST,EAAc,GAGtCsB,KAAoB,CAACb,MAAqB,IAAIc,GAAMd,CAAO,GAI3De,KAAkBC;AAAAA,EACtB,YAAY1B,EAAW;AACzB,GACM2B,KAAmBD;AAAAA,EACvB,aAAa1B,EAAW;AAC1B,GAKM4B,KAAqB,CAACC,MAAgB;AAC1C,QAAM,EAAE,SAAAnB,MAAYmB;AACpBC,EAAAA,EAAcpB,GAASiB,EAAgB,GAEvCE,EAAK,sBAAA,GACLA,EAAK,QAAA,GACLnB,EAAQ,OAAA;AACV;AAKA,MAAqBc,WAAchB,GAAc;AAAA,EAC/C,OAAO,WAAWW;AAAA,EAClB,OAAO,OAAOI;AAAA,EACd,OAAO,cAAcF;AAAA,EACrB;AAAA,EAEA,YAAYlB,GAA0B;AACpC,UAAMA,CAAM,GAGZ,KAAK,UAAUU;AAAAA,MACbO;AAAA,MACA,KAAK;AAAA,IAAA,GAIP,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAOnB;AAAA,EACT;AAAA,EAKA,QAAQ,CAAC3F,MAAiC;AACxC,UAAM,EAAE,SAAAoG,GAAS,SAAAqB,EAAA,IAAY;AAG7B,IAAI,CAACrB,KAAW,CAACN,EAASM,GAASZ,CAAS,KAExCxF,KAAKyH,KAAW7B,GAAW6B,CAAO,MACtCD,EAAcpB,GAASe,EAAe,GAElC,CAAAA,GAAgB,qBAEpBO,EAAYtB,GAASZ,CAAS,GAE1BM,EAASM,GAASb,CAAS,IAC7BoC,EAAqBvB,GAAS,MAAMkB,GAAmB,IAAI,CAAC,OACpC,IAAI;AAAA,EAChC;AAAA,EAEA,wBAAwB,CAACM,MAAkB;AACzC,UAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAN,GAAS,OAAAO,EAAA,IAAU;AAE3B,IAAIP,KACFI,EAAOJ,GAASQ,GAAiBD,CAAK;AAAA,EAE1C;AAAA,EAGA,UAAU;AACR,SAAK,sBAAA,GACL,MAAM,QAAA;AAAA,EACR;AACF;ACvHA,MAAME,IAAc,UCAdC,KAAe,kBCAfC,KAAe,UCAfC,KAAkB,UCsBlBC,KAAiB,IAAIH,EAAY,KAAKC,EAAY,MAGlDG,KAAoB,CAACnC,MACzBY,EAAoBZ,GAASiC,EAAe,GAGxCG,KAAqB,CAACpC,MAAqB,IAAIqC,GAAOrC,CAAO;AAKnE,MAAqBqC,WAAevC,GAAc;AAAA,EAChD,OAAO,WAAWoC;AAAA,EAClB,OAAO,OAAOE;AAAA,EACd,OAAO,cAAcD;AAAA,EAMrB,YAAY1C,GAA0B;AACpC,UAAMA,CAAM;AAGZ,UAAM,EAAE,SAAAO,MAAY;AAGpB,SAAK,WAAWN,EAASM,GAAS8B,CAAW,GAC7CQ,EAAatC,GAASuC,IAAa,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,GAG1D,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAON;AAAA,EACT;AAAA,EAKA,SAAS,CAACrI,MAAkC;AAC1C,IAAIA,OAAK,eAAA;AAET,UAAM,EAAE,SAAAoG,GAAS,UAAAwC,EAAA,IAAa;AAE9B,QAAIhD,GAAWQ,CAAO,EAAG;AAEzB,KADewC,IAAWlB,IAAcmB,GACjCzC,GAAS8B,CAAW,GAC3BQ,EAAatC,GAASuC,IAAaC,IAAW,UAAU,MAAM,GAC9D,KAAK,WAAW9C,EAASM,GAAS8B,CAAW;AAAA,EAC/C;AAAA,EAKA,wBAAwB,CAACN,MAAkB;AAEzC,KADeA,IAAME,IAAcC,GAC5B,KAAK,SAASE,GAAiB,KAAK,MAAM;AAAA,EACnD;AAAA,EAGA,UAAU;AACR,SAAK,sBAAA,GACL,MAAM,QAAA;AAAA,EACR;AACF;AC1FA,MAAMa,KAAe,kBCAfC,KAAiB,YCAjBC,KAAoB,YCApBC,KAAe,kBCAfC,KAAkB,qBCWlBC,IAAmB,CAAkC/C,MAAe;AACxE,QAAMgD,IAAa,CAACN,IAAcG,IAAcC,IAAiB,MAAM,GACjEG,IAAMC,EAAYlD,CAAO;AAE/B,SAAOgD,EACJ,IAAI,CAACG,MAAQ;AACZ,UAAMC,IAAWzD,EAAaK,GAASmD,CAAG;AAC1C,WAAIC,IACKD,MAAQN,KACXQ,EAAWrD,GAASoD,CAAQ,IAC5BjD,EAAiBiD,GAAUH,CAAG,IAE7B;AAAA,EACT,CAAC,EACA,OAAO,CAACK,MAAMA,CAAC,EAAE,CAAC;AACvB,GCiCMC,KAAmB,kBAAkBZ,EAAc,MACnDa,KAAe,GAAGb,EAAc,SAChCc,KAAgB,oBAChBC,KAAc,iBACdC,KAAc,UACdC,KAAaC,OAAaC,KAAkBC;AAClD,QAAQ,IAAI,EAAE,UAAUF,GAAA,GAAY,YAAAD,IAAY;AAEhD,MAAMI,KAAoC;AAAA,EACxC,OAAO;AAAA,EACP,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AACZ,GAGMC,KAAsB,CAACjE,MAC3BY,EAAsBZ,GAAS4C,EAAiB,GAG5CsB,KAAuB,CAAClE,MAAqB,IAAImE,GAASnE,CAAO;AAEvE,IAAIoE,KAAS,GACTC,KAAW,GACXC,KAAO;AAIX,MAAMC,KAAqBvD,EAGzB,YAAY2B,EAAc,EAAE,GACxB6B,KAAoBxD,EAGxB,WAAW2B,EAAc,EAAE,GAKvB8B,KAA+B,CAACtD,MAAmB;AACvD,QAAM,EAAE,OAAAuD,GAAO,WAAAC,GAAW,SAAA3E,GAAS,QAAA4E,GAAQ,SAAAC,MAAY1D;AAGvD,MAAIA,EAAK,aAAa;AACpB,UAAM2D,IAAaC,GAAe5D,CAAI,GAChC6D,IAAcL,MAAc,SAAS,SAAS,QAC9CM,IAAiBN,MAAc,SAAS,UAAU;AAExDlC,IAAAA,EAASmC,EAAOF,CAAK,GAAG5C,CAAW,GACnCR,EAAYsD,EAAOF,CAAK,GAAG,GAAGlB,EAAY,IAAIwB,CAAW,EAAE,GAC3D1D,EAAYsD,EAAOF,CAAK,GAAG,GAAGlB,EAAY,IAAIyB,CAAc,EAAE,GAE9D3D,EAAYsD,EAAOE,CAAU,GAAGhD,CAAW,GAC3CR,EAAYsD,EAAOE,CAAU,GAAG,GAAGtB,EAAY,IAAIyB,CAAc,EAAE,GAEnE7D,EAAcpB,GAASwE,EAAiB,GACxCU,EAAM,MAAMlF,GAAS0D,EAAW,GAI9BvC,EAAK,SAAS,CAAC+B,EAAYlD,CAAO,EAAE,UAAU6E,EAAQ,YACtD,CAAC1D,EAAK,YAENA,EAAK,MAAA;AAAA,EAET;AACF;AAGA,SAASgE,KAAwC;AAC/C,QAAMhE,IAAO8C,GAAoB,IAAI;AAErC,EAAI9C,KAAQ,CAACA,EAAK,YAAY,CAAC+D,EAAM,IAAI,MAAMvB,EAAW,KACxDlB,EAAS,MAAMkB,EAAW;AAE9B;AAGA,SAASyB,KAAyC;AAChD,QAAMjE,IAAO8C,GAAoB,IAAI;AAErC,EAAI9C,KAAQA,EAAK,YAAY,CAAC+D,EAAM,IAAI,MAAMvB,EAAW,KACvDxC,EAAK,MAAA;AAET;AAGA,SAASkE,GAA4C,GAAe;AAClE,IAAE,eAAA;AACF,QAAMrF,IAAUqD,EAAQ,MAAME,EAAgB,KAAKR,EAAiB,IAAI,GAClE5B,IAAOnB,KAAWiE,GAAoBjE,CAAO;AAKnD,MAFIR,GAAW,IAAI,KAEf,CAAC2B,KAAQA,EAAK,YAAa;AAE/B,QAAMmE,IAAW,EACf3F,EAAa,MAAM8D,EAAa,KAEhC;AAIF,EACE,QACA,CAAC/D,EAAS,MAAMoC,CAAW,KAC3B,CAAC,OAAO,MAAMwD,CAAQ,KAGtBnE,EAAK,GAAGmE,CAAQ;AAEpB;AAGA,SAASC,GAA2C,GAAe;AACjE,IAAE,eAAA;AACF,QAAMvF,IAAUqD,EAAQ,MAAME,EAAgB,KAAKR,EAAiB,IAAI,GAClE5B,IAAOnB,KAAWiE,GAAoBjE,CAAO;AAKnD,MAFIR,GAAW,IAAI,KAEf,CAAC2B,KAAQA,EAAK,YAAa;AAE/B,QAAM6D,IAAcrF,EAAa,MAAM+D,EAAW;AAGlD,EAAIsB,MAAgB,SAClB7D,EAAK,KAAA,IACI6D,MAAgB,UACzB7D,EAAK,KAAA;AAET;AAGA,MAAMqE,KAAqB,CACzB,EAAE,MAAAC,GAAM,QAAAhG,QACL;AACH,QAAMwD,IAAMC,EAAYzD,CAAM,GACxB,CAACO,CAAO,IAAI,CAAC,GAAG0F,EAA8BnC,IAAkBN,CAAG,CAAC,EACvE,OAAO,CAACK,MAAMqC,GAAuBrC,CAAC,CAAC,GACpCnC,IAAO8C,GAAoBjE,CAAO;AAGxC,MACE,CAACmB,KAAQA,EAAK,eAAe,yBAAyB,KAAK1B,EAAO,QAAQ,EAC1E;AAEF,QAAMmG,IAAMC,GAAM7F,CAAO;AAKzB,EAAIyF,OAHkBG,IAAqBE,KAAfC,MAGD5E,EAAK,KAAA,IACvBsE,OALaG,IAAsBG,KAAhBD,OAKI3E,EAAK,KAAA;AACvC;AAKA,SAAS6E,GAEP,GACA;AACA,QAAM,EAAE,QAAAvG,MAAW,GACb0B,IAAO8C,GAAoB,IAAI;AAKrC,EACE9C,KACAA,EAAK,WACL,CAACA,EAAK,SAAS,SAAS1B,CAAqB,KAC7C,CAAC0B,EAAK,SAAS,SAAS1B,GAAQ,aAA4B,MAC3D,CAAC0B,EAAK,aAAa,CAACA,EAAK,UAAU,SAAS1B,CAAM,MAEnD,EAAE,eAAA;AAEN;AAKA,SAASwG,GAEP,GACA;AACA,QAAM,EAAE,QAAAxG,MAAW,GACb0B,IAAO8C,GAAoB,IAAI;AAGrC,MAAI,CAAC9C,KAAQA,EAAK,eAAeA,EAAK,QAAS;AAG/C,QAAM,EAAE,UAAA+E,GAAU,WAAAC,EAAA,IAAchF;AAEhC,EACE,CAAC,CAAC,GAAG+E,GAAUC,CAAS,EAAE;AAAA,IAAM,CAACC,MAC/BA,MAAOA,MAAO3G,KAAU2G,EAAG,SAAS3G,CAAM;AAAA,EAAA,KACvC,KAAK,SAASA,CAAM,MAEzB2E,KAAS,EAAE,OAIXjD,EAAK,UAAU,IACfkF,GAA4BlF,GAAM,EAAI;AAQ1C;AAGA,MAAMmF,KAA6B,CAAC,MAAiC;AACnE,EAAAjC,KAAW,EAAE;AACf,GAGMkC,KAA2B,CAAC,MAAiC;AACjE,QAAM,EAAE,QAAA9G,MAAW,GACbwD,IAAMC,EAAYzD,CAAM,GACxB0B,IAAO,CAAC,GAAGuE,EAAiBnC,IAAkBN,CAAG,CAAC,EACrD,IAAI,CAAC,MAAMgB,GAAoB,CAAC,CAAa,EAC7C,KAAK,CAACrJ,MAAMA,EAAE,OAAO;AAGxB,MAAI,CAACuG,EAAM;AAEX,QAAM,EAAE,SAAAnB,GAAS,OAAA0E,EAAA,IAAUvD,GACrByE,IAAMC,GAAM7F,CAAO;AACzB,EAAAsE,KAAO,EAAE,OAETnD,EAAK,UAAU,IACfkF,GAA4BlF,CAAI,GAG9B,CAAC8B,EAAI,aAAA,GAAgB,SAAA,EAAW,UAChCjD,EAAQ,SAASP,CAAM,KACvB,KAAK,IAAI2E,KAASE,EAAI,IAAI,QAItBD,KAAWD,KACbjD,EAAK,GAAGuD,KAASkB,IAAM,KAAK,EAAE,IACrBvB,KAAWD,MACpBjD,EAAK,GAAGuD,KAASkB,IAAM,IAAI,GAAG,IAKlCxB,KAAS,GACTC,KAAW,GACXC,KAAO;AACT,GAKMkC,KAA4B,CAACrF,GAAgBuD,MAAkB;AACnE,QAAM,EAAE,YAAA+B,MAAetF;AACvB,GAAC,GAAGsF,CAAU,EAAE,QAAQ,CAACnD,MAAMhC,EAAYgC,GAAGxB,CAAW,CAAC,GAGtDX,EAAK,WAAWuD,CAAK,OAAY+B,EAAW/B,CAAK,GAAG5C,CAAW;AACrE,GAGMuE,KAA8B,CAAClF,GAAgBK,MAAkB;AACrE,QAAM,EAAE,SAAAxB,MAAYmB,GACdM,IAASD,IAAME,IAAcC;AACnC,EAAAF;AAAA,IACEyB,EAAYlD,CAAO;AAAA,IACnB0G;AAAAA,IACAJ;AAAA,IACAK;AAAAA,EAAA,GAEFlF;AAAA,IACEyB,EAAYlD,CAAO;AAAA,IACnB4G;AAAAA,IACAL;AAAA,IACAI;AAAAA,EAAA;AAEJ,GAGM5B,KAAiB,CAAC5D,MAAmB;AACzC,QAAM,EAAE,QAAAyD,GAAQ,SAAA5E,EAAA,IAAYmB,GACtB2D,IAAa3E;AAAAA,IACjB,IAAIqD,EAAY,IAAI1B,CAAW;AAAA,IAC/B9B;AAAA,EAAA;AAEF,SAAO8E,IAAa,CAAC,GAAGF,CAAM,EAAE,QAAQE,CAAU,IAAI;AACxD;AAKA,MAAqBX,WAAiBrE,GAAc;AAAA,EAClD,OAAO,WAAWyD;AAAA,EAClB,OAAO,OAAOW;AAAA,EACd,OAAO,cAAcD;AAAA,EAYrB,YAAYxE,GAA0BM,GAAmC;AACvE,UAAMN,GAAQM,CAAM;AAGpB,UAAM,EAAE,SAAAC,MAAY;AAGpB,SAAK,YAAY6F,GAAM7F,CAAO,IAAI,UAAU,QAC5C,KAAK,UAAU,IAIf,KAAK,SAAS6G,GAAuBrD,IAAcxD,CAAO;AAC1D,UAAM,EAAE,QAAA4E,MAAW;AAInB,QAAIA,EAAO,SAAS,EAAG;AAEvB,UAAMkC,IAAc/B,GAAe,IAAI,GAEjCgC,IAAiB,CAAC,GAAGnC,CAAM,EAAE;AAAA,MAAK,CAACnJ,MACvCuL,GAAQvL,GAAG,IAAI+H,EAAY,OAAO;AAAA,IAAA;AAEpC,SAAK,QAAQsD;AAGb,UAAM7D,IAAMC,EAAYlD,CAAO;AAE/B,SAAK,WAAW;AAAA,MACd,GAAG0F,EAA8B,IAAIhC,EAAW,KAAK1D,CAAO;AAAA,MAC5D,GAAG0F;AAAAA,QACD,IAAIhC,EAAW,KAAKhB,EAAY,MAAM1C,EAAQ,EAAE;AAAA,QAChDiD;AAAA,MAAA;AAAA,IACF,EACA,OAAO,CAAC5G,GAAGzB,GAAGqM,MAAOrM,MAAMqM,EAAG,QAAQ5K,CAAC,CAAC,GAE1C,KAAK,YAAY8D;AAAAA,MACf,IAAIwC,EAAc;AAAA,MAClB3C;AAAA,IAAA,GAIF,KAAK,aAAa;AAAA,MAChB,GAAI,KAAK,YACL0F,EAA8B,IAAIjC,EAAa,KAAK,KAAK,SAAS,IACjE,CAAA;AAAA,MACL,GAAGiC;AAAAA,QACD,IAAIjC,EAAa,KAAKf,EAAY,MAAM1C,EAAQ,EAAE;AAAA,QAClDiD;AAAA,MAAA;AAAA,IACF,EACA,OAAO,CAAC5G,GAAGzB,GAAGqM,MAAOrM,MAAMqM,EAAG,QAAQ5K,CAAC,CAAC;AAG1C,UAAM,EAAE,SAAAwI,MAAY;AAGpB,SAAK,QAAQ,WAAWA,EAAQ,aAAa,KACzCb,GAAiB,WACjBa,EAAQ,UAIRkC,IACF,KAAK,QAAQ,CAAC,GAAGnC,CAAM,EAAE,QAAQmC,CAAc,IACtCD,IAAc,MACvB,KAAK,QAAQ,GACbrE,EAASmC,EAAO,CAAC,GAAG9C,CAAW,GAC3B,KAAK,WAAW,UAAQ0E,GAA0B,MAAM,CAAC,IAI3D,KAAK,WAAW,UAAQA,GAA0B,MAAM,KAAK,KAAK,GAGtE,KAAK,sBAAsB,EAAI,GAG3B3B,EAAQ,YAAU,KAAK,MAAA;AAAA,EAC7B;AAAA,EAGA,IAAI,OAAO;AACT,WAAOjC;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOoB;AAAA,EACT;AAAA,EAGA,IAAI,WAAW;AACb,WAAOtE,EAAS,KAAK,SAASiE,EAAW;AAAA,EAC3C;AAAA,EAGA,IAAI,cAAc;AAChB,WAAOxD;AAAAA,MACL,IAAIqD,EAAY,UAAUA,EAAY;AAAA,MACtC,KAAK;AAAA,IAAA,MACD;AAAA,EACR;AAAA,EAKA,QAAQ;AACN,UAAM,EAAE,SAAAxD,GAAS,SAAA6E,GAAS,UAAAqC,GAAU,OAAAxC,MAAU;AAE9CQ,IAAAA,EAAM,MAAMlF,GAAS2C,EAAc,GAC/BuE,MACFhC,EAAM,MAAMlF,GAAS2D,EAAW,GAChCrC,EAAYtB,GAAS2D,EAAW,IAGlCuB,EAAM;AAAA,MACJlF;AAAA,MACA,MAAM;AAIJ,QACE,KAAK,WAAW,CAAC,KAAK,YAAY,CAAC,KAAK,WACxC2F,GAAuB3F,CAAO,KAE9B,KAAK,GAAG0E,IAAQ,CAAC;AAAA,MAErB;AAAA,MACAG,EAAQ;AAAA,MACRlC;AAAA,IAAA;AAAA,EAEJ;AAAA,EAGA,QAAQ;AACN,UAAM,EAAE,SAAA3C,GAAS,SAAA6E,EAAA,IAAY;AAE7B,IAAI,KAAK,YAAY,CAACA,EAAQ,aAE9BpC,EAASzC,GAAS2D,EAAW,GAC7BuB,EAAM;AAAA,MACJlF;AAAA,MACA,MAAM;AAAA,MAEN;AAAA,MACA;AAAA,MACA2D;AAAA,IAAA;AAAA,EAEJ;AAAA,EAGA,OAAO;AAEL,IAAK,KAAK,eACR,KAAK,GAAG,KAAK,QAAQ,CAAC;AAAA,EAE1B;AAAA,EAGA,OAAO;AAEL,IAAK,KAAK,eACR,KAAK,GAAG,KAAK,QAAQ,CAAC;AAAA,EAE1B;AAAA,EAGA,GAAGwD,GAAa;AACd,UAAM,EAAE,SAAAnH,GAAS,QAAA4E,GAAQ,SAAAC,EAAA,IAAY,MAC/BC,IAAaC,GAAe,IAAI,GAChCa,IAAMC,GAAM7F,CAAO;AACzB,QAAIoH,IAAOD;AAKX,QACE,KAAK,eAAerC,MAAesC,KACnClC,EAAM,IAAIlF,GAAS0D,EAAW,EAC9B;AAIF,IACEoB,IAAasC,KAAStC,MAAe,KAAKsC,MAASxC,EAAO,SAAS,IAEnE,KAAK,YAAYgB,IAAM,UAAU,UAEjCd,IAAasC,KAAStC,MAAeF,EAAO,SAAS,KAAKwC,MAAS,OAEnE,KAAK,YAAYxB,IAAM,SAAS;AAElC,UAAM,EAAE,WAAAjB,MAAc;AAGtB,IAAIyC,IAAO,IACTA,IAAOxC,EAAO,SAAS,IACdwC,KAAQxC,EAAO,WACxBwC,IAAO;AAIT,UAAMpC,IAAcL,MAAc,SAAS,SAAS,QAC9CM,IAAiBN,MAAc,SAAS,UAAU,OAElD0C,IAAkB;AAAA,MACtB,eAAezC,EAAOwC,CAAI;AAAA,MAC1B,MAAMtC;AAAA,MACN,IAAIsC;AAAA,MACJ,WAAAzC;AAAA,IAAA;AASF,IALA2C,GAAa/C,IAAoB8C,CAAe,GAChDC,GAAa9C,IAAmB6C,CAAe,GAG/CjG,EAAcpB,GAASuE,EAAkB,GACrC,CAAAA,GAAmB,qBAGvB,KAAK,QAAQ6C,GACbZ,GAA0B,MAAMY,CAAI,GAGlCG,GAA6B3C,EAAOwC,CAAI,CAAC,KACzC1H,EAASM,GAAS,OAAO,IAEzBkF,EAAM;AAAA,MACJlF;AAAA,MACA,MAAM;AACJyC,QAAAA,EAASmC,EAAOwC,CAAI,GAAG,GAAG5D,EAAY,IAAIwB,CAAW,EAAE,GACvDwC,GAAO5C,EAAOwC,CAAI,CAAC,GACnB3E,EAASmC,EAAOwC,CAAI,GAAG,GAAG5D,EAAY,IAAIyB,CAAc,EAAE,GAC1DxC,EAASmC,EAAOE,CAAU,GAAG,GAAGtB,EAAY,IAAIyB,CAAc,EAAE,GAGhE1D;AAAAA,UACEqD,EAAOwC,CAAI;AAAA,UACX,MACE,KAAK,UAAU,KAAK,OAAO,UAC3B3C,GAA6B,IAAI;AAAA,QAAA;AAAA,MAEvC;AAAA,MACA;AAAA,MACAf;AAAA,IAAA,KAGFjB,EAASmC,EAAOwC,CAAI,GAAGtF,CAAW,GAClCR,EAAYsD,EAAOE,CAAU,GAAGhD,CAAW,GAE3CoD,EAAM;AAAA,MACJlF;AAAA,MACA,MAAM;AACJkF,QAAAA,EAAM,MAAMlF,GAAS0D,EAAW,GAG5B1D,KAAW6E,EAAQ,YAAY,CAAC,KAAK,YACvC,KAAK,MAAA,GAGPzD,EAAcpB,GAASwE,EAAiB;AAAA,MAC1C;AAAA,MACA;AAAA,MACAd;AAAA,IAAA;AAAA,EAGN;AAAA,EAGA,wBAAwB,CAAClC,MAAkB;AACzC,UAAM,EAAE,SAAAxB,GAAS,SAAA6E,GAAS,QAAAD,GAAQ,UAAAsB,GAAU,YAAAO,MAAe,MACrD,EAAE,OAAAgB,GAAO,OAAAC,GAAO,UAAAC,GAAU,UAAAC,MAAa/C,GACvCpD,IAASD,IAAME,IAAcC;AAEnC,IAAI+F,KAASC,MACXlG,EAAOzB,GAAS6H,IAAiB1C,EAAoB,GACrD1D,EAAOzB,GAAS8H,IAAiB1C,EAAqB,IAGpDqC,KAAS7C,EAAO,SAAS,MAC3BnD;AAAA,MACEzB;AAAA,MACA+D;AAAAA,MACAkC;AAAA,MACAU;AAAAA,IAAA,GAEFlF,EAAOzB,GAAS8D,IAAiBkC,IAAqB,EAAE,SAAS,IAAO,GACxEvE,EAAOzB,GAAS+H,IAAgB/B,IAAqB,EAAE,SAAS,IAAO,IAIrEE,EAAS,UACXA,EAAS,QAAQ,CAAC8B,MAAU;AAC1B,MAAAvG,EAAOuG,GAAOnG,GAAiB0D,EAAuB;AAAA,IACxD,CAAC,GAICkB,EAAW,UACbA,EAAW,QAAQ,CAACN,MAAc;AAChC,MAAA1E,EAAO0E,GAAWtE,GAAiBwD,EAAwB;AAAA,IAC7D,CAAC,GAGCuC,KACFnG,EAAOyB,EAAYlD,CAAO,GAAGiI,IAAczC,EAAkB;AAAA,EAEjE;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,aAAA0C,MAAgB,MAElBC,IAAQ;AAAA,MACZ,GAAG;AAAA,MACH,aAAAD;AAAA,IAAA;AAEF,SAAK,sBAAA,GACL,MAAM,QAAA,GAGFC,EAAM,eACR5G,EAAqB4G,EAAM,OAAOA,EAAM,KAAK,GAAG,MAAM;AACpD,MAAA1D,GAA6B0D,CAAK;AAAA,IACpC,CAAC;AAAA,EAEL;AACF;AClsBA,MAAMC,KAAkB,cCAlBC,IAAiB,YCAjBC,KAAoB,YCsCpBC,KAAmB,IAAIF,CAAc,IACrCG,KAAyB,IAAIzG,EAAY,KAAKsG,CAAc,MAC5DI,KAAmB,EAAE,QAAQ,KAAA,GAG7BC,KAAsB,CAAC1I,MAC3BY,EAAsBZ,GAASsI,EAAiB,GAG5CK,KAAuB,CAAC3I,MAAqB,IAAI4I,GAAS5I,CAAO,GAIjE6I,KAAoB7H,EAGxB,WAAWqH,CAAc,EAAE,GACvBS,KAAqB9H,EAGzB,YAAYqH,CAAc,EAAE,GACxBU,KAAoB/H,EAGxB,WAAWqH,CAAc,EAAE,GACvBW,KAAsBhI,EAG1B,aAAaqH,CAAc,EAAE,GAKzBY,KAAiB,CAAC9H,MAAmB;AACzC,QAAM,EAAE,SAAAnB,GAAS,QAAAkJ,GAAQ,UAAAC,EAAA,IAAahI;AAEtCC,EAAAA,EAAcpB,GAAS6I,EAAiB,GACnCA,GAAkB,qBACrB3D,EAAM,IAAIlF,GAASoJ,IAAM,EAAE,GACvBF,KAAQhE,EAAM,IAAIgE,GAAQE,IAAM,EAAE,GAEtC3G,EAASzC,GAASoI,EAAe,GACjC9G,EAAYtB,GAASqI,CAAc,GAEnCgB,EAAgBrJ,GAAS,EAAE,QAAQ,GAAGA,EAAQ,YAAY,MAAM,GAEhEuB,EAAqBvB,GAAS,MAAM;AAClCkF,IAAAA,EAAM,MAAMlF,CAAO,GACfkJ,KAAQhE,EAAM,MAAMgE,CAAM,GAE9BC,EAAS,QAAQ,CAACG,MAAQhH,EAAagH,GAAKC,IAAc,MAAM,CAAC,GAEjEjI,EAAYtB,GAASoI,EAAe,GACpC3F,EAASzC,GAASqI,CAAc,GAChC5F,EAASzC,GAASZ,CAAS,GAE3BiK,EAAgBrJ,GAAS,EAAE,QAAQ,GAAA,CAAI,GAEvCoB,EAAcpB,GAAS8I,EAAkB;AAAA,EAC3C,CAAC;AAEL,GAGMU,KAAkB,CAACrI,MAAmB;AAC1C,QAAM,EAAE,SAAAnB,GAAS,QAAAkJ,GAAQ,UAAAC,EAAA,IAAahI;AAEtCC,EAAAA,EAAcpB,GAAS+I,EAAiB,GAEnCA,GAAkB,qBACrB7D,EAAM,IAAIlF,GAASoJ,IAAM,EAAE,GACvBF,KAAQhE,EAAM,IAAIgE,GAAQE,IAAM,EAAE,GAEtCC,EAAgBrJ,GAAS,EAAE,QAAQ,GAAGA,EAAQ,YAAY,MAAM,GAEhEsB,EAAYtB,GAASqI,CAAc,GACnC/G,EAAYtB,GAASZ,CAAS,GAC9BqD,EAASzC,GAASoI,EAAe,GAEjCZ,GAAOxH,CAAsB,GAC7BqJ,EAAgBrJ,GAAS,EAAE,QAAQ,MAAA,CAAO,GAE1CuB,EAAqBvB,GAAS,MAAM;AAClCkF,IAAAA,EAAM,MAAMlF,CAAO,GAEfkJ,KAAQhE,EAAM,MAAMgE,CAAM,GAE9BC,EAAS,QAAQ,CAACG,MAAQhH,EAAagH,GAAKC,IAAc,OAAO,CAAC,GAElEjI,EAAYtB,GAASoI,EAAe,GACpC3F,EAASzC,GAASqI,CAAc,GAEhCgB,EAAgBrJ,GAAS,EAAE,QAAQ,GAAA,CAAI,GAEvCoB,EAAcpB,GAASgJ,EAAmB;AAAA,EAC5C,CAAC;AAEL,GAKMS,KAAuB,CAAC,MAA+B;AAC3D,QAAM,EAAE,QAAAhK,MAAW,GACbiK,IAAUjK,KACd4D,EAAQ5D,GAAQ+I,EAAsB,GAClCxI,IAAU0J,KAAW3G,EAAiB2G,CAAO,GAC7CvI,IAAOnB,KAAW0I,GAAoB1I,CAAO;AAGnD,EAAI0J,KAAWlK,GAAWkK,CAAO,KAE5BvI,MAELA,EAAK,OAAA,GAEDuI,GAAS,YAAY,OAAK,EAAE,eAAA;AAClC;AAMA,MAAqBd,WAAiB9I,GAAc;AAAA,EAClD,OAAO,WAAWyI;AAAA,EAClB,OAAO,OAAOI;AAAA,EACd,OAAO,cAAcD;AAAA,EAOrB,YAAYjJ,GAA0BM,GAAmC;AACvE,UAAMN,GAAQM,CAAM;AAGpB,UAAM,EAAE,SAAAC,GAAS,SAAA6E,EAAA,IAAY,MACvB5B,IAAMC,EAAYlD,CAAO;AAG/B,SAAK,WAAW,CAAC,GAAG0F,EAAiB8C,IAAwBvF,CAAG,CAAC,EAAE;AAAA,MACjE,CAACqG,MAAQvG,EAAiBuG,CAAG,MAAMtJ;AAAA,IAAA,GAIrC,KAAK,SAAS2J,EAAc9E,EAAQ,MAAM,IACtCA,EAAQ,SACR3E,GAAS2E,EAAQ,MAAM,IACvB9B,EAAiB/C,CAAO,KAAKG,EAAc0E,EAAQ,QAAQ5B,CAAG,IAC9D,MAGJ,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAOqF;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOG;AAAA,EACT;AAAA,EAKA,OAAO;AACL,UAAM,EAAE,UAAAU,GAAU,SAAAnJ,EAAA,IAAY;AAE9B,IAAKkF,EAAM,IAAIlF,CAAO,MACpBwJ,GAAgB,IAAI,GAEhBL,EAAS,UACXA,EAAS,QAAQ,CAACG,MAAQ7G,EAAS6G,GAAK,GAAGjB,CAAc,GAAG,CAAC;AAAA,EAGnE;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAArI,GAAS,QAAAkJ,GAAQ,UAAAC,EAAA,IAAa;AACtC,QAAIS,GACAC;AAEJ,IAAIX,MACFU,IAAiB;AAAA,MACf,GAAGlE,EAAiB,IAAI2C,CAAc,IAAIjJ,CAAS,IAAI8J,CAAM;AAAA,IAAA,EAC7D,KAAK,CAACtO,MAAM8N,GAAoB9N,CAAC,CAAC,GACpCiP,IAAyBD,KACvBlB,GAAoBkB,CAAc,KAGjC,CAACV,KAAU,CAAChE,EAAM,IAAIgE,CAAM,MAAM,CAAChE,EAAM,IAAIlF,CAAO,MACnD6J,KAA0BD,MAAmB5J,MAC/CwJ,GAAgBK,CAAsB,GACtCA,EAAuB,SAAS,QAAQ,CAACP,MAAQ;AAC/C7G,MAAAA,EAAS6G,GAAK,GAAGjB,CAAc,GAAG;AAAA,IACpC,CAAC,IAGHY,GAAe,IAAI,GAEfE,EAAS,UACXA,EAAS,QAAQ,CAACG,MAAQhI,EAAYgI,GAAK,GAAGjB,CAAc,GAAG,CAAC;AAAA,EAGtE;AAAA,EAGA,SAAS;AACP,IAAK3I,EAAS,KAAK,SAASN,CAAS,SAC3B,KAAA,SADmC,KAAA;AAAA,EAE/C;AAAA,EAGA,wBAAwB,CAACoC,MAAkB;AACzC,UAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,UAAAwH,MAAa;AAGrB,IAAIA,EAAS,UACXA,EAAS,QAAQ,CAACG,MAAQ;AACxB,MAAA7H,EAAO6H,GAAKzH,GAAiB4H,EAAoB;AAAA,IACnD,CAAC;AAAA,EAEL;AAAA,EAGA,UAAU;AACR,SAAK,sBAAA,GAEL,MAAM,QAAA;AAAA,EACR;AACF;AC/QA,IAAI5J,KAAU;AAId,MAAMiK,KAAgB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AACD,GACMC,KAAc;AAKpB,IAAIC,KAAmB,MAAM;AAAA,EAC5B;AAAA,EACA,OAAO,UAAUnK;AAAA;AAAA,EAEjB;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,YAAYoK,GAAUpF,GAAS;AAC9B,QAAI,CAACqF,GAAWD,CAAQ,EAAG,OAAM,IAAI,MAAM,GAAGF,EAAW,KAAKE,CAAQ,qBAAqB;AAC3F,SAAK,UAA0B,oBAAI,IAAG,GACtC,KAAK,KAAKA,GACV,KAAK,KAAK;AACV,UAAME,IAAOlK,EAAU4E,GAAS,IAAI,IAAIA,EAAQ,OAAO,UAAU;AACjE,SAAK,KAAKsF,GACV,KAAK,MAAMtF,GAAS,YACpB,KAAK,MAAMA,GAAS;AAEpB,SAAK,MAAMiF,GAAc,QAAQjF,GAAS,gBAAgB,cAAc,GACxE,KAAK,KAAKsF,EAAK,aACf,KAAK,KAAKA,EAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,UAAU,CAAC1K,MAAW;AACrB,QAAI,CAACQ,EAAUR,CAAM,EAAG,OAAM,IAAI,MAAM,GAAGsK,EAAW,KAAKtK,CAAM,iCAAiC;AAElG,IAAK,KAAK,GAAG,SAASA,CAAM,KAC5B,KAAK,GAAGA,CAAM,EAAE,KAAK,CAAC2K,MAAY;AAEjC,MAAIA,EAAQ,sBAAsB,CAAC,KAAK,SAAS3K,CAAM,KAAG,KAAK,QAAQ,IAAIA,GAAQ2K,CAAO;AAE1F,MAAK,KAAK,OAAI,KAAK,KAAK,sBAAsB,KAAK,GAAG;AAAA,IACvD,CAAC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,CAAC3K,MAAW;AAEvB,IAAI,KAAK,QAAQ,IAAIA,CAAM,KAAG,KAAK,QAAQ,OAAOA,CAAM;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,MAAM;AAEX,QAAI,CAAC,KAAK,QAAQ,MAAM;AACvB,WAAK,KAAK;AACV;AAAA,IACD;AACA,UAAM,EAAE,aAAA4K,GAAa,cAAAC,EAAY,IAAK,KAAK,IACrCC,IAAQ,IAAI,QAAQ,CAACC,MAAY;AACtC,YAAMC,IAAU,CAAA;AAChB,WAAK,QAAQ,QAAQ,CAAC,EAAE,QAAAhL,GAAQ,oBAAoBiL,GAAgB,gBAAgBC,QAAwB;AAE3G,QAAK,KAAK,GAAG,SAASlL,CAAM,KAC5B,KAAK,GAAGA,CAAM,EAAE,KAAK,CAAC2K,MAAY;AAEjC,cAAI,CAACA,EAAQ,gBAAgB;AAC5B,gBAAI,KAAK,QAAQ,EAAG;AACf,gBAAI,KAAK,QAAQ,GAAG;AACxB,cAAIO,MACH,KAAK,QAAQ,IAAIlL,GAAQ2K,CAAO,GAChCK,EAAQ,KAAKL,CAAO;AAErB;AAAA,YACD;AAAA,UACD;AACA,gBAAM,EAAE,MAAAQ,GAAM,KAAAC,EAAG,IAAKT,EAAQ;AAE9B,WAAIM,EAAe,QAAQG,KAAOH,EAAe,SAASE,KAAQ,KAAK,OAAOP,KAAe,KAAK,OAAOC,OACxG,KAAK,QAAQ,IAAI7K,GAAQ2K,CAAO,GAChCK,EAAQ,KAAKL,CAAO;AAAA,QAEtB,CAAC;AAAA,MACF,CAAC,GACD,KAAK,KAAKC,GACV,KAAK,KAAKC,GACVE,EAAQC,CAAO;AAAA,IAChB,CAAC;AACD,SAAK,KAAK,sBAAsB,YAAY;AAC3C,YAAMA,IAAU,MAAMF;AAEtB,MAAIE,EAAQ,UAAQ,KAAK,GAAGA,GAAS,IAAI,GACzC,KAAK,IAAG;AAAA,IACT,CAAC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,KAAK,CAAChL,MACE,IAAI,QAAQ,CAAC+K,MAAY;AAQ/B,IAP6B,IAAI,qBAAqB,CAAC,CAACJ,CAAO,GAAGU,MAAO;AACxE,MAAAA,EAAG,WAAU,GACbN,EAAQJ,CAAO;AAAA,IAChB,GAAG;AAAA,MACF,WAAW,KAAK;AAAA,MAChB,YAAY,KAAK;AAAA,IACrB,CAAI,EACoB,QAAQ3K,CAAM;AAAA,EACpC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOF,WAAW,CAACA,MAAW,KAAK,QAAQ,IAAIA,CAAM;AAAA;AAAA;AAAA;AAAA,EAI9C,aAAa,MAAM;AAClB,yBAAqB,KAAK,EAAE,GAC5B,KAAK,QAAQ,MAAK,GAClB,KAAK,KAAK;AAAA,EACX;AACD;ACvKA,MAAMsL,KAAsB,CAAC,YAAY,UAAU,aAAa,SAAS,GCAnEC,KAAoB,YCApBC,KAAoB,iBCEpBC,KAAgB,CAAClL,MAAyB;AAE9C,QAAMmL,IAAe9H,EAAQrD,GAAS,GAAG;AACzC,SACGA,EAAQ,YAAY,OAEnBoL,GAAapL,GAAS,MAAM,KAC3BL,EAAaK,GAAS,MAAM,GAAI,MAAM,EAAE,MAAM,OAEhDmL,KACCC,GAAaD,GAAc,MAAM,KAChCxL,EAAawL,GAAc,MAAM,GAAI,MAAM,EAAE,MAAM;AAE1D,GCkCM,CAACE,IAAgBC,IAAcC,IAAiBC,EAAa,IACjEC,IACIC,KAAmB,IAAI3J,EAAY,KAAKsJ,EAAc,MAGtDM,KAAsB,CAAC3L,MAC3BY,EAAsBZ,GAASgL,EAAiB,GAG5CY,KAAuB,CAAC5L,MAAqB,IAAI6L,GAAS7L,CAAO,GAKjE8L,KAAuB,GAAGb,EAAiB,QAC3Cc,KAAgB,CAACV,IAAgBC,EAAY,GAC7CU,KAAkB,CAACT,IAAiBC,EAAa,GACjDS,KAAgB,CAAC,KAAK,QAAQ,GAE9BC,KAAmB;AAAA,EACvB,QAAQ;AAAA,EACR,SAAS;AACX,GAMMC,KAAoBnL;AAAAA,EACxB,WAAWqK,EAAc;AAC3B,GACMe,KAAqBpL;AAAAA,EACzB,YAAYqK,EAAc;AAC5B,GACMgB,KAAoBrL;AAAAA,EACxB,WAAWqK,EAAc;AAC3B,GACMiB,KAAsBtL,EAG1B,aAAaqK,EAAc,EAAE,GACzBkB,KAAuBvL,EAG3B,cAAcqK,EAAc,EAAE,GAK1BmB,KAAgB,CAACrL,MAAmB;AACxC,QAAM,EAAE,SAAAnB,GAAS,MAAAyM,GAAM,eAAAC,GAAe,SAAA7H,MAAY1D,GAC5C,EAAE,QAAAwL,MAAW9H;AAGnB,MAAI+H,EAAgBH,GAAM,UAAU,MAAM,SAAU;AAEpD,QAAM7G,IAAMC,GAAM7F,CAAO,GACnB6M,IAAUnN,EAAS+M,GAAMX,EAAoB;AAInD,EADmB,CAAC,UAAU,OAAO,UAAU,QAAQ,OAAO,EACnD,QAAQ,CAAC1P,MAAM;AACxB,UAAM0Q,KAAmC,CAAA;AACzC,IAAAA,GAAM1Q,CAAC,IAAI,IACXiN,EAAgBoD,GAAMK,EAAK;AAAA,EAC7B,CAAC;AAKD,MAAIC,IAAgBtB,GAAgB,KAAK,CAACpP,MAAMqD,EAASgN,GAAerQ,CAAC,CAAC,KAExEgP;AAEF,QAAM2B,IAA8C;AAAA,IAClD,UAAU,CAACL,GAAQ,GAAG,CAAC;AAAA,IACvB,QAAQ,CAAC,GAAG,GAAGA,CAAM;AAAA,IACrB,WAAW/G,IAAM,CAAC,IAAI,GAAG,GAAG+G,CAAM,IAAI,CAAC,IAAIA,GAAQ,CAAC;AAAA,IACpD,SAAS/G,IAAM,CAAC,IAAI+G,GAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAGA,CAAM;AAAA,EAAA,GAG9CM,IAAgE;AAAA,IACpE,UAAU,EAAE,KAAK,OAAA;AAAA,IACjB,QAAQ,EAAE,KAAK,QAAQ,QAAQ,OAAA;AAAA,IAC/B,WAAWrH,IACP,EAAE,MAAM,QAAQ,OAAO,OAAA,IACvB,EAAE,MAAM,QAAQ,OAAO,OAAA;AAAA,IAC3B,SAASA,IACL,EAAE,MAAM,QAAQ,OAAO,OAAA,IACvB,EAAE,MAAM,QAAQ,OAAO,OAAA;AAAA,IAC3B,WAAWA,IACP,EAAE,OAAO,KAAK,MAAM,OAAA,IACpB,EAAE,OAAO,QAAQ,MAAM,IAAA;AAAA,IAC3B,SAASA,IAAM,EAAE,OAAO,QAAQ,MAAM,IAAA,IAAQ,EAAE,OAAO,KAAK,MAAM,OAAA;AAAA,EAAO,GAGrE,EAAE,aAAasH,GAAW,cAAcC,MAAeV,GAEvD,EAAE,aAAApC,GAAa,cAAAC,MAAiB8C,GAAmBpN,CAAO,GAC1D;AAAA,IACJ,MAAMqN;AAAA,IACN,KAAKC;AAAA,IACL,OAAOC;AAAA,IACP,QAAQC;AAAA,EAAA,IACNC,GAAsBzN,CAAO,GAG3B0N,IAAiBL,IAAaH,IAAYP,IAAS,GAEnDgB,KACJN,IAAaH,IAAYK,KAAcZ,KAAUtC,GAE7CuD,KAAeN,IAAYH,IAAaR,KAAUrC,GAElDuD,IACJP,IAAYH,IAAaK,KAAeb,KAAUrC,GAE9CwD,KAAYR,IAAYH,IAAaR,IAAS,GAE9CoB,KAAe,CAACnI,KAAOiH,KAAajH,KAAO,CAACiH,MAChDQ,IAAaE,KAAcL,IAAY,GACnCc,KAAgBpI,KAAOiH,KAAa,CAACjH,KAAO,CAACiH,MACjDQ,IAAaH,KAAa7C;AAsC5B,MAjCE2B,GAAgB,SAASe,CAAa,KAAKW,KAC3CC,OAEAZ,IAAgB1B,KAGhB0B,MAAkBxB,OAChB3F,IAAuB+H,KAAjBD,OAERX,IAAgBvB,KAGhBuB,MAAkBvB,OACjB5F,IAAM8H,IAAiBC,QAExBZ,IAAgBxB,KAEdwB,MAAkBzB,MAAgBwC,MAAa,CAACD,MAClDd,IAAgB1B,KAEd0B,MAAkB1B,MAAkBwC,KAAoB,CAACC,OAC3Df,IAAgBzB,KAIdU,GAAgB,SAASe,CAAa,KAAKa,MAC7CtG,GAAa2F,EAAiBF,CAAa,GAAG;AAAA,IAC5C,KAAK;AAAA,IACL,QAAQ;AAAA,EAAA,CACT,GAIChB,GAAc,SAASgB,CAAa,MAAMgB,KAAcC,IAAc;AAGxE,QAAIC,IAEY,EAAE,MAAM,QAAQ,OAAO,OAAA;AAEvC,IAAI,CAACF,KAAcC,KAAe,CAACpI,MACjCqI,IAAW,EAAE,MAAM,QAAQ,OAAO,EAAA,IAGhCF,KAAc,CAACC,KAAepI,MAChCqI,IAAW,EAAE,MAAM,GAAG,OAAO,OAAA,IAG3BA,KACF3G,GAAa2F,EAAiBF,CAAa,GAAGkB,CAAQ;AAAA,EAE1D;AAEA,QAAMC,KAAoBlB,EAAeD,CAAa;AACtD1D,EAAAA,EAAgBoD,GAAM;AAAA,IACpB,GAAGQ,EAAiBF,CAAa;AAAA,IACjC,QAAQ,GAAGmB,GAAQ,IAAI,CAAC5K,MAAOA,KAAI,GAAGA,CAAC,IAAS,EAAE,KAAK,GAAG,CAAC;AAAA,EAAA,CAC5D,GAGGyI,GAAc,SAASgB,CAAa,KAAKF,KAEvCA,KAIFxD,EAAgBoD,GAAMQ,EAHH,CAACrH,KAAOmI,KAAgBnI,KAAOoI,IAC9C,cACC,SAC2C,CAAC,GAIrD5M,EAAcsL,GAAeH,EAAoB;AACnD,GAGM4B,KAAe,CAAC1B,MACb,MAAM,KAAKA,EAAK,QAAQ,EAC5B,IAAI,CAACpQ,MAAM;AACV,MAAIA,KAAK4P,GAAc,SAAS5P,EAAE,OAAO,EAAG,QAAOA;AACnD,QAAM,EAAE,mBAAA+R,MAAsB/R;AAC9B,SACE+R,KAAqBnC,GAAc,SAASmC,EAAkB,OAAO,IAE9DA,IAEF;AACT,CAAC,EACA,OAAO,CAAC/R,MAAMA,CAAC,GAIdgS,KAAwB,CAAClN,MAAmB;AAChD,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,GAAS,MAAA4H,EAAA,IAAStL,GAC7BM,IAASN,EAAK,OAAOO,IAAcC,GACnCsB,IAAMC,EAAYlD,CAAO;AAE/B,EAAAyB,EAAOwB,GAAKpB,GAAiByM,EAAsB,GACnD7M,EAAOwB,GAAKsL,IAAYD,EAAsB,GAC9C7M,EAAOwB,GAAKgF,IAAcuG,EAAqB,GAC/C/M,EAAOwB,GAAKwL,IAAYC,EAAkB,GAGtC7J,EAAQ,YAAY,cAClB1D,EAAK,OAAMA,EAAK,UAAU,QAAQsL,CAAI,IACrCtL,EAAK,UAAU,WAAA;AAExB,GAGMwN,KAAyB,CAC7B3O,MACwB;AACxB,QAAM4O,IAAgB,CAAC,GAAGnD,IAAiB,aAAa,aAAa,EAClE;AAAA,IAAI,CAACpP,MACJwK,GAAuB,GAAGxK,CAAC,IAAI+C,CAAS,IAAI8D,EAAYlD,CAAO,CAAC;AAAA,EAAA,EAEjE,KAAK,CAACsD,MAAMA,EAAE,MAAM;AAEvB,MAAIsL,KAAiBA,EAAc;AACjC,WAAO,CAAC,GAAIA,EAAc,CAAC,EAAE,QAAsC,EAChE;AAAA,MAAK,CAACtL,MACLmI,GAAgB,KAAK,CAACpP,MAAMA,MAAMsD,EAAa2D,GAAGvB,EAAY,CAAC;AAAA,IAAA;AAIvE,GAKMuM,KAAyB,CAAC,MAAkB;AAChD,QAAM,EAAE,QAAA7O,GAAQ,MAAAoP,EAAA,IAAS;AAGzB,MAAI,CAAClF,EAAclK,CAAM,EAAG;AAG5B,QAAMO,IAAU2O,GAAuBlP,CAAM,GACvC0B,IAAOnB,KAAW2L,GAAoB3L,CAAO;AAGnD,MAAI,CAACmB,EAAM;AAEX,QAAM,EAAE,eAAAuL,GAAe,MAAAD,EAAA,IAAStL,GAE1B2N,IAASpC,KACbA,EAAc,SAASjN,CAAM,MAC5BA,EAAO,YAAY,UAAU4D,EAAQ5D,GAAQ,MAAM,MAAM;AAE5D,EACE,CAACoC,GAAiBkN,EAAc,EAAE,SAASF,CAAI,KAC/C3D,GAAczL,CAAM,KAEpB,EAAE,eAAA,GAKF,CAACqP,KAAUD,MAASN,MAAc9O,MAAWO,KAAWP,MAAWgN,KAEnEtL,EAAK,KAAA;AAET;AAGA,SAAS6N,GAAwC,GAA4B;AAC3E,QAAM7N,IAAOwK,GAAoB,IAAI;AAGrC,EAAInM,GAAW,IAAI,KAEd2B,MAEL,EAAE,gBAAA,GACFA,EAAK,OAAA,GAED+J,GAAc,IAAI,KAAG,EAAE,eAAA;AAC7B;AAGA,MAAMsD,KAAwB,CAAC,MAAqB;AAElD,EAAI,CAACS,IAAcC,EAAU,EAAE,SAAS,EAAE,IAAI,KAAG,EAAE,eAAA;AACrD;AAGA,SAASR,GAAkC,GAAkB;AAC3D,QAAM,EAAE,MAAAjJ,MAAS,GACXzF,IAAU2O,GAAuB,IAAI;AAE3C,MAAI,CAAC3O,EAAS;AAEd,QAAMmB,IAAOwK,GAAoB3L,CAAO,GAClC,EAAE,eAAAmP,EAAA,IAAkBjM,EAAYlD,CAAO;AAK7C,MAAI,CAACmB,KAAQ,CAACgO,EAAe;AAE7B,QAAM,EAAE,MAAA1C,GAAM,MAAA2C,EAAA,IAASjO,GACjBkO,IAAYlB,GAAa1B,CAAI;AAGnC,MACE4C,KAAaA,EAAU,UAAU,CAACJ,IAAcC,EAAU,EAAE,SAASzJ,CAAI,GACzE;AACA,QAAI0B,IAAMkI,EAAU,QAAQF,CAAa;AAEzC,IAAIA,MAAkBnP,IACpBmH,IAAM,IACG1B,MAASyJ,KAClB/H,IAAMA,IAAM,IAAIA,IAAM,IAAI,IACjB1B,MAASwJ,OAClB9H,IAAMA,IAAMkI,EAAU,SAAS,IAAIlI,IAAM,IAAIA,IAG3CkI,EAAUlI,CAAG,KAAGmI,GAAMD,EAAUlI,CAAG,CAAgB;AAAA,EACzD;AAEA,EAAIoI,OAAc9J,KAAQ2J,MACxBjO,EAAK,OAAA,GACLmO,GAAMtP,CAAO;AAEjB;AAKA,MAAqB6L,WAAiB/L,GAAc;AAAA,EAClD,OAAO,WAAW4L;AAAA,EAClB,OAAO,OAAOE;AAAA,EACd,OAAO,cAAcD;AAAA,EASrB,YAAYlM,GAA0BM,GAAmC;AACvE,UAAMN,GAAQM,CAAM;AAGpB,UAAM,EAAE,eAAA2M,MAAkB,KAAK,SACzB,CAACD,CAAI,IAAI5F;AAAAA,MACboE;AAAA,MACAyB;AAAA,IAAA;AAKF,IAAKD,MAGL,KAAK,gBAAgBC,GACrB,KAAK,OAAOD,GACZ,KAAK,YAAY,IAAIzC;AAAA,MACnB,MAAMwC,GAAc,IAAI;AAAA,IAAA,GAI1B,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAOxB;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOkB;AAAA,EACT;AAAA,EAKA,SAAS;AACP,IAAI,KAAK,OAAM,KAAK,KAAA,SACV,KAAA;AAAA,EACZ;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAlM,GAAS,MAAAoP,GAAM,MAAA3C,GAAM,eAAAC,MAAkB;AAG/C,QAAI0C,EAAM;AACV,UAAMI,IAAiBb,GAAuB3O,CAAO,GAC/CyP,IAAkBD,KACtB7D,GAAoB6D,CAAc;AAYpC,IAXIC,OAAiC,KAAA,GAGrC,CAACtD,IAAmBC,IAAoBG,EAAoB,EAAE;AAAA,MAC5D,CAAC3S,MAAM;AACL,QAAAA,EAAE,gBAAgBoG;AAAA,MACpB;AAAA,IAAA,GAGFoB,EAAcsL,GAAeP,EAAiB,GAE1C,CAAAA,GAAkB,qBAEtB1J,EAASgK,GAAMrN,CAAS,GACxBqD,EAASiK,GAAetN,CAAS,GACjCkD,EAAatC,GAASuJ,IAAc,MAAM,GAG1CiD,GAAc,IAAI,GAElB,KAAK,OAAO,CAAC4C,GAEbE,GAAMtP,CAAO,GACbqO,GAAsB,IAAI,GAC1BjN,EAAcsL,GAAeN,EAAkB;AAAA,EACjD;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAApM,GAAS,MAAAoP,GAAM,MAAA3C,GAAM,eAAAC,MAAkB;AAG/C,IAAK0C,MAEL,CAAC/C,IAAmBC,EAAmB,EAAE,QAAQ,CAAC1S,MAAM;AACtD,MAAAA,EAAE,gBAAgBoG;AAAA,IACpB,CAAC,GAEDoB,EAAcsL,GAAeL,EAAiB,GAE1C,CAAAA,GAAkB,qBAEtB/K,EAAYmL,GAAMrN,CAAS,GAC3BkC,EAAYoL,GAAetN,CAAS,GACpCkD,EAAatC,GAASuJ,IAAc,OAAO,GAE3C,KAAK,OAAO,CAAC6F,GAEbf,GAAsB,IAAI,GAC1BjN,EAAcsL,GAAeJ,EAAmB;AAAA,EAClD;AAAA,EAGA,wBAAwB,CAAC9K,MAAkB;AAEzC,KADeA,IAAME,IAAcC,GAC5B,KAAK,SAASE,GAAiBmN,EAAoB;AAAA,EAC5D;AAAA,EAGA,UAAU;AACR,IAAI,KAAK,QAAM,KAAK,KAAA,GAEpB,KAAK,sBAAA,GACL,MAAM,QAAA;AAAA,EACR;AACF;ACphBA,MAAMU,IAAc,SCAdC,KAAiB,SCAjBC,KAAqB,aCArBC,KAAgB,aCAhBC,KAAmB,gBCAnBC,KAAiB,cCAjBC,KAAsB,mBCctBC,KAAgB,CAAC/G,MAAwB;AAAA,EAC7C,GAAGrC,GAAoCgJ,IAAe3G,CAAM;AAAA,EAC5D,GAAGrC,GAAoCiJ,IAAkB5G,CAAM;AAAA,EAC/D,GAAGrC,GAAoCkJ,IAAgB7G,CAAM;AAAA,EAC7D,GAAGrC,GAAoCmJ,IAAqB9G,CAAM;AAAA,EAClE,GAAGrC,GAAoC,YAAYqC,CAAM;AAC3D,GAGagH,KAAiB,CAAClQ,MAAsB;AACnD,QAAMmQ,IAAKC,GAAgBpQ,CAAO;AAClCqJ,EAAAA,EAAgB8G,GAAI;AAAA,IAClB,cAAc;AAAA,IACd,UAAU;AAAA,EAAA,CACX;AAED,QAAME,IAAaJ,GAAcE,CAAE;AAGnC,EAAIE,EAAW,UACbA,EAAW,QAAQ,CAACC,MAAU;AAC5BjH,IAAAA,EAAgBiH,GAAO;AAAA,MACrB,cAAc;AAAA,MACd,aAAa;AAAA,IAAA,CACd;AAAA,EACH,CAAC;AAEL,GAGaC,KAAmB,CAACvQ,MAAqB;AACpD,QAAM,EAAE,aAAAqK,EAAA,IAAgB+C,GAAmBpN,CAAO,GAC5C,EAAE,YAAAwQ,EAAA,IAAeC,GAAUzQ,CAAO;AACxC,SAAO,KAAK,IAAIwQ,IAAanG,CAAW;AAC1C,GAGaqG,KAAe,CAAC1Q,GAAkB2Q,MAAuB;AACpE,QAAMR,IAAKC,GAAgBpQ,CAAO,GAC5B4Q,IAAU,SAAShE,EAAgBuD,GAAI,cAAc,GAAG,EAAE,GAE1DU,IADSjE,EAAgBuD,GAAI,UAAU,MAAM,YACzBS,IACrB,IACDL,GAAiBvQ,CAAO,GACtBqQ,IAAaJ,GAAcE,CAAE;AAGnC,EAAKQ,MAELtH,EAAgB8G,GAAI;AAAA,IAClB,UAAU;AAAA,IACV,cAAc,GAAGS,IAAUC,CAAO;AAAA,EAAA,CACnC,GAGIR,EAAW,UAEhBA,EAAW,QAAQ,CAACC,MAAU;AAC5B,UAAMQ,IAAelE,EAAgB0D,GAAO,cAAc;AAG1D,QAFAA,EAAM,MAAM,eAAe,GAAG,SAASQ,GAAc,EAAE,IAAID,CAAO,MAGhE,CAACd,IAAgBC,EAAmB,EAAE,KAAK,CAAC3T,MAAMqD,EAAS4Q,GAAOjU,CAAC,CAAC,GACpE;AACA,YAAM0U,IAAanE,EAAgB0D,GAAO,aAAa;AACvD,MAAAA,EAAM,MAAM,cAAc,GAAG,SAASS,GAAY,EAAE,IAAIF,CAAO;AAAA,IACjE;AAAA,EACF,CAAC;AACH,GClFMG,IAAkB,aCElBC,KAAiBC,GAAc;AAAA,EACnC,SAAS;AAAA,EACT,WAAW;AACb,CAAC,GAEKC,KAAc,CAAC1R,GAAiB2R,MAAiC;AACrE,QAAMC,IAAkBC,EAAOF,CAAe,KAC5CA,EAAgB,aAAa,QACzBG,IAASD,EAAOF,CAAe,KAAK,CAACC,IACvCD,IACAH,IACEO,IAAOH,IAAkBD,IAAkBhB,GAAgB3Q,CAAM;AAGvE,EAAI6R,EAAO7R,CAAM,MACX8R,MAAWN,MACbO,EAAK,OAAOP,EAAc,GAE5BM,EAAO,OAAO9R,CAAM;AAExB,GAEMgS,KAAc,CAAChS,GAAiB2R,MAAiC;AACrE,QAAMC,IAAkBC,EAAOF,CAAe,KAC5CA,EAAgB,aAAa,QACzBG,IAASD,EAAOF,CAAe,KAAK,CAACC,IACvCD,IACAH;AAGJ,EAAIK,EAAO7R,CAAM,MACfA,EAAO,OAAA,GAEH8R,MAAWN,MAAkB,CAACA,GAAe,SAAS,UACxDA,GAAe,OAAA;AAGrB,GAEMS,KAAW,CAACjS,GAAiB2R,MAAiC;AAClE,QAAMG,IAASD,EAAOF,CAAe,KAAKA,EAAgB,aAAa,SACnEA,IACAH;AACJ,SAAOK,EAAO7R,CAAM,KAAK8R,EAAO,SAAS9R,CAAM;AACjD,GC7BMkS,KAAiB,YACjBC,KAAqB,GAAGlC,CAAW,IAAIiC,EAAc,IACrDE,KAAyB,GAAGb,CAAe,IAAIW,EAAc,IAC7DG,KAAsB,IAAIpC,CAAW,IAAItQ,CAAS,IAClD2S,KAA0B,IAAIf,CAAe,IAAI5R,CAAS,IAG1D4S,IAAUd,GAAc,KAAK,GAG7Be,KAAiB,CAACjS,MACfG;AAAAA,EACL,GAAG2R,EAAmB,IAAIC,EAAuB;AAAA,EACjD7O,EAAYlD,CAAO;AAAA,GAKjBkS,KAAoB,CAACC,MAAsB;AAC/C,QAAMC,IAAcD,IAAUP,KAAqBC;AACnD,GAACD,IAAoBC,EAAsB,EAAE,QAAQ,CAACxV,MAAM;AAC1DiF,IAAAA,EAAY0Q,GAAS3V,CAAC;AAAA,EACxB,CAAC,GACDoG,EAASuP,GAASI,CAAW;AAC/B,GAGMC,KAAgB,CACpBrS,GACAsS,GACAH,MACG;AACH,EAAAD,GAAkBC,CAAO,GACzBhB,GAAYa,GAAS5B,GAAgBpQ,CAAO,CAAC,GACzCsS,KAAS7P,EAASuP,GAAS7S,CAAS;AAC1C,GAGMoT,KAAc,MAAM;AACxB,EAAK7S,EAASsS,GAAS5S,CAAS,MAC9BqD,EAASuP,GAAS5S,CAAS,GAC3BoI,GAAOwK,CAAO;AAElB,GAGMQ,KAAc,MAAM;AACxBlR,EAAAA,EAAY0Q,GAAS5S,CAAS;AAChC,GAGMqT,KAAgB,CAACzS,MAA4B;AACjD,EAAKiS,GAAejS,CAAO,MACzBsB,EAAY0Q,GAAS7S,CAAS,GAC9BsS,GAAYO,GAAS5B,GAAgBpQ,CAAO,CAAC,GAC7CkQ,GAAelQ,CAAO;AAE1B,GCxEM0S,KAAY,CAAC1S,MACV2J,EAAc3J,CAAO,KAC1B4M,EAAgB5M,GAAS,YAAY,MAAM,YAC3CA,EAAQ,iBAAiB,MCwDvB2S,KAAgB,IAAIjD,CAAW,IAC/BkD,KAAsB,IAAI7Q,EAAY,KAAK2N,CAAW,MACtDmD,KAAuB,IAAIxT,EAAa,KAAKqQ,CAAW,MACxDoD,KAAmB,GAAGpD,CAAW,WAEjCqD,KAAgB;AAAA,EACpB,UAAU;AAAA,EACV,UAAU;AACZ,GAOMC,KAAmB,CAAChT,MACxBY,EAAmBZ,GAAS2P,EAAc,GAGtCsD,KAAoB,CAACjT,MAAqB,IAAIkT,GAAMlT,CAAO,GAI3DmT,KAAiBnS;AAAAA,EACrB,WAAW0O,CAAW;AACxB,GACM0D,KAAkBpS;AAAAA,EACtB,YAAY0O,CAAW;AACzB,GACM2D,KAAiBrS;AAAAA,EACrB,WAAW0O,CAAW;AACxB,GACM4D,KAAmBtS;AAAAA,EACvB,aAAa0O,CAAW;AAC1B,GAKM6D,KAAoB,CAACpS,MAAgB;AACzC,QAAM,EAAE,SAAAnB,MAAYmB,GACdqS,IAAiBjD,GAAiBvQ,CAAO,GACzC,EAAE,cAAAsK,GAAc,cAAAmJ,MAAiBrG,GAAmBpN,CAAO,GAC3D,EAAE,cAAc0T,GAAa,cAAcC,MAC/C3T,GACI4T,IAAgBF,MAAgBC;AAGtC,MAAI,CAACC,KAAiBJ,GAAgB;AAKpC,UAAMK,IAAW,EAAE,CAJNhO,GAAM7F,CAAO,IAGtB,gBAFA,cAGmB,GAAG,GAAGwT,CAAc,KAAA;AAG3CnK,IAAAA,EAAgBrJ,GAAS6T,CAAQ;AAAA,EACnC;AACA,EAAAnD,GAAa1Q,GAAS4T,KAAiBtJ,MAAiBmJ,CAAY;AACtE,GAGMK,KAAqB,CAAC3S,GAAaK,MAAkB;AACzD,QAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA3B,MAAYmB;AACpB,EAAAM,EAAOzB,GAAS6B,GAAiBkS,EAAmB,GACpDtS,EAAOyB,EAAYlD,CAAO,GAAGiI,IAAc+L,EAAe,GAEtDxS,IAAKL,EAAK,UAAU,QAAQnB,CAAO,IAClCmB,EAAK,UAAU,WAAA;AACtB,GAGM8S,KAAiB,CAAC9S,MAAgB;AACtC,QAAM,EAAE,UAAAgI,GAAU,SAAAnJ,GAAS,eAAAkU,EAAA,IAAkB/S;AAC7C,EAAAsR,GAAczS,CAAO,GACrBqJ,EAAgBrJ,GAAS,EAAE,cAAc,IAAI,SAAS,IAAI,GAC1D8T,GAAmB3S,CAAI;AAEvB,QAAMgT,IAAehB,GAAe,iBAAiBhK,EAAS,KAAKuJ,EAAS;AAE5E,EAAIyB,QAAoBA,CAAY,GAEpCb,GAAiB,gBAAgBY,KAAiB,QAClD9S,EAAcpB,GAASsT,EAAgB,GACvCc,GAAgBpU,CAAO;AACzB,GAGMqU,KAAiB,CAAClT,MAAgB;AACtC,QAAM,EAAE,SAAAnB,GAAS,eAAAkU,EAAA,IAAkB/S;AACnCmO,EAAAA,GAAMtP,CAAsB,GAC5B8T,GAAmB3S,GAAM,EAAI,GAE7BiS,GAAgB,gBAAgBc,KAAiB,QACjD9S,EAAcpB,GAASoT,EAAe,GACtCgB,GAAgBpU,CAAO;AACzB,GAGMsU,KAAkB,CAACnT,MAAgB;AACvC,QAAM,EAAE,SAAAnB,GAAS,SAAAsS,EAAA,IAAYnR;AAC7BkI,EAAAA,EAAgBrJ,GAAS,EAAE,SAAS,QAAA,CAAS,GAC7CuT,GAAkBpS,CAAI,GAEjB8Q,GAAejS,CAAO,KACzBqJ,EAAgB+G,GAAgBpQ,CAAO,GAAG,EAAE,UAAU,UAAU,GAGlEyC,EAASzC,GAASZ,CAAS,GAC3BmV,GAAgBvU,GAASwU,EAAU,GACnClS,EAAatC,GAASyU,IAAW,MAAM,GAEnCnC,IAAS/Q,EAAqBvB,GAAS,MAAMqU,GAAelT,CAAI,CAAC,OACjDA,CAAI;AAC1B,GAGMuT,KAAkB,CAACvT,MAAgB;AACvC,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,GAAS,SAAAyN,EAAA,IAAYnR;AAItC,EACE0D,EAAQ,YAAYyN,KAAW5S,EAASsS,GAAS5S,CAAS,KAC1D,CAAC6S,GAAejS,CAAO,KAGvBwS,GAAA,GACAjR,EAAqByQ,GAAS,MAAMiC,GAAe9S,CAAI,CAAC,KAExD8S,GAAe9S,CAAI;AAEvB;AAKA,SAASwT,GAAqC,GAA4B;AACxE,QAAM3U,IAAU+C,EAAiB,IAAI,GAC/B5B,IAAOnB,KAAWgT,GAAiBhT,CAAO;AAGhD,EAAIR,GAAW,IAAI,KAGd2B,MAGD,KAAK,YAAY,OAAK,EAAE,eAAA,GAC5BA,EAAK,gBAAgB,MACrBA,EAAK,OAAA;AACP;AAGA,MAAM6S,KAAkB,CAAC,EAAE,MAAAvO,GAAM,QAAAhG,QAAqC;AACpE,QAAMO,IAAUG,EAAc2R,IAAqB5O,EAAYzD,CAAM,CAAC,GAChE0B,IAAOnB,KAAWgT,GAAiBhT,CAAO;AAGhD,MAAI,CAACmB,EAAM;AAEX,QAAM,EAAE,SAAA0D,MAAY1D;AAEpB,EACE0D,EAAQ,YACRY,MAAS8J,MACT7P,EAASM,GAASZ,CAAS,MAG3B+B,EAAK,gBAAgB,MACrBA,EAAK,KAAA;AAET,GAGM4S,KAAsB,CAAC,MAA+B;AAC1D,QAAM,EAAE,eAAAa,MAAkB,GACpBzT,IAAOyT,KAAiB5B,GAAiB4B,CAAa;AAI5D,MAAI,CAACzT,KAAQ,CAACyT,KAAiB1P,EAAM,IAAI0P,CAAa,EAAG;AAEzD,QAAM,EAAE,SAAA/P,GAAS,UAAAgQ,GAAU,aAAAC,EAAA,IAAgB3T,GACrC,EAAE,UAAA4T,MAAalQ,GACf,EAAE,QAAApF,MAAW,GAEbuV,IAAe9R,EAAY0R,CAAa,GAAG,aAAA,GAAgB,WAC9D,QACGK,IAAqBH,EAAY,SAASrV,CAAM,GAChD4B,IAAU5B,KAAU4D,EAAQ5D,GAAQoT,EAAoB;AAG9D,EAAIgC,KAAY,CAACI,IACf/P,EAAM;AAAA,IACJ0P;AAAA,IACA,MAAM;AACJnS,MAAAA,EAASmS,GAAe9B,EAAgB,GACxCvR,EAAqBuT,GAAa,MAAMI,GAAoB/T,CAAI,CAAC;AAAA,IACnE;AAAA,IACA;AAAA,EAAA,KAGFE,KAAY,CAAC2T,KAAgB,CAACH,KAAY,CAACI,KAAsBF,OAEjE5T,EAAK,gBAAgBE,KAAW,MAChCF,EAAK,KAAA,GACL,EAAE,eAAA;AAEN,GAGM+T,KAAsB,CAAC/T,MAAgB;AAC3C,QAAM,EAAE,SAAAnB,GAAS,aAAA8U,EAAA,IAAgB3T,GAC3BgU,KAAY5N,GAA6BuN,CAAW,KAAK,KAAK;AACpExT,EAAAA,EAAYtB,GAAS8S,EAAgB,GAErC5N,EAAM,IAAIlF,GAAS,MAAMkF,EAAM,MAAMlF,CAAO,GAAGmV,CAAQ;AACzD;AAKA,MAAqBjC,WAAcpT,GAAc;AAAA,EAC/C,OAAO,WAAW6S;AAAA,EAClB,OAAO,OAAOM;AAAA,EACd,OAAO,cAAcD;AAAA,EAWrB,YAAYvT,GAA0BM,GAAgC;AACpE,UAAMN,GAAQM,CAAM;AAGpB,UAAM,EAAE,SAAAC,MAAY,MAGd8U,IAAc3U;AAAAA,MAClB,IAAIuP,CAAW;AAAA,MACf1P;AAAA,IAAA;AAIF,IAAK8U,MAEL,KAAK,cAAcA,GAEnB,KAAK,WAAW;AAAA,MACd,GAAGpP;AAAAA,QACDkN;AAAA,QACA1P,EAAYlD,CAAO;AAAA,MAAA;AAAA,IACrB,EACA;AAAA,MACA,CAACsJ,MAAQvG,EAAiBuG,CAAG,MAAMtJ;AAAA,IAAA,GAIrC,KAAK,WAAW,KAAK,QAAQ,aAAa,UAC1C,KAAK,UAAUN,EAASM,GAASb,CAAS,GAC1C,KAAK,gBAAgB,MACrB,KAAK,YAAY,IAAI,eAAe,MAAM,KAAK,QAAQ,GAGvD,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAOwQ;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOoD;AAAA,EACT;AAAA,EAKA,SAAS;AACP,IAAIrT,EAAS,KAAK,SAASN,CAAS,SAAQ,KAAA,SAClC,KAAA;AAAA,EACZ;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAY,GAAS,SAAA6E,GAAS,SAAAyN,GAAS,eAAA4B,MAAkB,MAC/C,EAAE,UAAAa,MAAalQ;AACrB,QAAIuQ,IAAe;AAUnB,QAPI1V,EAASM,GAASZ,CAAS,MAE/B+T,GAAe,gBAAgBe,KAAiB,QAChD9S,EAAcpB,GAASmT,EAAc,GAIjCA,GAAe,kBAAkB;AAGrC,UAAMkC,IAAcpD,GAAejS,CAAO;AAG1C,QAAIqV,KAAeA,MAAgBrV,GAAS;AAC1C,YAAMsV,IAAOtC,GAAiBqC,CAAW,KAEvCzU;AAAAA,QACEyU;AAAA,QACAzF;AAAA,MAAA;AAGJ,MAAI0F,OAAW,KAAA;AAAA,IACjB;AACA,IAAIP,KACGrD,GAASM,CAAO,IAGnBE,GAAkB,EAAI,IAFtBG,GAAcrS,GAASsS,GAAS,EAAI,GAKtC8C,IAAe7N,GAA6ByK,CAAO,GACnDO,GAAA,GAEA,WAAW,MAAM+B,GAAgB,IAAI,GAAGc,CAAY,MAEpDd,GAAgB,IAAI,GAEhBe,KAAe3V,EAASsS,GAAS5S,CAAS,KAC5CoT,GAAA;AAAA,EAGN;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAxS,GAAS,SAAAsS,GAAS,eAAA4B,EAAA,IAAkB;AAG5C,IAAKxU,EAASM,GAASZ,CAAS,MAEhCiU,GAAe,gBAAgBa,KAAiB,QAChD9S,EAAcpB,GAASqT,EAAc,GAGjC,CAAAA,GAAe,qBAEnB/R,EAAYtB,GAASZ,CAAS,GAC9BkD,EAAatC,GAASwU,IAAY,MAAM,GACxCD,GAAgBvU,GAASyU,EAAS,GAE9BnC,IAAS/Q,EAAqBvB,GAAS,MAAM0U,GAAgB,IAAI,CAAC,OACjD,IAAI;AAAA,EAC3B;AAAA,EAGA,SAAS,MAAM;AAEb,IAAIhV,EAAS,KAAK,SAASN,CAAS,QAAqB,IAAI;AAAA,EAC/D;AAAA,EAGA,wBAAwB,CAACoC,MAAkB;AACzC,UAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,UAAAwH,MAAa;AAGrB,IAAKA,EAAS,UAEdA,EAAS,QAAQ,CAACG,MAAQ;AAExB,MAAA7H,EAAO6H,GAAKzH,GAAiB8S,EAAiB;AAAA,IAChD,CAAC;AAAA,EACH;AAAA,EAGA,UAAU;AACR,UAAMxM,IAAQ,EAAE,GAAG,KAAA,GACb,EAAE,aAAA2M,GAAa,SAAAxC,EAAA,IAAYnK,GAC3B8B,IAAW,MAAM,WAAW,MAAM,MAAM,QAAA,GAAW,EAAE;AAE3D,SAAK,KAAA,GACL,KAAK,sBAAA,GAEDqI,IAEF/Q,EAAqBuT,GAAa7K,CAAQ,IAE1CA,EAAA;AAAA,EAEJ;AACF;AClZA,MAAMsL,KAAoB,IAAIvE,CAAe,IACvCwE,KAA0B,IAAIzT,EAAY,KAAKiP,CAAe,MAC9DyE,KAA2B,IAAIpW,EAAa,KAAK2R,CAAe,MAChE0E,KAAyB,GAAG1E,CAAe,aAE3C2E,KAAoB;AAAA,EACxB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AACV,GAOMC,KAAuB,CAAC5V,MAC5BY,EAAuBZ,GAAS4P,EAAkB,GAG9CiG,KAAwB,CAAC7V,MAAqB,IAAI8V,GAAU9V,CAAO,GAInE+V,KAAqB/U,EAGzB,WAAWgQ,CAAe,EAAE,GACxBgF,KAAsBhV,EAG1B,YAAYgQ,CAAe,EAAE,GACzBiF,KAAqBjV,EAGzB,WAAWgQ,CAAe,EAAE,GACxBkF,KAAuBlV,EAG3B,aAAagQ,CAAe,EAAE,GAK1BmF,KAAwB,CAAChV,MAAoB;AACjD,QAAM,EAAE,SAAAnB,MAAYmB,GACd,EAAE,cAAAmJ,GAAc,cAAAmJ,MAAiBrG,GAAmBpN,CAAO;AACjE,EAAA0Q,GAAa1Q,GAASsK,MAAiBmJ,CAAY;AACrD,GAGM2C,KAAyB,CAACjV,GAAiBK,MAAkB;AACjE,QAAMC,IAASD,IAAME,IAAcC,GAC7BsB,IAAMC,EAAY/B,EAAK,OAAO;AACpC,EAAAM,EAAOwB,GAAKgF,IAAcoO,EAA0B,GACpD5U,EAAOwB,GAAKpB,GAAiByU,EAAuB;AACtD,GAGMC,KAAsB,CAACpV,MAAoB;AAC/C,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,EAAA,IAAY1D;AAG7B,EAAK0D,EAAQ,WACXsR,GAAsBhV,CAAI,GAC1BkI,EAAgB+G,GAAgBpQ,CAAO,GAAG,EAAE,UAAU,UAAU,IAGlEyC,EAASzC,GAAS0V,EAAsB,GACxCjT,EAASzC,GAASZ,CAAS,GAC3BiK,EAAgBrJ,GAAS,EAAE,YAAY,UAAA,CAAW,GAElDuB,EAAqBvB,GAAS,MAAMwW,GAAsBrV,CAAI,CAAC;AACjE,GAGMsV,KAAsB,CAACtV,MAAoB;AAC/C,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,EAAA,IAAY1D,GACvBkU,IAAcpD,GAAejS,CAAO;AAEzC,EAAAA,EAAwB,KAAA,GAErB,CAACqV,KAAexQ,EAAQ,YAAYnF,EAASsS,GAAS5S,CAAS,KACjEoT,GAAA,GAEFjR,EAAqBvB,GAAS,MAAM0W,GAAsBvV,CAAI,CAAC;AACjE;AAKA,SAASwV,GAEP,GACA;AACA,QAAM3W,IAAU+C,EAAiB,IAAI,GAC/B5B,IAAOnB,KAAW4V,GAAqB5V,CAAO;AAGpD,EAAIR,GAAW,IAAI,KAGd2B,MAELA,EAAK,gBAAgB,MACrBA,EAAK,OAAA,GAGD,KAAK,YAAY,OAAK,EAAE,eAAA;AAC9B;AAGA,MAAMmV,KAA0B,CAAC,MAA+B;AAC9D,QAAM,EAAE,QAAA7W,MAAW,GACbO,IAAUG;AAAAA,IACd4R;AAAA,IACA7O,EAAYzD,CAAM;AAAA,EAAA;AAGpB,MAAI,CAACO,EAAS;AAEd,QAAM4W,IAAmBzW;AAAAA,IACvBsV;AAAA,IACAzV;AAAA,EAAA,GAEImB,IAAOyU,GAAqB5V,CAAO;AAGzC,MAAI,CAACmB,EAAM;AAEX,QAAM,EAAE,SAAA0D,GAAS,UAAAsE,EAAA,IAAahI,GACxB,EAAE,UAAA4T,MAAalQ,GACf6E,IAAUrG,EAAQ5D,GAAQ+V,EAAuB,GACjDqB,IAAY3T,EAAYlD,CAAO,EAAE,aAAA;AAGvC,EAAIgS,EAAQ,SAASvS,CAAM,KAAKsV,MAAa,aAI3C,EAAE8B,KAAaA,EAAU,SAAA,EAAW,YAClC,CAAC7W,EAAQ,SAASP,CAAM,KACxBsV,MAEC,CAACrL,KAAWP,EAAS,SAAS1J,CAAM,MACpCmX,KACCA,EAAiB,SAASnX,CAAM,OAEpC0B,EAAK,gBAAgByV,KAAoBA,EAAiB,SAASnX,CAAM,IACrEmX,IACA,QACJzV,EAAK,KAAA,IAIHuI,KAAWA,EAAQ,YAAY,SAAO,eAAA;AAC5C,GAGM2M,KAA6B,CAAC,EAAE,MAAA5Q,GAAM,QAAAhG,QAA4B;AACtE,QAAMO,IAAUG;AAAAA,IACd4R;AAAA,IACA7O,EAAYzD,CAAc;AAAA,EAAA,GAEtB0B,IAAOnB,KAAW4V,GAAqB5V,CAAO;AAGpD,EAAKmB,KAGDA,EAAK,QAAQ,YAAYsE,MAAS8J,OACpCpO,EAAK,gBAAgB,QACrBA,EAAK,KAAA;AAET,GAGMqV,KAAwB,CAACrV,MAAoB;AACjD,QAAM,EAAE,SAAAnB,MAAYmB;AACpBG,EAAAA,EAAYtB,GAAS0V,EAAsB,GAE3CnB,GAAgBvU,GAASwU,EAAU,GACnClS,EAAatC,GAASyU,IAAW,MAAM,GACvCnS,EAAatC,GAAS,QAAQ,QAAQ,GAEtCoB,EAAcpB,GAASgW,EAAmB,GAE1CI,GAAuBjV,GAAM,EAAI,GACjCmO,GAAMtP,CAAO,GACboU,GAAgBpU,CAAO;AACzB,GAGM0W,KAAwB,CAACvV,MAAoB;AACjD,QAAM,EAAE,SAAAnB,GAAS,UAAAmJ,EAAA,IAAahI;AAE9BmB,EAAAA,EAAatC,GAASwU,IAAY,MAAM,GACxCD,GAAgBvU,GAASyU,EAAS,GAClCF,GAAgBvU,GAAS,MAAM,GAC/BqJ,EAAgBrJ,GAAS,EAAE,YAAY,GAAA,CAAI;AAE3C,QAAM8W,IAAiBf,GAAmB,iBACxC5M,EAAS,KAAKuJ,EAAS;AAEzB,EAAIoE,QAAsBA,CAAc,GAExCrE,GAAczS,CAAO,GAErBoB,EAAcpB,GAASkW,EAAoB,GAC3C5U,EAAYtB,GAAS0V,EAAsB,GAC3CtB,GAAgBpU,CAAO,GAGlBiS,GAAejS,CAAO,KACzBoW,GAAuBjV,CAAI;AAE/B;AAKA,MAAqB2U,WAAkBhW,GAAc;AAAA,EACnD,OAAO,WAAWyV;AAAA,EAClB,OAAO,OAAOM;AAAA,EACd,OAAO,cAAcD;AAAA,EAOrB,YACEnW,GACAM,GACA;AACA,UAAMN,GAAQM,CAAM;AAGpB,UAAM,EAAE,SAAAC,MAAY;AAGpB,SAAK,WAAW;AAAA,MACd,GAAG0F;AAAAA,QACD8P;AAAA,QACAtS,EAAYlD,CAAO;AAAA,MAAA;AAAA,IACrB,EACA;AAAA,MACA,CAACsJ,MAAQvG,EAAiBuG,CAAG,MAAMtJ;AAAA,IAAA,GAIrC,KAAK,gBAAgB,QAGrB,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAO4P;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAO+F;AAAA,EACT;AAAA,EAKA,SAAS;AACP,IAAIjW,EAAS,KAAK,SAASN,CAAS,SAAQ,KAAA,SAClC,KAAA;AAAA,EACZ;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAY,GAAS,SAAA6E,GAAS,eAAAqP,EAAA,IAAkB;AAC5C,QAAIkB,IAAe;AAUnB,QAPI1V,EAASM,GAASZ,CAAS,MAE/B2W,GAAmB,gBAAgB7B,KAAiB,QACpD8B,GAAoB,gBAAgB9B,KAAiB,QACrD9S,EAAcpB,GAAS+V,EAAkB,GAGrCA,GAAmB,kBAAkB;AAGzC,UAAMV,IAAcpD,GAAejS,CAAO;AAC1C,QAAIqV,KAAeA,MAAgBrV,GAAS;AAC1C,YAAMsV,IAAOM,GAAqBP,CAAW,KAE3CzU;AAAAA,QACEyU;AAAA,QACA1F;AAAA,MAAA;AAIJ,MAAI2F,OAAW,KAAA;AAAA,IACjB;AAEA,IAAIzQ,EAAQ,YACL6M,GAASM,CAAO,IAChBE,GAAA,IADmBG,GAAcrS,GAAS,EAAI,GAGnDoV,IAAe7N,GAA6ByK,CAAO,GACnDO,GAAA,GAEA,WAAW,MAAMgE,GAAoB,IAAI,GAAGnB,CAAY,MAExDmB,GAAoB,IAAI,GAEpBlB,KAAe3V,EAASsS,GAAS5S,CAAS,KAAGoT,GAAA;AAAA,EAErD;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAxS,GAAS,eAAAkU,EAAA,IAAkB;AAGnC,IAAKxU,EAASM,GAASZ,CAAS,MAEhC6W,GAAmB,gBAAgB/B,KAAiB,QACpDgC,GAAqB,gBAAgBhC,KAAiB,QACtD9S,EAAcpB,GAASiW,EAAkB,GAGrC,CAAAA,GAAmB,qBAEvBxT,EAASzC,GAAS0V,EAAsB,GACxCpU,EAAYtB,GAASZ,CAAS,GAC9BqX,GAAoB,IAAI;AAAA,EAC1B;AAAA,EAGA,wBAAwB,CAACjV,MAAkB;AACzC,UAAMC,IAASD,IAAME,IAAcC;AACnC,SAAK,SAAS,QAAQ,CAAC2H,MAAQ;AAC7B,MAAA7H,EAAO6H,GAAKzH,GAAiB8U,EAAuB;AAAA,IACtD,CAAC;AAAA,EACH;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,SAAA3W,MAAY,MACd+W,IAASrX,EAASM,GAASZ,CAAS,GACpC6K,IAAW,MAAM,WAAW,MAAM,MAAM,QAAA,GAAW,CAAC;AAE1D,SAAK,KAAA,GACL,KAAK,sBAAA,GAED8M,IAAQxV,EAAqBvB,GAASiK,CAAQ,IAE7CA,EAAA;AAAA,EACP;AACF;AC/ZA,MAAM+M,KAAgB,WCAhBC,KAAmB,WCAnBC,KAAgB,WCEhBC,KAAiB,CAACC,MAAoB;AAC1C,QAAMC,IAAYD,MAAYF,IACxBI,IAAYD,IAAY,GAAGD,CAAO,WAAW,GAAGA,CAAO,SACvDG,IAAUF,IAAoD,KAAxC,cAAcD,CAAO,kBAC3CpP,IAAQ,eAAeoP,CAAO,kBAC9BI,IAAO,eAAeF,CAAS;AACrC,SAAO,eAAeF,CAAO,WAAWF,EAAa,KACnDK,IAASvP,IAAQwP,CACnB;AACF,GCZMC,KAAoB;AAAA,EACxB,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AACT,GCeMC,KAAW,CAACvW,MAAkB;AAClC,wBAAsB,MAAM;AAC1B,UAAMwW,IAAa,6BACb,EAAE,SAAA3X,GAAS,SAAA4X,GAAS,WAAAC,GAAW,cAAAC,GAAc,SAAAjT,GAAS,OAAAmD,MAAU7G;AAGtE,QAAI,CAACyW,EAAS;AACd,UAAMhS,IAAMC,GAAM7F,CAAO,GACnB,EAAE,GAAG+X,GAAY,GAAGC,EAAA,IAAcC,GAAcH,CAAY;AAGlEzO,IAAAA,EAAgBuO,GAAS;AAAA,MACvB,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,UAAM,EAAE,aAAaM,GAAU,cAAcC,MAAcP,GACrD,EAAE,aAAaQ,GAAQ,cAAcC,GAAQ,aAAaC,EAAA,IAC9DlL,GAAmBpN,CAAO;AAC5B,QAAI,EAAE,WAAAuY,MAAc1T;AACpB,UAAM,EAAE,aAAa2T,GAAc,aAAaC,OAAiBZ,GAK3Da,IAJiB9L;AAAAA,MACrBiL;AAAA,MACA;AAAA,IAAA,MAEqC,SACjCrE,KACF,KAAK,IADckF,IACVF,IAAeC,KACfL,IAASE,CADkB,GAElCK,KAAc/S,KAAO8S,IACtBlF,KACD,GACEoF,IAAeR,KAAWxS,IAAuB,IAAjB4N,MAAsB,GAGtDqF,KAAgB1X,EAAK,UAAU,SAASnB,CAAO,GAC/C;AAAA,MACJ,OAAO8Y;AAAA,MACP,QAAQC;AAAA,MACR,MAAMC;AAAA,MACN,OAAOC;AAAA,MACP,KAAKC;AAAA,IAAA,IACHL,IAAe,sBACjBpL,GAAsBzN,GAAS,EAAI,GAE/B;AAAA,MACJ,GAAGmZ;AAAA,MACH,GAAGC;AAAA,IAAA,IACDC;AAAAA,MACFrZ;AAAA,MACA8X;AAAA,MACA,EAAE,GAAGC,GAAY,GAAGC,EAAA;AAAA,IAAU;AAIhC3O,IAAAA,EAAgBrB,GAAsB;AAAA,MACpC,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,QAAIsR,KAA+B,GAC/BC,KAAkC,IAClCC,KAAgC,GAChCC,KAAiC,IACjCC,KAA4B,IAC5BC,KAA6B,IAC7BC,KAA8B;AAElC,UAAMC,KAAa7R,EAAM,eAAe,GAClC8R,KAAc9R,EAAM,gBAAgB,GACpC+R,KAAcF,KAAa;AAGjC,QAAI/L,KAAYoL,KAAcf,IAAY2B,KAAc,GACpDlM,KACFsL,KAAcf,IAAYY,IAAae,MAAezB,GACpDtK,KAAaiL,KAAed,IAAW2B,KAAalB,IACpD3K,KACFgL,KAAed,IAAWY,IAAYe,MAAcjB;AAEtD,UAAMoB,KAAc,CAAC,QAAQ,OAAO,GAC9BC,KAAY,CAAC,OAAO,QAAQ;AAElC,IAAAnM,KAAYkM,GAAY,SAASzB,CAAS,IACtCW,KAAcH,IAAa,IAAIZ,IAAY,IAAI2B,KAAc,IAC7DhM,IACJF,KAAeoM,GAAY,SAASzB,CAAS,IACzCW,KAAcf,IAAY,IAAIY,IAAa,IAAIe,MAAezB,IAC9DzK,IACJG,KAAakM,GAAU,SAAS1B,CAAS,IACrCS,KAAeF,IAAY,IAAIZ,IAAW,IAAIS,KAC9C5K,IACJC,KAAciM,GAAU,SAAS1B,CAAS,IACtCS,KAAed,IAAW,IAAIY,IAAY,KAAKF,IAC/C5K,IAIJuK,IAAYyB,GAAY,SAASzB,CAAS,KAAKxK,MAAcC,KACzD,QACAuK,GAEJA,IAAYA,MAAc,SAASzK,KAAY,WAAWyK,GAC1DA,IAAYA,MAAc,YAAY3K,KAAe,QAAQ2K,GAC7DA,IAAYA,MAAc,UAAUxK,KAAa,UAAUwK,GAC3DA,IAAYA,MAAc,WAAWvK,KACjC,SAEAuK,GAICX,EAAQ,UAAU,SAASW,CAAS,MACvCX,EAAQ,YAAYA,EAAQ,UAAU;AAAA,MACpCD;AAAA,MACAF,GAAkBc,CAAS;AAAA,IAAA,IAM3ByB,GAAY,SAASzB,CAAS,KAE5BA,MAAc,SAEhBiB,KAAeL,KAAiBjB,IAAW2B,KAG3CL,KAAeL,KAAiBL,IAAYe,IAI1C/L,MAAaF,MACf0L,KAAc,GACdC,KAAiB,GACjBG,KAAWN,KAAgBL,IAAa,IAAIe,KAAc,KACjDhM,MACTwL,KAAcF,IACdG,KAAiB,IACjBG,KAAWX,IAAa,IAAIc,MACnBjM,MACT0L,KAAcF,KAAgBjB,IAAYY,GAC1CQ,KAAiB,IACjBG,KAAWvB,IAAYY,IAAa,IAAIc,OAExCP,KAAcF,KAAgBjB,IAAY,IAAIY,IAAa,GAC3DW,KAAWvB,IAAY,IAAI2B,KAAc,MAElCG,GAAU,SAAS1B,CAAS,MACjCA,MAAc,QAChBe,KAAcF,KAAgBjB,IAAY2B,KAG1CR,KAAcF,KAAgBL,IAAae,IAIzC/L,MACFyL,KAAe,GACfG,KAAYR,KAAiBL,IAAY,IAAIiB,MACpC/L,MACTwL,KAAe,QACfC,KAAgB,GAChBG,KAAad,IAAY,IAAIF,IAAeK,IAAgBc,OAE5DP,KAAeL,KAAiBjB,IAAW,IAAIY,IAAY,GAC3Da,KAAYzB,IAAW,IAAI6B,MAK/B1Q,EAAgBuO,GAAS;AAAA,MACvB,KAAK,GAAG0B,EAAW;AAAA,MACnB,QAAQC,OAAmB,KAAK,KAAK,GAAGA,EAAc;AAAA,MACtD,MAAMC,OAAiB,SAASA,KAAe,GAAGA,EAAY;AAAA,MAC9D,OAAOC,OAAkB,KAAK,GAAGA,EAAa,OAAO;AAAA,IAAA,CACtD,GAIG9P,EAAc3B,CAAK,MACjB0R,OAAa,OACf1R,EAAM,MAAM,MAAM,GAAG0R,EAAQ,OAE3BC,OAAc,KAChB3R,EAAM,MAAM,OAAO,GAAG2R,EAAS,OACtBC,OAAe,OACxB5R,EAAM,MAAM,QAAQ,GAAG4R,EAAU;AAGrC,UAAMM,KAAsBlZ;AAAAA,MAI1B,cAAcmZ,GAAYhZ,EAAK,IAAI,CAAC;AAAA,IAAA;AAEtCC,IAAAA,EAAcpB,GAASka,EAAmB;AAAA,EAC5C,CAAC;AACH,GCxNME,KAAkC;AAAA,EACtC,UAAUjD,GAAeD,EAAa;AAAA,EACtC,OAAO;AAAA,EACP,aAAa;AAAA,EACb,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,WAAW,SAAS;AAAA,EACpB,SAAS;AAAA,EACT,aAAa;AAAA,EACb,UAAU;AACZ,GChBMmD,KAAoB,uBCApBC,KAAmB,WCSnBC,KAAU,CACdva,GACAwa,GACAC,MACG;AAEH,MAAIva,GAASsa,CAAO,KAAKA,EAAQ,QAAQ;AACvC,QAAIE,IAAQF,EAAQ,KAAA;AACpB,IAAItQ,GAAWuQ,CAAU,MAAGC,IAAQD,EAAWC,CAAK;AAGpD,UAAMC,IADY,IAAI,UAAA,EACS,gBAAgBD,GAAO,WAAW;AACjE,IAAA1a,EAAQ,OAAW,GAAG2a,EAAa,KAAK,UAAW;AAAA,EACrD,MAAA,CAAWhR,EAAc6Q,CAAO,IAC9Bxa,EAAQ,OAAOwa,CAAO,KAEtBI,GAAWJ,CAAO,KAAMK,GAAQL,CAAO,KAAKA,EAAQ,MAAMlJ,CAAM,MAEhEtR,EAAQ,OAAW,GAAGwa,CAAQ;AAElC,GCVMM,KAAY,CAAC3Z,MAA4B;AAC7C,QAAMkW,IAAYlW,EAAK,SAASmZ,IAE1B,EAAE,IAAAS,GAAI,SAAA/a,GAAS,SAAA6E,EAAA,IAAY1D,GAC3B;AAAA,IACJ,OAAA6Z;AAAA,IACA,WAAAzC;AAAA,IACA,UAAA0C;AAAA,IACA,WAAAC;AAAA,IACA,aAAAC;AAAA,IACA,YAAAV;AAAA,IACA,aAAAW;AAAA,IACA,SAAAZ;AAAA,IACA,UAAAa;AAAA,EAAA,IACExW,GACEyW,IAAYjE,IAAYH,KAAgBF,IACxCuE,IAAe,EAAE,GAAG9D,GAAA;AAC1B,MAAI+D,IAAqB,CAAA,GACrBC,IAAuB,CAAA;AAE3B,EAAI5V,GAAM7F,CAAO,MACfub,EAAa,OAAO,OACpBA,EAAa,QAAQ;AAIvB,QAAMG,KAAiB,MAAMJ,CAAS,IAAIC,EAAahD,CAAS,CAAC;AAGjE,MAAIoD;AACJ,MAAIhS,EAAcsR,CAAQ;AACxB,IAAAU,KAAkBV;AAAA,OACb;AACL,UAAMW,IAAa1K,GAAc,KAAK;AACtC,IAAAqJ,GAAQqB,GAAYX,GAAUR,CAAU,GACxCkB,KAAkBC,EAAW;AAAA,EAC/B;AAGA,MAAI,CAACjS,EAAcgS,EAAe,EAAG;AAGrC,EAAAxa,EAAK,UAAUwa,GAAgB,UAAU,EAAI;AAC7C,QAAM,EAAE,SAAA/D,MAAYzW;AAGpBmB,EAAAA,EAAasV,GAAS,MAAMmD,CAAE,GAC9BzY,EAAasV,GAAS,QAAQV,EAAa;AAE3C,QAAMI,KAAYD,IACd,GAAGH,EAAa,WAChB,GAAGF,EAAa,SACd6E,KAAgBxE,IAClB,OACAlX,EAA2B,IAAI6W,EAAa,WAAWY,CAAO,GAC5DkE,IAAc3b,EAA2B,IAAImX,EAAS,IAAIM,CAAO;AAGvE,EAAAzW,EAAK,QAAQhB;AAAAA,IACX,IAAImb,CAAS;AAAA,IACb1D;AAAA,EAAA;AAEF,QAAM,EAAE,OAAA5P,OAAU7G;AAElB,MAAIwI,EAAcqR,CAAK,EAAG,CAAAQ,IAAa,CAACR,EAAM,UAAU,EAAI,CAAC;AAAA,OACxD;AACH,UAAMe,IAAY7K,GAAc,KAAK;AACrC,IAAAqJ,GAAQwB,GAAWf,GAAOP,CAAU,GACpCe,IAAa,CAAK,GAAGO,EAAU,UAAW;AAAA,EAC5C;AAEA,MAAIpS,EAAc6Q,CAAO,EAAG,CAAAiB,IAAe,CAACjB,EAAQ,UAAU,EAAI,CAAC;AAAA,OAC9D;AACH,UAAMwB,IAAc9K,GAAc,KAAK;AACvC,IAAAqJ,GAAQyB,GAAaxB,GAASC,CAAU,GACxCgB,IAAe,CAAK,GAAGO,EAAY,UAAW;AAAA,EAChD;AAGA,MAAIZ;AACF,QAAIJ;AACF,UAAIrR,EAAc0R,CAAQ;AACxB,QAAAG,IAAa,CAAC,GAAGA,GAAYH,EAAS,UAAU,EAAI,CAAC;AAAA,WAChD;AACL,cAAMY,IAAU/K,GAAc,KAAK;AACnC,QAAAqJ,GAAQ0B,GAASZ,GAAUZ,CAAU,GACrCe,IAAa,CAAC,GAAGA,GAAYS,EAAQ,UAAkB;AAAA,MACzD;AAAA,aAGIJ,SAA6B,OAAA,GAC7BlS,EAAc0R,CAAQ;AACxB,MAAAI,IAAe,CAAC,GAAGA,GAAcJ,EAAS,UAAU,EAAI,CAAC;AAAA,SACpD;AACL,YAAMY,IAAU/K,GAAc,KAAK;AACnC,MAAAqJ,GAAQ0B,GAASZ,GAAUZ,CAAU,GACrCgB,IAAe,CAAC,GAAGA,GAAcQ,EAAQ,UAAkB;AAAA,IAC7D;AAOJ,EAAK5E,IAYM2D,KAASc,KAAavB,GAAQuB,GAAad,GAAOP,CAAU,KAVjEO,KAASa,MACXtB,GAAQsB,IAAeL,GAAYf,CAAU,GAG3CD,KAAWsB,KACbvB,GAAQuB,GAAaL,GAAchB,CAAU,GAG/CtZ,EAAK,MAAMhB,EAAiC,cAAcyX,CAAO,KAC/D,SAIJnV,EAASmV,GAAS,mBAAmB,GACrCnV,EAASuF,IAAO,mBAAmB,GAI9BtI,EAASkY,GAAS0D,CAAS,KAAG7Y,EAASmV,GAAS0D,CAAS,GAE1DJ,KAAa,CAACxb,EAASkY,GAASzY,CAAS,KAC3CsD,EAASmV,GAASzY,CAAS,GAGzBgc,KAAe,CAACzb,EAASkY,GAASuD,CAAW,KAC/C1Y,EAASmV,GAASuD,CAAW,GAG1Bzb,EAASkY,GAAS8D,EAAc,KAAGjZ,EAASmV,GAAS8D,EAAc;AAC1E,GClJMQ,KAAsB,CAAClc,MAAqB;AAChD,QAAMmc,IAAiB,CAAC,QAAQ,MAAM,GAChCC,IAA4B,CAAA;AAClC,MAAI,EAAE,YAAAC,MAAerc;AAErB,SAAOqc,KAAc,CAACF,EAAe,SAASE,EAAW,QAAQ;AAC/D,IAAAA,IAAaC,GAAcD,CAAU,GAE/BE,GAAaF,CAAU,KAAKG,GAAeH,CAAU,KACzDD,EAAW,KAAKC,CAAyB;AAI7C,SACED,EAAW,KAAK,CAAC/f,GAAG,OAEduQ,EAAgBvQ,GAAG,UAAU,MAAM,cACnCuQ,EAAgBvQ,GAAG,UAAU,MAAM,cACjCA,EAAE,iBAAiBA,EAAE,iBACvB+f,EAAW,MAAM,IAAI,CAAC,EAAE;AAAA,IAAM,CAAC,MAC7BxP,EAAgB,GAAG,UAAU,MAAM;AAAA,EAAA,IAGhCvQ,IAEF,IACR,KAED6G,EAAYlD,CAAO,EAAE;AAEzB,GCsBMyc,KACJ,IAAI1a,EAAY,KAAKmV,EAAa,iBAAiBA,EAAa,MAC5DwF,KAAY;AAGlB,IAAIC,KAAqB,CAAC3c,MACxBY,EAAqBZ,GAASsa,EAAgB;AAGhD,MAAMsC,KAAsB,CAAC5c,MAAqB,IAAI6c,GAAQ7c,CAAO,GAK/D8c,KAAgB,CAAC3b,MAAkB;AACvC,QAAM,EAAE,SAAAnB,GAAS,SAAA4X,GAAS,WAAAC,EAAA,IAAc1W;AACxCoT,EAAAA,GAAgBvU,GAAS+c,EAAe,GACxCtL;AAAA,IACEmG;AAAA,IACAC;AAAA,EAAA;AAEJ,GAGMmF,KAAS,CAAC7b,MAAuC;AACrD,QAAM,EAAE,SAAAyW,GAAS,WAAAC,EAAA,IAAc1W;AAE/B,SAAOyW,KACLlG,GAASkG,GAASC,CAAS;AAC/B,GAGMoF,KAAyB,CAAC9b,GAAe8I,MAA0B;AACvE,QAAM,EAAE,SAAAjK,MAAYmB;AACpB,EAAAA,EAAK,sBAAA,GAIHiK,GAAapL,GAASqa,EAAiB,KAAKlZ,EAAK,SAASmZ,MAE1D4C,GAAmB/b,CAAI,GAGrB8I,KAAUA,EAAA;AAChB,GAGMkT,KAAsB,CAAChc,GAAeK,MAAkB;AAC5D,QAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA3B,MAAYmB;AAEpB,EAAAM;AAAA,IACEyB,EAAYlD,CAAO;AAAA,IACnB8D;AAAAA,IACA3C,EAAK;AAAA,IACLwF;AAAAA,EAAA;AAEJ,GAGMyW,KAAqB,CAACjc,MAAkB;AAC5C,QAAM,EAAE,SAAAnB,MAAYmB,GACdkc,IAAoBrc;AAAAA,IAIxB,YAAYmZ,GAAYhZ,EAAK,IAAI,CAAC;AAAA,EAAA;AAGpC,EAAAgc,GAAoBhc,GAAM,EAAI,GAC9BC,EAAcpB,GAASqd,CAAiB,GACxCnY,EAAM,MAAMlF,GAAS,IAAI;AAC3B,GAGMsd,KAAsB,CAACnc,MAAkB;AAC7C,QAAM,EAAE,SAAAnB,MAAYmB,GACdoc,IAAqBvc;AAAAA,IAIzB,aAAamZ,GAAYhZ,EAAK,IAAI,CAAC;AAAA,EAAA;AAGrC,EAAAgc,GAAoBhc,CAAI,GACxB2b,GAAc3b,CAAI,GAClBC,EAAcpB,GAASud,CAAkB,GAEzCrY,EAAM,MAAMlF,GAAS,KAAK;AAC5B,GAGMwd,KAA4B,CAACrc,GAAeK,MAAkB;AAClE,QAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA3B,GAAS,SAAA4X,EAAA,IAAYzW,GACvBsc,IAAcpa,EAAQrD,GAAS,IAAI0P,CAAW,EAAE,GAChDgO,IAAkBra,EAAQrD,GAAS,IAAIgR,CAAe,EAAE;AAE9D,EAAIxP,IACF,CAACxB,GAAS4X,CAAO,EACd,QAAQ,CAACnY,MAAW0B,EAAK,UAAU,QAAQ1B,CAAM,CAAC,IAChD0B,EAAK,UAAU,WAAA,GAGlBsc,KACFhc,EAAOgc,GAAa,WAAW/N,CAAW,IAAIvO,EAAK,UAAU,GAE3Duc,KACFjc,EAAOic,GAAiB,WAAW1M,CAAe,IAAI7P,EAAK,UAAU;AAEzE,GAGM+b,KAAqB,CAAC/b,GAAeqZ,MAAqB;AAE9D,QAAMmD,IAAW,CAACtD,IAAmBqC,EAAS,GACxC,EAAE,SAAA1c,MAAYmB;AAEpBmB,EAAAA;AAAAA,IACEtC;AAAA,IACA2d,EAASnD,IAAU,IAAI,CAAC;AAAA,IACxBA,KACE7a,EAAaK,GAAS2d,EAAS,CAAC,CAAC,KAEjC;AAAA,EAAA,GAEJpJ,GAAgBvU,GAAS2d,EAASnD,IAAU,IAAI,CAAC,CAAC;AACpD;AAKA,MAAqBqC,WAAgB/c,GAAc;AAAA,EACjD,OAAO,WAAW2c;AAAA,EAClB,OAAO,OAAOG;AAAA,EACd,OAAO,cAAcD;AAAA,EACrB,OAAO,WAAWjF;AAAA,EAalB,YAAYjY,GAA0BM,GAAkC;AACtE,UAAMN,GAAQM,CAAM;AAEpB,UAAM,EAAE,SAAAC,MAAY,MACdqX,IAAY,KAAK,SAASiD,IAC1BgB,IAAYjE,IAAYH,KAAgBF,IACxC4G,IAAevG,IAAYiD,KAAmBrD;AAGpD,IAAA0F,KAAqB,CAAoBkB,MACvCjd,EAAeid,GAAMD,CAAY,GAGnC,KAAK,UAAU,IAEf,KAAK,KAAK,GAAGtC,CAAS,IAAIwC,GAAO9d,GAASsb,CAAS,CAAC;AAGpD,UAAM,EAAE,SAAAzW,MAAY;AAIpB,QAAM,CAACA,EAAQ,SAASwS,KAAe,CAACA,KAAa,CAACxS,EAAQ;AAC5D;AAIFyC,IAAAA,GAAa8S,IAAiB,EAAE,WAAW,GAAA,CAAI,GAK7ChP,GAAapL,GAAS0c,EAAS,KAAKrF,KACpC,OAAOxS,EAAQ,SAAU,YAEzBqY,GAAmB,MAAMrY,EAAQ,KAAK;AAIxC,UAAMgT,IAAYqE,GAAoBlc,CAAO,GACvC8X,IAAe,CAAC,UAAU,SAAS,UAAU,EAAE;AAAA,MACjD,CAACiG,MACCnR,EAAgBiL,GAAW,UAAU,MACnCkG;AAAA,IAAA,IAEJlG,IACApH,GAAUzQ,CAAO;AASrB,IAPA,KAAK,YAAY6X,GACjB,KAAK,eAAeC,GAGpBgD,GAAU,IAAI,GAGT,KAAK,YAGV,KAAK,YAAY,IAAI9Q,GAAiB,MAAM,KAAK,QAAQ,GAGzD,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAOsQ;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOF;AAAA,EACT;AAAA,EAMA,cAAc,MAAM9K,GAAM,KAAK,OAAsB;AAAA,EAErD,aAAa,MAAM,KAAK,KAAA;AAAA,EACxB,OAAO;AACL,UAAM,EAAE,SAAAzK,GAAS,SAAA+S,GAAS,SAAA5X,GAAS,WAAA6X,GAAW,IAAAkD,MAAO,MAC/C,EAAE,WAAAG,MAAcrW,GAChBmZ,IAAW9Y,EAAM,IAAIlF,GAAS,KAAK;AAEzCkF,IAAAA,EAAM,MAAMlF,GAAS,KAAK,GAEtB4X,KAAW,CAACoG,KAAY,CAAChB,GAAO,IAAI,KACtC9X,EAAM;AAAA,MACJlF;AAAA,MACA,MAAM;AACJ,cAAMie,IAAmBjd;AAAAA,UAIvB,WAAWmZ,GAAY,KAAK,IAAI,CAAC;AAAA,QAAA;AAEnC/Y,QAAAA,EAAcpB,GAASie,CAAgB,GAGlCA,EAAiB,qBAEpB9M,GAAYyG,GAASC,CAAS,GAE9BvV,EAAatC,GAAS+c,IAAiB,IAAIhC,CAAE,EAAE,GAE/C,KAAK,OAAA,GACLyC,GAA0B,MAAM,EAAI,GAG/B9d,EAASkY,GAASxY,CAAS,KAAGqD,EAASmV,GAASxY,CAAS,GAE1D8b,IACF3Z,EAAqBqW,GAAS,MAAMwF,GAAmB,IAAI,CAAC,OACpC,IAAI;AAAA,MAElC;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAGN;AAAA,EAGA,aAAa,MAAM,KAAK,KAAA;AAAA,EACxB,OAAO;AACL,UAAM,EAAE,SAAAvY,GAAS,SAAA+S,GAAS,SAAA5X,EAAA,IAAY,MAChC,EAAE,WAAAkb,GAAW,OAAAgD,EAAA,IAAUrZ;AAE7BK,IAAAA,EAAM,MAAMlF,GAAS,IAAI,GAGrB4X,KAAWoF,GAAO,IAAI,KACxB9X,EAAM;AAAA,MACJlF;AAAA,MACA,MAAM;AACJ,cAAMme,IAAmBnd;AAAAA,UAIvB,WAAWmZ,GAAY,KAAK,IAAI,CAAC;AAAA,QAAA;AAEnC/Y,QAAAA,EAAcpB,GAASme,CAAgB,GAGlCA,EAAiB,qBACpB,KAAK,OAAA,GACL7c,EAAYsW,GAASxY,CAAS,GAC9Boe,GAA0B,IAAI,GAG1BtC,IACF3Z,EAAqBqW,GAAS,MAAM0F,GAAoB,IAAI,CAAC,OACpC,IAAI;AAAA,MAEnC;AAAA,MACAY,IAAQ;AAAA,MACR;AAAA,IAAA;AAAA,EAGN;AAAA,EAGA,SAAS,MAAM;AACb,IAAAxG,GAAS,IAAI;AAAA,EACf;AAAA,EAGA,SAAS,MAAM;AACb,UAAM,EAAE,SAAAE,MAAY;AAEpB,IAAIA,KAAW,CAACoF,GAAO,IAAI,SAAQ,KAAA,SACzB,KAAA;AAAA,EACZ;AAAA,EAGA,SAAS;AACP,UAAM,EAAE,SAAAoB,MAAY;AAEpB,IAAKA,MACH,KAAK,sBAAsB,EAAI,GAC/B,KAAK,UAAU,CAACA;AAAA,EAEpB;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,SAAAxG,GAAS,SAAAwG,EAAA,IAAY;AAE7B,IAAIA,MACExG,KAAWoF,GAAO,IAAI,UAAQ,KAAA,GAClC,KAAK,sBAAA,GACL,KAAK,UAAU,CAACoB;AAAA,EAEpB;AAAA,EAGA,gBAAgB;AACd,IAAK,KAAK,eACA,QAAA,IADS,KAAK,OAAA;AAAA,EAE1B;AAAA,EAGA,cAAc,CAAC,EAAE,QAAA3e,QAAyB;AACxC,UAAM,EAAE,SAAAmY,GAAS,SAAA5X,EAAA,IAAY;AAG7B,IACG4X,KAAWA,EAAQ,SAASnY,CAAM,KACnCA,MAAWO,KACVP,KAAUO,EAAQ,SAASP,CAAM,KAIlC,KAAK,KAAA;AAAA,EAET;AAAA,EAGA,wBAAwB,CAAC+B,MAAkB;AACzC,UAAMC,IAASD,IAAME,IAAcC,GAE7B,EAAE,SAAA3B,GAAS,SAAA6E,GAAS,KAAAyE,EAAA,IAAQ,MAC5B,EAAE,SAAAI,MAAY7E,GAEduW,IAAc,GADF,KAAK,SAASd,MACEzV,EAA2B;AAK7D,IAAK6E,EAAQ,SAAS,QAAQ,MAC5B,KAAK,UAAU,CAAC,CAAClI,GAEMkI,EAAQ,MAAM,GAAG,EAEzB,QAAQ,CAAC2U,MAAO;AAE7B,MAAIA,MAAOC,MACT7c,EAAOzB,GAAS+O,IAAgB,KAAK,UAAU,GAC/CtN,EAAOzB,GAAS6H,IAAiB,KAAK,UAAU,GAG3CuT,MACH3Z,EAAOzB,GAAS8H,IAAiB,KAAK,UAAU,GAChDrG;AAAA,QACEyB,EAAYlD,CAAO;AAAA,QACnB8D;AAAAA,QACA,KAAK;AAAA,QACL6C;AAAAA,MAAA,MAGK0X,MAAOxc,IAChBJ,EAAOzB,GAASqe,GAAKjD,IAA4B,KAAK,aAAnB,KAAK,MAAwB,IACvDiD,MAAO9P,OAChB9M,EAAOzB,GAASue,IAAc,KAAK,UAAU,GAExCnD,KAAa3Z,EAAOzB,GAASwe,IAAe,KAAK,UAAU,GAE5DC,QACFhd,EAAOzB,GAAS6B,GAAiB,KAAK,WAAW,IAIjDuZ,KAAe9R,KACjB7H,EAAO6H,GAAKzH,GAAiB,KAAK,UAAU;AAAA,IAEhD,CAAC;AAAA,EAEL;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,SAAA+V,GAAS,SAAA/S,EAAA,IAAY,MACvBsD,IAAQ,EAAE,GAAG,MAAM,MAAM,KAAK,KAAA,GAC9B8B,IAAW,MACf;AAAA,MACE,MAAMgT,GAAuB9U,GAAO,MAAM,MAAM,SAAS;AAAA,MACzD;AAAA,IAAA;AAGJ,IAAItD,EAAQ,aAAamY,GAAO7U,CAAK,KACnC,KAAK,QAAQ,QAAQ,GACrB,KAAK,KAAA,GACL5G,EAAqBqW,GAAS3N,CAAQ,KAEtCA,EAAA;AAAA,EAEJ;AACF;ACleA,MAAMyU,KACJ,IAAI3c,EAAY,KAAKiV,EAAa,iBAAiBA,EAAa,MAE5D2H,KAAkCrX,GAAa,CAAA,GAAI8S,IAAiB;AAAA,EACxE,UAAUjD,GAAeH,EAAa;AAAA,EACtC,SAAS;AAAA,EACT,aAAa;AAAA,EACb,UACE;AACJ,CAAC,GAGK4H,KAAqB,CAAC5e,MAC1BY,EAAqBZ,GAASiX,EAAgB,GAG1C4H,KAAsB,CAAC7e,MAAqB,IAAI8e,GAAQ9e,CAAO;AAKrE,MAAqB8e,WAAgBjC,GAAQ;AAAA,EAC3C,OAAO,WAAW6B;AAAA,EAClB,OAAO,OAAOG;AAAA,EACd,OAAO,cAAcD;AAAA,EACrB,OAAO,WAAWlH;AAAA,EAIlB,YAAYjY,GAA0BM,GAAkC;AACtE,UAAMN,GAAQM,CAAM;AAAA,EACtB;AAAA,EAEA,IAAI,OAAO;AACT,WAAOkX;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAO0H;AAAA,EACT;AAAA,EAGA,OAAO,MAAM;AACX,UAAM,KAAA;AAEN,UAAM,EAAE,SAAA9Z,GAAS,KAAAyE,EAAA,IAAQ;AAEzB,IAAIzE,EAAQ,eAAeyE,KAAK,WAAW,MAAMgG,GAAMhG,CAAG,GAAG,EAAE;AAAA,EACjE;AACF;AChEA,MAAMyV,KAAkB,aCAlBC,KAAqB,aC+BrBC,KAAoB,0BACpBC,KAA0B,UAE1BC,KAA+C;AAAA,EACnD,QAAQ;AAAA,EACR,QAAQ;AACV,GAOMC,KAAuB,CAACpf,MAC5BY,EAAuBZ,GAASgf,EAAkB,GAG9CK,KAAwB,CAACrf,MAAqB,IAAIsf,GAAUtf,CAAO,GAInEuf,KAAoBve,EAGxB,eAAe+d,EAAe,EAAE,GAK5BS,KAAmB,CAACre,MAAoB;AAC5C,QAAM;AAAA,IACJ,QAAA1B;AAAA,IACA,cAAAggB;AAAA,IACA,cAAAC;AAAA,EAAA,IACEve,GAEEwe,IAAQC,GAAwC,KAAKngB,CAAM,GAC3DwD,IAAMC,EAAYzD,CAAM;AAI9B,EAAI,CAACkgB,EAAM,UAAUF,MAAiBC,EAAa,SAEnDA,EAAa,MAAA,GAEb,MAAM,KAAKC,CAAK,EAAE,QAAQ,CAACE,MAAS;AAClC,UAAMC,IAAOngB,EAAakgB,GAAM,MAAM,GAAG,MAAM,CAAC,GAC1CE,IAAaD,GAAM,SAAS7c,EAAI,eAAe6c,CAAI,IAAI;AAE7D,IAAIC,KAAc,CAACvgB,GAAWqgB,CAAI,KAChC1e,EAAK,aAAa,IAAI4e,GAAYF,CAAI;AAAA,EAE1C,CAAC,GACD1e,EAAK,eAAeA,EAAK,aAAa;AACxC,GAGM6e,KAAQ,CAACvgB,MAAoB;AACjC,QAAM,KAAKmgB,GAAwC,KAAKngB,CAAM,CAAC,EAAE;AAAA,IAC/D,CAACwgB,MAAS;AACR,MAAIvgB,EAASugB,GAAMne,CAAW,KAAGR,EAAY2e,GAAMne,CAAW;AAAA,IAChE;AAAA,EAAA;AAEJ,GAGMoe,KAAW,CAAC/e,GAAiB8e,MAAsB;AACvD,QAAM,EAAE,QAAAxgB,GAAQ,SAAAO,EAAA,IAAYmB;AAG5B,EAAA6e,GAAMvgB,CAAM,GAEZ0B,EAAK,cAAc8e,GACnBxd,EAASwd,GAAMne,CAAW;AAG1B,MAAIqe,IAAaF;AACjB,SAAOE,MAAe1gB;AAEpB,QADA0gB,IAAaA,EAAW,eAEtB,CAAC,OAAO,iBAAiB,YAAY,EAAE;AAAA,MAAK,CAAC9jB,MAC3CqD,EAASygB,GAAY9jB,CAAC;AAAA,IAAA,GAExB;AACA,YAAM+jB,IAAaD,EAAW;AAK9B,MAAIC,KAAc,CAAC1gB,EAAS0gB,GAAYte,CAAW,KACjDW,EAAS2d,GAAYte,CAAW;AAAA,IAEpC;AAIF,EAAAyd,GAAkB,gBAAgBU,GAClC7e,EAAcpB,GAASuf,EAAiB;AAC1C,GAEMc,KAAY,CAAClf,GAAiB1B,MAAwB;AAC1D,QAAM,EAAE,cAAA6gB,GAAc,SAAAtgB,GAAS,SAAA6E,EAAA,IAAY1D;AAE3C,UAAQmf,MAAiBtgB,IACrByN,GAAsBhO,CAAM,EAAE,MAAM6gB,EAAa,YACjD7gB,EAAO,cAAcoF,EAAQ,UAAoB;AACvD;AAKA,MAAqBya,WAAkBxf,GAAc;AAAA,EACnD,OAAO,WAAWmf;AAAA,EAClB,OAAO,OAAOI;AAAA,EACd,OAAO,cAAcD;AAAA,EAWrB,YACE3f,GACAM,GACA;AACA,UAAMN,GAAQM,CAAM;AAGpB,UAAM,EAAE,SAAAC,GAAS,SAAA6E,EAAA,IAAY,MAGvB0b,IAAYpgB;AAAAA,MAChB0E,EAAQ;AAAA,MACR3B,EAAYlD,CAAO;AAAA,IAAA;AAIrB,IAAKugB,MACL,KAAK,SAASA,GAGd,KAAK,eAAevgB,EAAQ,eAAeA,EAAQ,eAC/CA,IACAoN,GAAmBpN,CAAO,GAC9B,KAAK,mCAAmB,IAAA,GAGxB,KAAK,QAAA,GAIL,KAAK,YAAY,IAAIgK,GAAiB,MAAM;AAC1C,4BAAsB,MAAM,KAAK,SAAS;AAAA,IAC5C,GAAG;AAAA,MACD,MAAM,KAAK;AAAA,IAAA,CACZ,GAGD,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAIA,IAAI,OAAO;AACT,WAAOgV;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOG;AAAA,EACT;AAAA,EAMA,UAAU,MAAM;AACd,UAAM,EAAE,QAAA1f,GAAQ,cAAA6gB,EAAA,IAAiB;AAGjC,QAAI,CAAC7gB,KAAUA,EAAO,iBAAiB,EAAG;AAE1C,IAAA+f,GAAiB,IAAI;AACrB,UAAM,EAAE,cAAAC,GAAc,cAAAC,GAAc,aAAAc,EAAA,IAAgB;AAGpD,QAAI,CAACf,EAAc;AACnB,UAAMgB,IAAUf,EAAa,QAAA,EAAU,QAAA,GAEjC,EAAE,WAAA1H,GAAW,cAAAvE,GAAc,cAAAnJ,EAAA,IAAiBgW;AAElD,QAAItI,KAAavE,IAAenJ,GAAc;AAC5C,YAAMoW,IAAgBD,EAAQhB,IAAe,CAAC,IAAI,CAAC;AAGnD,MAAIe,MAAgBE,KAAeR,GAAS,MAAMQ,CAAa;AAC/D;AAAA,IACF;AAEA,UAAMC,IAAcF,EAAQ,CAAC,IAAI,CAAC,IAC9BJ,GAAU,MAAMI,EAAQ,CAAC,EAAE,CAAC,CAAC,IAC5B;AACL,QACEE,MAAgB,QAAQ3I,IAAY2I,KACpCA,IAAc,GACd;AACA,WAAK,cAAc,MACnBX,GAAMvgB,CAAM;AACZ;AAAA,IACF;AAEA,aAAS7E,IAAI,GAAGA,IAAI6kB,GAAc7kB,KAAK,GAAG;AACxC,YAAM,CAACmlB,GAAYE,CAAI,IAAIQ,EAAQ7lB,CAAC,GAC9BgmB,IAAYP,GAAU,MAAMN,CAAU,GACtCc,IAAaJ,EAAQ7lB,IAAI,CAAC,IAAI,CAAC,GAC/BkmB,IAAgBD,IAClBR,GAAU,MAAMQ,CAAU,IACzB;AAGL,UACEL,MAAgBP,KAChBjI,KAAa4I,MACZE,MAAkB,QAAQ9I,IAAY8I,IACvC;AACA,QAAAZ,GAAS,MAAMD,CAAI;AACnB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAGA,YAAY,CAACrmB,MAAqC;AAChD,UAAMqmB,IAAO5c,EAAQzJ,EAAE,QAAQslB,EAAuB,GAChDY,IAAOG,KAAQtgB,EAAasgB,GAAM,MAAM,GAAG,MAAM,CAAC,GAClDF,IAAaD,KAAQiB,GAAejB,GAAM,KAAK,MAAM;AAG3D,IAAIC,MACF,KAAK,aAAa,SAAS;AAAA,MACzB,KAAKA,EAAW;AAAA,MAChB,UAAU;AAAA,IAAA,CACX,GACDnmB,EAAE,eAAA;AAAA,EAEN;AAAA,EAGA,wBAAwB,CACtB4H,MACG;AACH,UAAM,EAAE,QAAA/B,GAAQ,cAAAigB,GAAc,WAAAsB,GAAW,WAAAC,MAAc;AAEvD,KADezf,IAAME,IAAcC,GAC5BlC,GAAQoC,GAAiBof,CAAS,GAErCzf,IACFke,GAAc,QAAQ,CAACtiB,GAAG2iB,MAAeiB,EAAU,QAAQjB,CAAU,CAAC,MACvD,WAAA;AAAA,EACnB;AAAA,EAGA,UAAU;AACR,SAAK,sBAAA,GACL,MAAM,QAAA;AAAA,EACR;AACF;AC3SA,MAAMmB,KAAY,OCAZC,KAAe,OCoCfC,KAAc,IAAIrf,EAAY,KAAKmf,EAAS,MAG5CG,KAAiB,CAACrhB,MACtBY,EAAiBZ,GAASmhB,EAAY,GAGlCG,KAAkB,CAACthB,MAAqB,IAAIuhB,GAAIvhB,CAAO,GAQvDwhB,KAAexgB;AAAAA,EACnB,WAAWkgB,EAAS;AACtB,GACMO,KAAgBzgB;AAAAA,EACpB,YAAYkgB,EAAS;AACvB,GACMQ,KAAe1gB;AAAAA,EACnB,WAAWkgB,EAAS;AACtB,GACMS,KAAiB3gB;AAAAA,EACrB,aAAakgB,EAAS;AACxB,GAUMU,yBAA+C,IAAA,GAK/CC,KAAgB,CAAC1gB,MAAc;AACnC,QAAM,EAAE,YAAA2gB,GAAY,KAAAC,EAAA,IAAQ5gB;AAG5B,EAAI2gB,KAAcpiB,EAASoiB,GAAY1Z,EAAe,MACpD0Z,EAAW,MAAM,SAAS,IAC1BxgB,EAAYwgB,GAAY1Z,EAAe,IAIrC2Z,KAAK7c,EAAM,MAAM6c,CAAG;AAC1B,GAGMC,KAAiB,CAAC7gB,MAAc;AACpC,QAAM,EAAE,SAAAnB,GAAS,YAAA8hB,GAAY,SAASG,GAAa,KAAAF,MAAQ5gB,GACrD,EAAE,KAAA+gB,EAAA,IAASvY,EAAcoY,CAAG,KAAKH,GAAW,IAAIG,CAAG,KAEvD,EAAE,KAAK,KAAA;AAGT,MAAID,KAAcG,KAAeviB,EAASuiB,GAAa9iB,CAAS,GAAG;AACjE,UAAM,EAAE,eAAAgjB,GAAe,YAAAC,EAAA,IAAeR,GAAW,IAAI5hB,CAAO,KAE1D,EAAE,eAAe,GAAG,YAAY,EAAA;AAElC,IAAImiB,MAAkBC,IAEpB,WAAW,MAAM;AACf,MAAAN,EAAW,MAAM,SAAS,GAAGM,CAAU,MACvC5a,GAAOsa,CAAU,GACjBvgB,EAAqBugB,GAAY,MAAMD,GAAc1gB,CAAI,CAAC;AAAA,IAC5D,GAAG,EAAE,IAEL0gB,GAAc1gB,CAAI;AAAA,EAEtB,MAAA,CAAW4gB,KAAK7c,EAAM,MAAM6c,CAAG;AAE/B,EAAAN,GAAc,gBAAgBS,GAE9B9gB,EAAcpB,GAASyhB,EAAa;AACtC,GAGMY,KAAiB,CAAClhB,MAAc;AACpC,QAAM,EAAE,SAAAnB,GAAS,SAASiiB,GAAa,YAAAH,GAAY,KAAAC,MAAQ5gB,GACrD,EAAE,KAAA+gB,GAAK,SAAA1H,MAAauH,KAAOH,GAAW,IAAIG,CAAG,KAEjD,EAAE,KAAK,MAAM,SAAS,KAAA;AACxB,MAAII,IAAgB;AAmBpB,MAhBIL,KAAcG,KAAeviB,EAASuiB,GAAa9iB,CAAS,MAC9D,CAACqb,GAASyH,CAAW,EAAE,QAAQ,CAAC5lB,MAAM;AAEpC,IAAIA,KAAGoG,EAASpG,GAAG,iBAAiB;AAAA,EACtC,CAAC,GACD8lB,IAAgB3H,IACZA,EAAQ,eACP,IAIPgH,GAAa,gBAAgBU,GAC7BP,GAAe,gBAAgB3hB,GAC/BoB,EAAcpB,GAASwhB,EAAY,GAG/B,CAAAA,GAAa,kBAOjB;AAAA,QALIS,KAAaxf,EAASwf,GAAangB,CAAW,GAE9C0Y,KAASlZ,EAAYkZ,GAAS1Y,CAAW,GAGzCggB,KAAcG,KAAeviB,EAASuiB,GAAa9iB,CAAS,GAAG;AACjE,YAAMijB,IAAaH,EAAY;AAC/B,MAAAL,GAAW,IAAI5hB,GAAS;AAAA,QACtB,eAAAmiB;AAAA,QACA,YAAAC;AAAA,QACA,KAAK;AAAA,QACL,SAAS;AAAA,MAAA,CACV,GAED3f,EAASqf,GAAY1Z,EAAe,GACpC0Z,EAAW,MAAM,SAAS,GAAGK,CAAa,MAC1C3a,GAAOsa,CAAU,GACjB,CAACtH,GAASyH,CAAW,EAAE,QAAQ,CAAC5lB,MAAM;AAEpC,QAAIA,KAAGiF,EAAYjF,GAAG,iBAAiB;AAAA,MACzC,CAAC;AAAA,IACH;AAEA,IAAI4lB,KAAeA,KAAeviB,EAASuiB,GAAa9iB,CAAS,IAC/D,WAAW,MAAM;AACfsD,MAAAA,EAASwf,GAAa7iB,CAAS,GAC/BmC,EAAqB0gB,GAAa,MAAM;AACtC,QAAAD,GAAe7gB,CAAI;AAAA,MACrB,CAAC;AAAA,IACH,GAAG,CAAC,KAGA8gB,KAAaxf,EAASwf,GAAa7iB,CAAS,GAChD4iB,GAAe7gB,CAAI,IAIjB+gB,KAAK9gB,EAAc8gB,GAAKP,EAAc;AAAA;AAC5C,GAGMW,KAAe,CACnBnhB,MAC6D;AAC7D,QAAM,EAAE,KAAA4gB,MAAQ5gB;AAEhB,MAAI,CAACwI,EAAcoY,CAAG;AACpB,WAAO,EAAE,KAAK,MAAM,SAAS,KAAA;AAG/B,QAAMQ,IAAa1b;AAAAA,IACjB/E;AAAA,IACAigB;AAAA,EAAA;AAEF,MAAIG,IAA0B;AAE9B,EACEK,EAAW,WAAW,KACtB,CAAC9W,GAAgB;AAAA,IAAK,CAACpP,MACrBqD,EAAS6iB,EAAW,CAAC,EAAE,eAA8BlmB,CAAC;AAAA,EAAA,IAGxD,CAAC6lB,CAAG,IAAIK,IACCA,EAAW,SAAS,MAC7BL,IAAMK,EAAWA,EAAW,SAAS,CAAC;AAExC,QAAM/H,IAAU7Q,EAAcuY,CAAG,IAAInf,EAAiBmf,CAAG,IAAI;AAC7D,SAAO,EAAE,KAAAA,GAAK,SAAA1H,EAAA;AAChB,GAGMgI,KAAoB,CAACxiB,MAA0B;AAEnD,MAAI,CAAC2J,EAAc3J,CAAO,EAAG,QAAO;AACpC,QAAMyiB,IAAWpf,EAAQrD,GAAS,IAAIyL,GAAgB,KAAK,IAAI,CAAC,EAAE;AAClE,SAAOgX,IACHtiB,EAA2B,IAAIsL,GAAgB,CAAC,CAAC,WAAWgX,CAAQ,IACpE;AACN,GAKMC,KAAkB,CAAC,MAA2B;AAClD,QAAM1iB,IAAUqD,EAAQ,EAAE,QAAQ+d,EAAW,GACvCjgB,IAAOnB,KAAWqhB,GAAerhB,CAAO;AAG9C,EAAKmB,MACL,EAAE,eAAA,GACFA,EAAK,KAAA;AACP;AAKA,MAAqBogB,WAAYzhB,GAAc;AAAA,EAC7C,OAAO,WAAWshB;AAAA,EAClB,OAAO,OAAOE;AAAA,EACd,OAAO,cAAcD;AAAA,EASrB,YAAY5hB,GAA0B;AACpC,UAAMA,CAAM;AAGZ,UAAM,EAAE,SAAAO,MAAY,MACdwa,IAAUzX,EAAiB/C,CAAO;AAIxC,QAAI,CAACwa,EAAS;AAEd,UAAMuH,IAAM1e,EAAqBrD,GAAS,MAAM,GAC1C6X,IAAYxU;AAAAA,MAChBmX;AAAA,MACA;AAAA,IAAA;AAGF,SAAK,MAAMuH,GACX,KAAK,UAAUvH,GACf,KAAK,aAAa3C,GAGlB,KAAK,WAAW2K,GAAkBxiB,CAAO;AAIzC,UAAM,EAAE,KAAAkiB,EAAA,IAAQI,GAAa,IAAI;AACjC,QAAIP,KAAO,CAACG,GAAK;AACf,YAAMS,IAAWxiB,EAAcihB,IAAaW,CAAG,GACzCa,IAAkBD,KAAY5f,EAAiB4f,CAAQ;AAG7D,MAAIC,MACFngB,EAASkgB,GAAU7gB,CAAW,GAC9BW,EAASmgB,GAAiBxjB,CAAS,GACnCqD,EAASmgB,GAAiB9gB,CAAW,GACrCQ,EAAatC,GAAS6iB,IAAc,MAAM;AAAA,IAE9C;AAGA,SAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAGA,IAAI,OAAO;AACT,WAAO1B;AAAA,EACT;AAAA,EAKA,OAAO;AACL,UAAM,EAAE,SAAAnhB,GAAS,SAASiiB,GAAa,KAAAF,GAAK,UAAAU,MAAa;AAGzD,QAAKV,KAAO7c,EAAM,IAAI6c,CAAG,KAAMriB,EAASM,GAAS8B,CAAW,EAAG;AAC/D,UAAM,EAAE,KAAAogB,GAAK,SAAA1H,MAAY8H,GAAa,IAAI;AAgB1C,QAbIP,KAAOG,KACTN,GAAW,IAAIG,GAAK,EAAE,KAAAG,GAAK,SAAA1H,GAAS,eAAe,GAAG,YAAY,GAAG,GAIvEkH,GAAa,gBAAgB1hB,GAGzB,CAAC2J,EAAcuY,CAAG,MAEtB9gB,EAAc8gB,GAAKR,EAAY,GAG3BA,GAAa,kBAAkB;AAEnCjf,IAAAA,EAASzC,GAAS8B,CAAW,GAC7BQ,EAAatC,GAAS6iB,IAAc,MAAM;AAE1C,UAAMC,IAAiBnZ,EAAcuY,CAAG,KAAKM,GAAkBN,CAAG;AAMlE,QALIY,KAAkBpjB,EAASojB,GAAgBhhB,CAAW,KACxDR,EAAYwhB,GAAgBhhB,CAAW,GAIrCigB,GAAK;AACP,YAAMgB,IAAY,MAAM;AAEtB,QAAIb,MACF5gB,EAAY4gB,GAAKpgB,CAAW,GAC5BQ,EAAa4f,GAAKW,IAAc,OAAO,IAErCJ,KAAY,CAAC/iB,EAAS+iB,GAAU3gB,CAAW,KAC7CW,EAASggB,GAAU3gB,CAAW;AAAA,MAElC;AAEA,MACE0Y,MACC9a,EAAS8a,GAASrb,CAAS,KACzB8iB,KAAeviB,EAASuiB,GAAa9iB,CAAS,KAEjD+F,EAAM,IAAI6c,GAAKgB,GAAW,CAAC,IACtBA,EAAA;AAAA,IACT;AAGA,IAAIvI,MACFlZ,EAAYkZ,GAASpb,CAAS,GAC1BM,EAAS8a,GAASrb,CAAS,IAC7BoC,EAAqBiZ,GAAS,MAAM6H,GAAe,IAAI,CAAC,IAExDA,GAAe,IAAI;AAAA,EAGzB;AAAA,EAGA,wBAAwB,CAAC7gB,MAAkB;AAEzC,KADeA,IAAME,IAAcC,GAC5B,KAAK,SAASE,GAAiB6gB,EAAe;AAAA,EACvD;AAAA,EAGA,UAAU;AACR,SAAK,sBAAA,GACL,MAAM,QAAA;AAAA,EACR;AACF;AC9XA,MAAMM,IAAc,SCAdC,KAAiB,SCoCjBC,KAAgB,IAAIF,CAAW,IAC/BG,KAAuB,IAAI9jB,EAAa,KAAK2jB,CAAW,MACxDI,KAAsB,IAAIrhB,EAAY,KAAKihB,CAAW,MACtDK,KAAe,WAEfC,KAAY,QAEZC,KAAgB;AAAA,EACpB,WAAW;AAAA,EACX,UAAU;AAAA,EACV,OAAO;AACT,GAGMC,KAAmB,CAACxjB,MACxBY,EAAmBZ,GAASijB,EAAc,GAGtCQ,KAAoB,CAACzjB,MAAqB,IAAI0jB,GAAM1jB,CAAO,GAI3D2jB,KAAiB3iB;AAAAA,EACrB,WAAWgiB,CAAW;AACxB,GACMY,KAAkB5iB;AAAAA,EACtB,YAAYgiB,CAAW;AACzB,GACMa,KAAiB7iB;AAAAA,EACrB,WAAWgiB,CAAW;AACxB,GACMc,KAAmB9iB;AAAAA,EACvB,aAAagiB,CAAW;AAC1B,GAKMe,KAAoB,CAAC5iB,MAAgB;AACzC,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,EAAA,IAAY1D;AAC7BG,EAAAA,EAAYtB,GAASqjB,EAAY,GACjCne,EAAM,MAAMlF,GAASqjB,EAAY,GAEjCjiB,EAAcpB,GAAS4jB,EAAe,GAElC/e,EAAQ,YACVK,EAAM,IAAIlF,GAAS,MAAMmB,EAAK,QAAQ0D,EAAQ,OAAOme,CAAW;AAEpE,GAGMgB,KAAoB,CAAC7iB,MAAgB;AACzC,QAAM,EAAE,SAAAnB,MAAYmB;AACpBG,EAAAA,EAAYtB,GAASqjB,EAAY,GACjC/hB,EAAYtB,GAASZ,CAAS,GAC9BqD,EAASzC,GAASsjB,EAAS,GAC3Bpe,EAAM,MAAMlF,GAASgjB,CAAW,GAChC5hB,EAAcpB,GAAS8jB,EAAgB;AACzC,GAGMG,KAAY,CAAC9iB,MAAgB;AACjC,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,EAAA,IAAY1D;AAC7BsB,EAAAA,EAASzC,GAASqjB,EAAY,GAE1Bxe,EAAQ,aACV2C,GAAOxH,CAAsB,GAC7BuB,EAAqBvB,GAAS,MAAMgkB,GAAkB7iB,CAAI,CAAC,KAE3D6iB,GAAkB7iB,CAAI;AAE1B,GAGM+iB,KAAY,CAAC/iB,MAAgB;AACjC,QAAM,EAAE,SAAAnB,GAAS,SAAA6E,EAAA,IAAY1D;AAC7B+D,EAAAA,EAAM;AAAA,IACJlF;AAAA,IACA,MAAM;AACJsB,MAAAA,EAAYtB,GAASsjB,EAAS,GAC9B9b,GAAOxH,CAAsB,GAC7ByC,EAASzC,GAASZ,CAAS,GAC3BqD,EAASzC,GAASqjB,EAAY,GAE1Bxe,EAAQ,YACVtD,EAAqBvB,GAAS,MAAM+jB,GAAkB5iB,CAAI,CAAC,IAE3D4iB,GAAkB5iB,CAAI;AAAA,IAE1B;AAAA,IACA;AAAA,IACAkiB;AAAA,EAAA;AAEJ;AAKA,SAASc,GAAqC,GAAU;AACtD,QAAMnkB,IAAU+C,EAAiB,IAAI,GAC/B5B,IAAOnB,KAAWwjB,GAAiBxjB,CAAO;AAGhD,EAAIR,GAAW,IAAI,KAEd2B,MAED,KAAK,YAAY,OAAK,EAAE,eAAA,GAC5BA,EAAK,gBAAgB,MACrBA,EAAK,KAAA;AACP;AAGA,MAAMijB,KAA0B,CAAC,MAA+B;AAC9D,QAAMpkB,IAAU,EAAE,QACZmB,IAAOqiB,GAAiBxjB,CAAO,GAC/B,EAAE,MAAA6O,GAAM,eAAAqF,EAAA,IAAkB;AAGhC,EACE,CAAC/S,KAAQnB,MAAYkU,KACrBlU,EAAQ,SAASkU,CAAqB,MAGpC,CAACrM,IAAiB0W,EAAY,EAAE,SAAS1P,CAAI,IAC/C3J,EAAM,MAAMlF,GAASgjB,CAAW,IAEhC9d,EAAM,IAAIlF,GAAS,MAAMmB,EAAK,QAAQA,EAAK,QAAQ,OAAO6hB,CAAW;AAEzE;AAKA,MAAqBU,WAAc5jB,GAAc;AAAA,EAC/C,OAAO,WAAWojB;AAAA,EAClB,OAAO,OAAOO;AAAA,EACd,OAAO,cAAcD;AAAA,EAQrB,YAAY/jB,GAA0BM,GAAgC;AACpE,UAAMN,GAAQM,CAAM;AACpB,UAAM,EAAE,SAAAC,GAAS,SAAA6E,EAAA,IAAY;AAG7B,IAAIA,EAAQ,aAAa,CAACnF,EAASM,GAASb,CAAS,IACnDsD,EAASzC,GAASb,CAAS,IAClB,CAAC0F,EAAQ,aAAanF,EAASM,GAASb,CAAS,KAC1DmC,EAAYtB,GAASb,CAAS,GAIhC,KAAK,UAAUgB,EAA2BgjB,IAAsBnjB,CAAO,GAGvE,KAAK,WAAW;AAAA,MACd,GAAG0F;AAAAA,QACD0d;AAAA,QACAlgB,EAAYlD,CAAO;AAAA,MAAA;AAAA,IACrB,EACA;AAAA,MACA,CAACsJ,MAAQvG,EAAiBuG,CAAG,MAAMtJ;AAAA,IAAA,GAIrC,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA,EAEA,IAAI,OAAO;AACT,WAAOijB;AAAA,EACT;AAAA,EAEA,IAAI,WAAW;AACb,WAAOM;AAAA,EACT;AAAA,EAEA,IAAI,UAAU;AACZ,WAAO7jB,EAAS,KAAK,SAASN,CAAS;AAAA,EACzC;AAAA,EAKA,OAAO,MAAM;AACX,UAAM,EAAE,SAAAY,GAAS,SAAAqkB,EAAA,IAAY;AAG7B,IAAI,CAACrkB,KAAWqkB,MAEhBjjB,EAAcpB,GAAS2jB,EAAc,GAChCA,GAAe,oBAAkBO,GAAU,IAAI;AAAA,EACtD;AAAA,EAGA,OAAO,MAAM;AACX,UAAM,EAAE,SAAAlkB,GAAS,SAAAqkB,EAAA,IAAY;AAG7B,IAAI,CAACrkB,KAAW,CAACqkB,MAEjBjjB,EAAcpB,GAAS6jB,EAAc,GAChCA,GAAe,oBAAkBI,GAAU,IAAI;AAAA,EACtD;AAAA,EAGA,wBAAwB,CAACziB,MAAkB;AACzC,UAAMC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA3B,GAAS,UAAAmJ,GAAU,SAAA9H,GAAS,SAAAwD,GAAS,MAAAyf,MAAS;AAGtD,IAAIjjB,KACFI,EAAOJ,GAASQ,GAAiByiB,CAAI,GAInCzf,EAAQ,YACV,CAAC0Z,IAAcC,IAAe3W,IAAiBC,EAAe,EAAE;AAAA,MAC9D,CAAClO,MAAM6H,EAAOzB,GAASpG,GAAGwqB,EAAuB;AAAA,IAAA,GAIjDjb,EAAS,UACXA,EAAS,QAAQ,CAACG,MAAQ;AACxB,MAAA7H,EAAO6H,GAAKzH,GAAiBsiB,EAAiB;AAAA,IAChD,CAAC;AAAA,EAEL;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,SAAAnkB,GAAS,SAAAqkB,EAAA,IAAY;AAC7B,SAAK,sBAAA,GACLnf,EAAM,MAAMlF,GAASgjB,CAAW,GAE5BqB,KAAS/iB,EAAYtB,GAASZ,CAAS,GAE3C,MAAM,QAAA;AAAA,EACR;AACF;ACvQA,MAAMmlB,yBAAqB,IAAA;AA8B3B;AAAA,EACEzjB;AAAA,EACAuB;AAAA,EACA8B;AAAA,EACAyE;AAAA,EACAiD;AAAA,EACAqH;AAAA,EACA4C;AAAA,EACAgJ;AAAA,EACAQ;AAAA,EACAiC;AAAA,EACAmC;AAAA,EACA7G;AACF,EAAE,QAAQ,CAACxgB,MAAMkoB,GAAe,IAAIloB,EAAE,UAAU,MAAMA,CAAC,CAAC;AAGxD,MAAMmoB,KAAuB,CAC3Bva,GACAwa,MACG;AACH,GAAC,GAAGA,CAAU,EAAE,QAAQ,CAACnhB,MAAM2G,EAAS3G,CAAC,CAAC;AAC5C,GAGMohB,KAAyB,CAAIC,GAAmBC,MAAwB;AAC5E,QAAMC,IAAWxkB,GAAK,UAAUskB,CAAS;AAEzC,EAAIE,KACF,CAAC,GAAGA,CAAQ,EAAE,QAAQ,CAAC,CAAC7kB,GAAS8kB,CAAQ,MAAM;AAC7C,IAAIF,EAAQ,SAAS5kB,CAAO,KACzB8kB,EAAyC,QAAA;AAAA,EAE9C,CAAC;AAEL,GAGaC,KAAe,CAACH,MAAyB;AACpD,QAAMI,IAASJ,KAAWA,EAAQ,WAAWA,IAAU,UACjDK,IAAiB,CAAC,GAAGrF,GAA8B,KAAKoF,CAAM,CAAC;AAErE,EAAAT,GAAe,QAAQ,CAACW,MAAO;AAC7B,UAAM,EAAE,MAAAC,GAAM,UAAAC,EAAA,IAAaF;AAC3B,IAAAV;AAAA,MACEW;AAAA,MACAF,EAAe,OAAO,CAAChF,MAASjZ,GAAQiZ,GAAMmF,CAAQ,CAAC;AAAA,IAAA;AAAA,EAE3D,CAAC;AACH,GAGaC,KAAgB,CAACT,MAAyB;AACrD,QAAMI,IAASJ,KAAWA,EAAQ,WAAWA,IAAU;AAEvD,EAAAL,GAAe,QAAQ,CAACe,MAAS;AAC/B,IAAAZ,GAAuBY,EAAK,UAAU,MAAMN,CAAM;AAAA,EACpD,CAAC;AACH;AAGI,SAAS,OAAMD,GAAA,IAEjBrjB,EAAY,UAAU,oBAAoB,MAAMqjB,GAAA,GAAgB;AAAA,EAC9D,MAAM;AAAA,CACP;","x_google_ignoreList":[0,1,27]}