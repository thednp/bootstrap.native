{"version":3,"file":"index-C5Zsgm8U.js","sources":["../../node_modules/.pnpm/@thednp+position-observer@1.0.8/node_modules/@thednp/position-observer/dist/index.mjs"],"sourcesContent":["const p = (t) => t != null && typeof t == \"object\" || !1, d = (t) => p(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, a = (t) => d(t) && t.nodeType === 1 || !1, k = (t) => typeof t == \"function\" || !1, v = \"1.0.8\", f = \"PositionObserver Error\";\nclass y {\n  entries;\n  static version = v;\n  _tick;\n  _root;\n  _callback;\n  /**\n   * The constructor takes two arguments, a `callback`, which is called\n   * whenever the position of an observed element changes and an `options` object.\n   * The callback function should take an array of `PositionObserverEntry` objects\n   * as its only argument, but it's not required.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   * @param options the options of this observer\n   */\n  constructor(e, i) {\n    if (!k(e))\n      throw new Error(`${f}: ${e} is not a function.`);\n    this.entries = /* @__PURE__ */ new Map(), this._callback = e, this._root = a(i?.root) ? i.root : document?.documentElement, this._tick = 0;\n  }\n  /**\n   * Start observing the position of the specified element.\n   * If the element is not currently attached to the DOM,\n   * it will NOT be added to the entries.\n   *\n   * @param target an `Element` target\n   */\n  observe = (e) => {\n    if (!a(e))\n      throw new Error(\n        `${f}: ${e} is not an instance of Element.`\n      );\n    this._root.contains(e) && this._new(e).then(({ boundingClientRect: i }) => {\n      if (i && !this.getEntry(e)) {\n        const { clientWidth: s, clientHeight: n } = this._root;\n        this.entries.set(e, {\n          target: e,\n          boundingClientRect: i,\n          clientWidth: s,\n          clientHeight: n\n        });\n      }\n      this._tick || (this._tick = requestAnimationFrame(this._runCallback));\n    });\n  };\n  /**\n   * Stop observing the position of the specified element.\n   *\n   * @param target an `Element` target\n   */\n  unobserve = (e) => {\n    this.entries.has(e) && this.entries.delete(e);\n  };\n  /**\n   * Private method responsible for all the heavy duty,\n   * the observer's runtime.\n   */\n  _runCallback = () => {\n    if (!this.entries.size) return;\n    const { clientWidth: e, clientHeight: i } = this._root, s = new Promise((n) => {\n      const o = [];\n      this.entries.forEach(\n        ({\n          target: r,\n          boundingClientRect: c,\n          clientWidth: u,\n          clientHeight: _\n        }) => {\n          this._root.contains(r) && this._new(r).then(({ boundingClientRect: h, isIntersecting: m }) => {\n            if (!m) return;\n            const { left: b, top: w } = h;\n            if (c.top !== w || c.left !== b || u !== e || _ !== i) {\n              const l = {\n                target: r,\n                boundingClientRect: h,\n                clientHeight: i,\n                clientWidth: e\n              };\n              this.entries.set(r, l), o.push(l);\n            }\n          });\n        }\n      ), n(o);\n    });\n    this._tick = requestAnimationFrame(async () => {\n      const n = await s;\n      n.length && this._callback(n, this), this._runCallback();\n    });\n  };\n  /**\n   * Check intersection status and resolve it\n   * right away.\n   *\n   * @param target an `Element` target\n   */\n  _new = (e) => new Promise((i) => {\n    new IntersectionObserver(\n      ([n], o) => {\n        o.disconnect(), i(n);\n      }\n    ).observe(e);\n  });\n  /**\n   * Find the entry for a given target.\n   *\n   * @param target an `HTMLElement` target\n   */\n  getEntry = (e) => this.entries.get(e);\n  /**\n   * Immediately stop observing all elements.\n   */\n  disconnect = () => {\n    cancelAnimationFrame(this._tick), this.entries.clear(), this._tick = 0;\n  };\n}\nexport {\n  y as default\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["p","t","d","e","k","v","f","o","r","c","u","_","m","b","w","n"],"mappings":"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","x_google_ignoreList":[0]}