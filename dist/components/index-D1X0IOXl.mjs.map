{"version":3,"file":"index-D1X0IOXl.mjs","sources":["../../node_modules/.pnpm/@thednp+position-observer@1.0.8/node_modules/@thednp/position-observer/dist/index.mjs"],"sourcesContent":["const p = (t) => t != null && typeof t == \"object\" || !1, d = (t) => p(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, a = (t) => d(t) && t.nodeType === 1 || !1, k = (t) => typeof t == \"function\" || !1, v = \"1.0.8\", f = \"PositionObserver Error\";\nclass y {\n  entries;\n  static version = v;\n  _tick;\n  _root;\n  _callback;\n  /**\n   * The constructor takes two arguments, a `callback`, which is called\n   * whenever the position of an observed element changes and an `options` object.\n   * The callback function should take an array of `PositionObserverEntry` objects\n   * as its only argument, but it's not required.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   * @param options the options of this observer\n   */\n  constructor(e, i) {\n    if (!k(e))\n      throw new Error(`${f}: ${e} is not a function.`);\n    this.entries = /* @__PURE__ */ new Map(), this._callback = e, this._root = a(i?.root) ? i.root : document?.documentElement, this._tick = 0;\n  }\n  /**\n   * Start observing the position of the specified element.\n   * If the element is not currently attached to the DOM,\n   * it will NOT be added to the entries.\n   *\n   * @param target an `Element` target\n   */\n  observe = (e) => {\n    if (!a(e))\n      throw new Error(\n        `${f}: ${e} is not an instance of Element.`\n      );\n    this._root.contains(e) && this._new(e).then(({ boundingClientRect: i }) => {\n      if (i && !this.getEntry(e)) {\n        const { clientWidth: s, clientHeight: n } = this._root;\n        this.entries.set(e, {\n          target: e,\n          boundingClientRect: i,\n          clientWidth: s,\n          clientHeight: n\n        });\n      }\n      this._tick || (this._tick = requestAnimationFrame(this._runCallback));\n    });\n  };\n  /**\n   * Stop observing the position of the specified element.\n   *\n   * @param target an `Element` target\n   */\n  unobserve = (e) => {\n    this.entries.has(e) && this.entries.delete(e);\n  };\n  /**\n   * Private method responsible for all the heavy duty,\n   * the observer's runtime.\n   */\n  _runCallback = () => {\n    if (!this.entries.size) return;\n    const { clientWidth: e, clientHeight: i } = this._root, s = new Promise((n) => {\n      const o = [];\n      this.entries.forEach(\n        ({\n          target: r,\n          boundingClientRect: c,\n          clientWidth: u,\n          clientHeight: _\n        }) => {\n          this._root.contains(r) && this._new(r).then(({ boundingClientRect: h, isIntersecting: m }) => {\n            if (!m) return;\n            const { left: b, top: w } = h;\n            if (c.top !== w || c.left !== b || u !== e || _ !== i) {\n              const l = {\n                target: r,\n                boundingClientRect: h,\n                clientHeight: i,\n                clientWidth: e\n              };\n              this.entries.set(r, l), o.push(l);\n            }\n          });\n        }\n      ), n(o);\n    });\n    this._tick = requestAnimationFrame(async () => {\n      const n = await s;\n      n.length && this._callback(n, this), this._runCallback();\n    });\n  };\n  /**\n   * Check intersection status and resolve it\n   * right away.\n   *\n   * @param target an `Element` target\n   */\n  _new = (e) => new Promise((i) => {\n    new IntersectionObserver(\n      ([n], o) => {\n        o.disconnect(), i(n);\n      }\n    ).observe(e);\n  });\n  /**\n   * Find the entry for a given target.\n   *\n   * @param target an `HTMLElement` target\n   */\n  getEntry = (e) => this.entries.get(e);\n  /**\n   * Immediately stop observing all elements.\n   */\n  disconnect = () => {\n    cancelAnimationFrame(this._tick), this.entries.clear(), this._tick = 0;\n  };\n}\nexport {\n  y as default\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["p","t","d","e","k","v","f","o","r","_","m","b","w","n"],"mappings":"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","x_google_ignoreList":[0]}