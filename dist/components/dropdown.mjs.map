{"version":3,"file":"dropdown.mjs","sources":["../../src/strings/dropdownComponent.ts","../../src/strings/dropdownMenuClass.ts","../../src/util/isEmptyAnchor.ts","../../src/components/dropdown.ts"],"sourcesContent":["/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\"))?.slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\"))?.slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  MouseEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport showClass from \"~/strings/showClass\";\nimport dataBsToggle from \"~/strings/dataBsToggle\";\nimport dropdownClasses from \"~/strings/dropdownClasses\";\nimport dropdownComponent from \"~/strings/dropdownComponent\";\nimport dropdownMenuClass from \"~/strings/dropdownMenuClass\";\nimport isEmptyAnchor from \"~/util/isEmptyAnchor\";\nimport isDisabled from \"~/util/isDisabled\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"~/interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: Element) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: Element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: Element & EventTarget };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n  // don't apply any style on mobile view\n  // istanbul ignore if @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") === \"static\") return;\n\n  const RTL = isRTL(element);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n  resetProps.forEach((p) => {\n    const style: { [key: string]: string } = {};\n    style[p] = \"\";\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass = dropdownClasses.find((c) => hasClass(parentElement, c)) ||\n    /* istanbul ignore next @preserve: fallback position */\n    dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: \"100%\" },\n    dropup: { top: \"auto\", bottom: \"100%\" },\n    dropstart: RTL\n      ? { left: \"100%\", right: \"auto\" }\n      : { left: \"auto\", right: \"100%\" },\n    dropend: RTL\n      ? { left: \"auto\", right: \"100%\" }\n      : { left: \"100%\", right: \"auto\" },\n    menuStart: RTL\n      ? { right: \"0\", left: \"auto\" }\n      : { right: \"auto\", left: \"0\" },\n    menuEnd: RTL ? { right: \"auto\", left: \"0\" } : { right: \"0\", left: \"auto\" },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const {\n    left: targetLeft,\n    top: targetTop,\n    width: targetWidth,\n    height: targetHeight,\n  } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed =\n    targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed =\n    targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n    targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n    targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (\n    horizontalClass.includes(positionClass) && leftFullExceed &&\n    rightFullExceed\n  ) {\n    positionClass = dropdownString;\n  }\n  if (\n    positionClass === dropstartString &&\n    (!RTL ? leftFullExceed : rightFullExceed)\n  ) {\n    positionClass = dropendString;\n  }\n  if (\n    positionClass === dropendString &&\n    (RTL ? leftFullExceed : rightFullExceed)\n  ) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: \"auto\",\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust:\n      | { left: \"auto\" | number; right: \"auto\" | number }\n      | undefined = { left: \"auto\", right: \"auto\" };\n    /* istanbul ignore else @preserve */\n    if (!leftExceed && rightExceed && !RTL) {\n      posAjust = { left: \"auto\", right: 0 };\n    }\n    /* istanbul ignore else @preserve */\n    if (leftExceed && !rightExceed && RTL) {\n      posAjust = { left: 0, right: \"auto\" };\n    }\n    /* istanbul ignore else @preserve */\n    if (posAjust) {\n      ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    // istanbul ignore else @preserve\n    if (menuEnd) {\n      const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n        ? \"menuStart\"\n        : /* istanbul ignore next @preserve */ \"menuEnd\";\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n  // trigger updated event\n  dispatchEvent(parentElement, updatedDropdownEvent);\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return Array.from(menu.children)\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c as HTMLElement;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild as HTMLElement;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: Element,\n): Element | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<Element>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore if @preserve\n  if (!isHTMLElement(target)) return;\n\n  // some weird FF bug #409\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const isForm = parentElement &&\n    parentElement.contains(target) &&\n    (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n  if (\n    [mouseclickEvent, mousedownEvent].includes(type) &&\n    isEmptyAnchor(target)\n  ) {\n    e.preventDefault();\n  }\n\n  // istanbul ignore else @preserve\n  if (\n    !isForm && type !== focusEvent && target !== element && target !== menu\n  ) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nfunction dropdownClickHandler(this: HTMLElement, e: MouseEvent<HTMLElement>) {\n  const self = getDropdownInstance(this);\n\n  // istanbul ignore if @preserve\n  if (isDisabled(this)) return;\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  e.stopPropagation();\n  self.toggle();\n  // istanbul ignore else @preserve\n  if (isEmptyAnchor(this)) e.preventDefault();\n}\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: Element, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this) as HTMLElement;\n  /* istanbul ignore if @preserve */\n  if (!element) return;\n\n  const self = getDropdownInstance(element);\n  const { activeElement } = getDocument(element) as Document & {\n    activeElement: HTMLElement;\n  };\n\n  // istanbul ignore if @preserve\n  if (!self || !activeElement) return;\n\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (\n    menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n  ) {\n    let idx = menuItems.indexOf(activeElement);\n    // istanbul ignore else @preserve\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    // istanbul ignore else @preserve\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare element: HTMLElement;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName<HTMLElement>(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    // istanbul ignore if @preserve\n    if (!menu) return;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = menu;\n    this._observer = new PositionObserver(\n      () => styleDropdown(this),\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (open) return;\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement &&\n      getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n      (e) => {\n        e.relatedTarget = element;\n      },\n    );\n\n    dispatchEvent(parentElement, showDropdownEvent);\n    // istanbul ignore if @preserve\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"true\");\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element as HTMLElement;\n    });\n\n    dispatchEvent(parentElement, hideDropdownEvent);\n    // istanbul ignore if @preserve\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"false\");\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["dropdownComponent","dropdownMenuClass","isEmptyAnchor","element","parentAnchor","closest","hasAttribute","getAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","dataBsToggle","getDropdownInstance","getInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","createCustomEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","self","menu","parentElement","options","offset","getElementStyle","RTL","isRTL","menuEnd","hasClass","p","style","setElementStyle","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","ObjectAssign","posAjust","margins","x","dispatchEvent","getMenuItems","c","firstElementChild","toggleDropdownDismiss","action","addListener","removeListener","doc","getDocument","mouseclickEvent","dropdownDismissHandler","focusEvent","keydownEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","getElementsByClassName","showClass","e","target","type","isHTMLElement","isForm","mousedownEvent","dropdownClickHandler","isDisabled","keyArrowDown","keyArrowUp","code","activeElement","open","menuItems","idx","focus","keyEscape","BaseComponent","config","PositionObserver","currentElement","currentInstance","addClass","setAttribute","ariaExpanded","removeClass","add"],"mappings":"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"}