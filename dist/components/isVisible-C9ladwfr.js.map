{"version":3,"file":"isVisible-C9ladwfr.js","sources":["../../src/strings/modalComponent.ts","../../src/strings/offcanvasComponent.ts","../../src/strings/fixedTopClass.ts","../../src/strings/fixedBottomClass.ts","../../src/strings/stickyTopClass.ts","../../src/strings/positionStickyClass.ts","../../src/util/scrollbar.ts","../../src/util/backdrop.ts","../../src/util/isVisible.ts"],"sourcesContent":["/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName<HTMLElement>(fixedTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(fixedBottomClass, parent),\n  ...getElementsByClassName<HTMLElement>(stickyTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(positionStickyClass, parent),\n  ...getElementsByClassName<HTMLElement>(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: Element) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: Element) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: Element, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad\n    ? /* istanbul ignore next */ 0\n    : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore if @preserve\n  if (!overflow) return;\n\n  setElementStyle(bd, {\n    overflow: \"hidden\",\n    paddingRight: `${bodyPad + sbWidth}px`,\n  });\n\n  // istanbul ignore if @preserve\n  if (!fixedItems.length) return;\n\n  fixedItems.forEach((fixed) => {\n    const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n    fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n    // istanbul ignore else @preserve\n    if (\n      [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n    ) {\n      const itemMValue = getElementStyle(fixed, \"marginRight\");\n      fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n    }\n  });\n};\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: Element) => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: Element,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: Element): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n"],"names":["modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","parent","getElementsByClassName","resetScrollbar","element","bd","getDocumentBody","setElementStyle","fixedItems","fixed","measureScrollbar","clientWidth","getDocumentElement","innerWidth","getWindow","setScrollbar","overflow","bodyPad","getElementStyle","sbWidth","itemPadValue","c","hasClass","itemMValue","backdropString","modalBackdropClass","modalString","offcanvasBackdropClass","offcanvasString","modalActiveSelector","showClass","offcanvasActiveSelector","overlay","createElement","getCurrentOpen","querySelector","getDocument","toggleOverlayType","isModal","targetClass","removeClass","addClass","appendOverlay","hasFade","appendPopup","fadeClass","showOverlay","reflow","hideOverlay","removeOverlay","removePopup","isVisible","isHTMLElement"],"mappings":"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"}